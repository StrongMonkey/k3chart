apiVersion: v1
kind: Service
metadata:
  name: gatekeeper-webhook-service
  namespace: gatekeeper-system
spec:
  selector:
    app: GATEKEEPER_APP_LABEL
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: configs.config.gatekeeper.sh
  annotations:
    helm.sh/hook: crd-install
    helm.sh/hook-delete-policy: before-hook-creation
status: null
spec:
  names:
    shortNames:
      - config # add shortName to CRD until https://github.com/kubernetes-sigs/kubebuilder/issues/404 is solved
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: constrainttemplates.templates.gatekeeper.sh
  annotations:
    helm.sh/hook: crd-install
    helm.sh/hook-delete-policy: before-hook-creation
status: null
spec:
  names:
    shortNames:
      - constraints # add shortName to CRD until https://github.com/kubernetes-sigs/kubebuilder/issues/404 is solved
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gatekeeper-controller-manager
  namespace: gatekeeper-system
spec:
  replicas: HELMSUBST_DEPLOYMENT_REPLICAS
  selector:
    matchLabels:
      app: gatekeeper-operator
      release: RELEASE_NAME
  template:
    spec:
      containers:
        - name: manager
          args:
            - --audit-interval={{ .Values.auditInterval }}
            - --port=8443
            - --logtostderr
            - --constraint-violations-limit={{ .Values.constraintViolationsLimit }}
            - --audit-from-cache={{ .Values.auditFromCache }}
            - --exempt-namespace=gatekeeper-system
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.release }}"
          resources: HELMSUBST_DEPLOYMENT_CONTAINER_RESOURCES
      nodeSelector: HELMSUBST_DEPLOYMENT_POD_SCHEDULING
