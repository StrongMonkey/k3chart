diff -Nr packages/monitoring/charts-original/.helmignore packages/monitoring/charts/.helmignore
0a1,26
> # Patterns to ignore when building packages.
> # This supports shell glob matching, relative path matching, and
> # negation (prefixed with !). Only one pattern per line.
> .DS_Store
> # Common VCS dirs
> .git/
> .gitignore
> .bzr/
> .bzrignore
> .hg/
> .hgignore
> .svn/
> # Common backup files
> *.swp
> *.bak
> *.tmp
> *~
> # Various IDEs
> .project
> .idea/
> *.tmproj
> # helm/charts
> OWNERS
> hack/
> ci/
> prometheus-operator-*.tgz
diff -Nr packages/monitoring/charts-original/CONTRIBUTING.md packages/monitoring/charts/CONTRIBUTING.md
0a1,10
> # Contributing Guidelines
> ## How to contribute to this chart
> 1. Fork this repository, develop and test your Chart.
> 1. Bump the chart version for every change.
> 1. Ensure PR title has the prefix `[stable/prometheus-operator]`
> 1. When making changes to rules or dashboards, see the README.md section on how to sync data from upstream repositories
> 1. Check the `hack/minikube` folder has scripts to set up minikube and components of this chart that will allow all components to be scraped. You can use this configuration when validating your changes.
> 1. Check for changes of RBAC rules.
> 1. Check for changes in CRD specs.
> 1. PR must pass the linter (`helm lint`)
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/Chart.yaml packages/monitoring/charts/Chart.yaml
0a1,22
> apiVersion: v1
> appVersion: 0.37.0
> description: Provides easy monitoring definitions for Kubernetes services, and deployment
>   and management of Prometheus instances.
> engine: gotpl
> home: https://github.com/coreos/prometheus-operator
> icon: https://raw.githubusercontent.com/prometheus/prometheus.github.io/master/assets/prometheus_logo-cb55bb5c346.png
> keywords:
> - operator
> - prometheus
> maintainers:
> - name: vsliouniaev
> - name: bismarck
> - email: gianrubio@gmail.com
>   name: gianrubio
> name: prometheus-operator
> sources:
> - https://github.com/coreos/kube-prometheus
> - https://github.com/coreos/prometheus-operator
> - https://coreos.com/operators/prometheus
> tillerVersion: '>=2.12.0'
> version: 8.12.1
diff -Nr packages/monitoring/charts-original/README.md packages/monitoring/charts/README.md
0a1,690
> # prometheus-operator
> 
> Installs [prometheus-operator](https://github.com/coreos/prometheus-operator) to create/configure/manage Prometheus clusters atop Kubernetes. This chart includes multiple components and is suitable for a variety of use-cases.
> 
> The default installation is intended to suit monitoring a kubernetes cluster the chart is deployed onto. It closely matches the kube-prometheus project.
> - [prometheus-operator](https://github.com/coreos/prometheus-operator)
> - [prometheus](https://prometheus.io/)
> - [alertmanager](https://prometheus.io/)
> - [node-exporter](https://github.com/helm/charts/tree/master/stable/prometheus-node-exporter)
> - [kube-state-metrics](https://github.com/helm/charts/tree/master/stable/kube-state-metrics)
> - [grafana](https://github.com/helm/charts/tree/master/stable/grafana)
> - service monitors to scrape internal kubernetes components
>   - kube-apiserver
>   - kube-scheduler
>   - kube-controller-manager
>   - etcd
>   - kube-dns/coredns
>   - kube-proxy
> 
> With the installation, the chart also includes dashboards and alerts.
> 
> The same chart can be used to run multiple prometheus instances in the same cluster if required. To achieve this, the other components need to be disabled - it is necessary to run only one instance of prometheus-operator and a pair of alertmanager pods for an HA configuration.
> 
> ## TL;DR;
> 
> ```console
> $ helm install stable/prometheus-operator
> ```
> 
> ## Introduction
> 
> This chart bootstraps a [prometheus-operator](https://github.com/coreos/prometheus-operator) deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager.  The chart can be installed multiple times to create separate Prometheus instances managed by Prometheus Operator.
> 
> ## Prerequisites
>   - Kubernetes 1.10+ with Beta APIs
>   - Helm 2.12+ (If using Helm < 2.14, [see below for CRD workaround](#Helm-fails-to-create-CRDs))
> 
> ## Installing the Chart
> 
> To install the chart with the release name `my-release`:
> 
> ```console
> $ helm install --name my-release stable/prometheus-operator
> ```
> 
> The command deploys prometheus-operator on the Kubernetes cluster in the default configuration. The [configuration](#configuration) section lists the parameters that can be configured during installation.
> 
> The default installation includes Prometheus Operator, Alertmanager, Grafana, and configuration for scraping Kubernetes infrastructure.
> 
> ## Uninstalling the Chart
> 
> To uninstall/delete the `my-release` deployment:
> 
> ```console
> $ helm delete my-release
> ```
> 
> The command removes all the Kubernetes components associated with the chart and deletes the release.
> 
> CRDs created by this chart are not removed by default and should be manually cleaned up:
> 
> ```console
> kubectl delete crd prometheuses.monitoring.coreos.com
> kubectl delete crd prometheusrules.monitoring.coreos.com
> kubectl delete crd servicemonitors.monitoring.coreos.com
> kubectl delete crd podmonitors.monitoring.coreos.com
> kubectl delete crd alertmanagers.monitoring.coreos.com
> ```
> 
> ## Work-Arounds for Known Issues
> 
> ### Running on private GKE clusters
> When Google configure the control plane for private clusters, they automatically configure VPC peering between your Kubernetes clusterâ€™s network and a separate Google managed project. In order to restrict what Google are able to access within your cluster, the firewall rules configured restrict access to your Kubernetes pods. This means that in order to use the webhook component with a GKE private cluster, you must configure an additional firewall rule to allow the GKE control plane access to your webhook pod.
> 
> You can read more information on how to add firewall rules for the GKE control plane nodes in the [GKE docs](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#add_firewall_rules)
> 
> Alternatively, you can disable the hooks by setting `prometheusOperator.admissionWebhooks.enabled=false`.
> 
> ### Helm fails to create CRDs
> You should upgrade to Helm 2.14 + in order to avoid this issue. However, if you are stuck with an earlier Helm release you should instead use the following approach: Due to a bug in helm, it is possible for the 5 CRDs that are created by this chart to fail to get fully deployed before Helm attempts to create resources that require them. This affects all versions of Helm with a [potential fix pending](https://github.com/helm/helm/pull/5112). In order to work around this issue when installing the chart you will need to make sure all 5 CRDs exist in the cluster first and disable their previsioning by the chart:
> 
> 1. Create CRDs
> ```console
> kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
> kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
> kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
> kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
> kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
> kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
> 
> ```
> 
> 2. Wait for CRDs to be created, which should only take a few seconds
> 
> 3. Install the chart, but disable the CRD provisioning by setting `prometheusOperator.createCustomResource=false`
> ```console
> $ helm install --name my-release stable/prometheus-operator --set prometheusOperator.createCustomResource=false
> ```
> 
> ## Upgrading an existing Release to a new major version
> 
> A major chart version change (like v1.2.3 -> v2.0.0) indicates that there is an
> incompatible breaking change needing manual actions.
> 
> ### Upgrading from 7.x.x to 8.x.x
> Due to new template functions being used in the rules in version 8.x.x of the chart, an upgrade to Prometheus Operator and Prometheus is necessary in order to support them.
> First, upgrade to the latest version of 7.x.x
> ```sh
> helm upgrade <your-release-name> stable/prometheus-operator --version 7.4.0
> ```
> Then upgrade to 8.x.x
> ```sh
> helm upgrade <your-release-name> stable/prometheus-operator
> ```
> Minimal recommended Prometheus version for this chart release is `2.12.x`
> 
> ### Upgrading from 6.x.x to 7.x.x
> Due to a change in grafana subchart, version 7.x.x now requires Helm >= 2.12.0.
> 
> ### Upgrading from 5.x.x to 6.x.x
> Due to a change in deployment labels of kube-state-metrics, the upgrade requires `helm upgrade --force` in order to re-create the deployment. If this is not done an error will occur indicating that the deployment cannot be modified:
> 
> ```
> invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{"app.kubernetes.io/name":"kube-state-metrics"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable
> ```
> If this error has already been encountered, a `helm history` command can be used to determine which release has worked, then `helm rollback` to the release, then `helm upgrade --force` to this new one
> 
> ## prometheus.io/scrape
> The prometheus operator does not support annotation-based discovery of services, using the `serviceMonitor` CRD in its place as it provides far more configuration options. For information on how to use servicemonitors, please see the documentation on the coreos/prometheus-operator documentation here: [Running Exporters](https://github.com/coreos/prometheus-operator/blob/master/Documentation/user-guides/running-exporters.md)
> 
> ## Configuration
> 
> The following tables list the configurable parameters of the prometheus-operator chart and their default values.
> 
> ### General
> | Parameter | Description | Default |
> | ----- | ----------- | ------ |
> | `additionalPrometheusRulesMap` | Map of `prometheusRule` objects to create with the key used as the name of the rule spec. If defined, this will take precedence over `additionalPrometheusRules`. See https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusrulespec. | `nil` |
> | `additionalPrometheusRules` | *DEPRECATED* Will be removed in a future release.  Please use **additionalPrometheusRulesMap** instead.  List of `prometheusRule` objects to create. See https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusrulespec. | `[]` |
> | `commonLabels` | Labels to apply to all resources | `[]` |
> | `defaultRules.annotations` | Annotations for default rules for monitoring the cluster | `{}` |
> | `defaultRules.appNamespacesTarget` | Specify target Namespaces for app alerts | `".*"` |
> | `defaultRules.create` | Create default rules for monitoring the cluster | `true` |
> | `defaultRules.labels` | Labels for default rules for monitoring the cluster | `{}` |
> | `defaultRules.runbookUrl` | URL prefix for default rule runbook_url annotations | `https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#` |
> | `defaultRules.rules.PrometheusOperator` | Create Prometheus Operator  default rules| `true` |
> | `defaultRules.rules.alertmanager` | Create default rules for Alert Manager | `true` |
> | `defaultRules.rules.etcd` | Create default rules for ETCD | `true` |
> | `defaultRules.rules.general` | Create General default rules| `true` |
> | `defaultRules.rules.k8s` | Create K8S default rules| `true` |
> | `defaultRules.rules.kubeApiserver` | Create Api Server default rules| `true` |
> | `defaultRules.rules.kubeApiserverError` | Create Api Server Error default rules| `true` |
> | `defaultRules.rules.kubePrometheusNodeAlerting` | Create Node Alerting default rules| `true` |
> | `defaultRules.rules.kubePrometheusNodeRecording` | Create Node Recording default rules| `true` |
> | `defaultRules.rules.kubeScheduler` | Create Kubernetes Scheduler default rules| `true` |
> | `defaultRules.rules.kubernetesAbsent` | Create Kubernetes Absent (example API Server down) default rules| `true` |
> | `defaultRules.rules.kubernetesApps` | Create Kubernetes Apps  default rules| `true` |
> | `defaultRules.rules.kubernetesResources` | Create Kubernetes Resources  default rules| `true` |
> | `defaultRules.rules.kubernetesStorage` | Create Kubernetes Storage  default rules| `true` |
> | `defaultRules.rules.kubernetesSystem` | Create Kubernetes System  default rules| `true` |
> | `defaultRules.rules.network` | Create networking default rules | `true` |
> | `defaultRules.rules.node` | Create Node default rules | `true` |
> | `defaultRules.rules.prometheus` | Create Prometheus  default rules| `true` |
> | `defaultRules.rules.time` | Create time default rules | `true` |
> | `fullnameOverride` | Provide a name to substitute for the full names of resources |`""`|
> | `global.imagePullSecrets` | Reference to one or more secrets to be used when pulling images | `[]` |
> | `global.rbac.create` | Create RBAC resources | `true` |
> | `global.rbac.pspEnabled` | Create pod security policy resources | `true` |
> | `kubeTargetVersionOverride` | Provide a target gitVersion of K8S, in case .Capabilites.KubeVersion is not available (e.g. `helm template`) |`""`|
> | `nameOverride` | Provide a name in place of `prometheus-operator` |`""`|
> | `kubeTargetVersionOverride` | Provide a k8s version |`""`|
> 
> ### Prometheus Operator
> | Parameter | Description | Default |
> | ----- | ----------- | ------ |
> | `prometheusOperator.admissionWebhooks.enabled` | Create PrometheusRules admission webhooks. Mutating webhook will patch PrometheusRules objects indicating they were validated. Validating webhook will check the rules syntax. | `true` |
> | `prometheusOperator.admissionWebhooks.failurePolicy` | Failure policy for admission webhooks | `Fail` |
> | `prometheusOperator.admissionWebhooks.patch.enabled` | If true, will use a pre and post install hooks to generate a CA and certificate to use for the prometheus operator tls proxy, and patch the created webhooks with the CA. | `true` |
> | `prometheusOperator.admissionWebhooks.patch.image.pullPolicy` | Image pull policy for the webhook integration jobs | `IfNotPresent` |
> | `prometheusOperator.admissionWebhooks.patch.image.repository` | Repository to use for the webhook integration jobs | `jettech/kube-webhook-certgen` |
> | `prometheusOperator.admissionWebhooks.patch.image.tag` | Tag to use for the webhook integration jobs | `v1.0.0` |
> | `prometheusOperator.admissionWebhooks.patch.resources` | Resource limits for admission webhook | `{}` |
> | `prometheusOperator.admissionWebhooks.patch.nodeSelector` | Node selector for running admission hook patch jobs | `nil` |
> | `prometheusOperator.admissionWebhooks.patch.podAnnotations` | Annotations for the webhook job pods | `nil` |
> | `prometheusOperator.admissionWebhooks.patch.priorityClassName` | Priority class for the webhook integration jobs | `nil` |
> | `prometheusOperator.affinity` | Assign custom affinity rules to the prometheus operator https://kubernetes.io/docs/concepts/configuration/assign-pod-node/ | `{}` |
> | `prometheusOperator.cleanupCustomResource` | Attempt to delete CRDs when the release is removed. This option may be useful while testing but is not recommended, as deleting the CRD definition will delete resources and prevent the operator from being able to clean up resources that it manages | `false` |
> | `prometheusOperator.configReloaderCpu` | Set the prometheus config reloader side-car CPU limit. If unset, uses the prometheus-operator project default | `nil` |
> | `prometheusOperator.configReloaderMemory` | Set the prometheus config reloader side-car memory limit. If unset, uses the prometheus-operator project default | `nil` |
> | `prometheusOperator.configmapReloadImage.repository` | Repository for configmapReload image | `quay.io/coreos/configmap-reload` |
> | `prometheusOperator.configmapReloadImage.tag` | Tag for configmapReload image | `v0.0.1` |
> | `prometheusOperator.createCustomResource` | Create CRDs. Required if deploying anything besides the operator itself as part of the release. The operator will create / update these on startup. If your Helm version < 2.10 you will have to either create the CRDs first or deploy the operator first, then the rest of the resources. Regardless of value of this, Helm v3+ will install the CRDs if those are not present already. Use `--skip-crds` with `helm install` if you want to skip CRD creation | `true` |
> | `prometheusOperator.namespaces` |  Namespaces to scope the interaction of the Prometheus Operator and the apiserver (allow list). This is mutually exclusive with `denyNamespaces`. Setting this to an empty object will disable the configuration | `{}` |
> | `prometheusOperator.namespaces.releaseNamespace` | Include the release namespace | `false` |
> | `prometheusOperator.namespaces.additional` | Include additional namespaces besides the release namespace | `[]` |
> | `prometheusOperator.manageCrds` |If true prometheus operator will create and update its CRDs on startup | `true` |
> | `prometheusOperator.denyNamespaces` | Namespaces not to scope the interaction of the Prometheus Operator (deny list). This is mutually exclusive with `namespaces` | `[]` |
> | `prometheusOperator.enabled` | Deploy Prometheus Operator. Only one of these should be deployed into the cluster | `true` |
> | `enforcedNamespaceLabel` | enforces adding a namespace label of origin for each alert and metric that is user created. | `""` |
> | `prometheusOperator.hyperkubeImage.repository` | Image pull policy for hyperkube image used to perform maintenance tasks | `IfNotPresent` |
> | `prometheusOperator.hyperkubeImage.repository` | Repository for hyperkube image used to perform maintenance tasks | `k8s.gcr.io/hyperkube` |
> | `prometheusOperator.hyperkubeImage.tag` | Tag for hyperkube image used to perform maintenance tasks | `v1.12.1` |
> | `prometheusOperator.image.pullPolicy` | Pull policy for prometheus operator image | `IfNotPresent` |
> | `prometheusOperator.image.repository` | Repository for prometheus operator image | `quay.io/coreos/prometheus-operator` |
> | `prometheusOperator.image.tag` | Tag for prometheus operator image | `v0.37.0` |
> | `prometheusOperator.kubeletService.enabled` | If true, the operator will create and maintain a service for scraping kubelets | `true` |
> | `prometheusOperator.kubeletService.namespace` | Namespace to deploy kubelet service | `kube-system` |
> | `prometheusOperator.logFormat` | Operator log output formatting | `"logfmt"` |
> | `prometheusOperator.logLevel` | Operator log level. Possible values: "all", "debug",	"info",	"warn",	"error", "none" | `"info"` |
> | `prometheusOperator.nodeSelector` | Prometheus operator node selector https://kubernetes.io/docs/user-guide/node-selection/ | `{}` |
> | `prometheusOperator.podAnnotations` | Annotations to add to the operator pod | `{}` |
> | `prometheusOperator.podLabels` | Labels to add to the operator pod | `{}` |
> | `prometheusOperator.priorityClassName` | Name of Priority Class to assign pods | `nil` |
> | `prometheusOperator.prometheusConfigReloaderImage.repository` | Repository for config-reloader image | `quay.io/coreos/prometheus-config-reloader` |
> | `prometheusOperator.prometheusConfigReloaderImage.tag` | Tag for config-reloader image | `v0.37.0` |
> | `prometheusOperator.resources` | Resource limits for prometheus operator | `{}` |
> | `prometheusOperator.securityContext` | SecurityContext for prometheus operator | `{"runAsNonRoot": true, "runAsUser": 65534}` |
> | `prometheusOperator.service.annotations` | Annotations to be added to the prometheus operator service | `{}` |
> | `prometheusOperator.service.clusterIP` | Prometheus operator service clusterIP IP | `""` |
> | `prometheusOperator.service.externalIPs` | List of IP addresses at which the Prometheus Operator server service is available | `[]` |
> | `prometheusOperator.service.labels` |  Prometheus Operator Service Labels | `{}` |
> | `prometheusOperator.service.loadBalancerIP` |  Prometheus Operator Loadbalancer IP | `""` |
> | `prometheusOperator.service.loadBalancerSourceRanges` | Prometheus Operator Load Balancer Source Ranges | `[]` |
> | `prometheusOperator.service.nodePortTls` | TLS port to expose prometheus operator service on each node | `30443` |
> | `prometheusOperator.service.nodePort` | Port to expose prometheus operator service on each node | `30080` |
> | `prometheusOperator.service.type` | Prometheus operator service type | `ClusterIP` |
> | `prometheusOperator.serviceAccount.create` | Create a serviceaccount for the operator | `true` |
> | `prometheusOperator.serviceAccount.name` | Operator serviceAccount name | `""` |
> | `prometheusOperator.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `prometheusOperator.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping the operator instance. | `` |
> | `prometheusOperator.serviceMonitor.relabelings` | The `relabel_configs` for scraping the operator instance. | `` |
> | `prometheusOperator.serviceMonitor.selfMonitor` | Enable monitoring of prometheus operator | `true` |
> | `prometheusOperator.tlsProxy.enabled` | Enable a TLS proxy container. Only the `squareup/ghostunnel` command line arguments are currently supported and the secret where the cert is loaded from is expected to be provided by the admission webhook | `true` |
> | `prometheusOperator.tlsProxy.image.repository` | Repository for the TLS proxy container | `squareup/ghostunnel` |
> | `prometheusOperator.tlsProxy.image.tag` | Repository for the TLS proxy container | `v1.5.2` |
> | `prometheusOperator.tlsProxy.image.pullPolicy` | Image pull policy for the TLS proxy container | `IfNotPresent` |
> | `prometheusOperator.tlsProxy.resources` | Resource requests and limits for the TLS proxy container | `{}` |
> | `prometheusOperator.tolerations` | Tolerations for use with node taints https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ | `[]` |
> 
> 
> ### Prometheus
> | Parameter | Description | Default |
> | ----- | ----------- | ------ |
> | `prometheus.additionalServiceMonitors` | List of `ServiceMonitor` objects to create. See https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitorspec | `[]` |
> | `prometheus.enabled` | Deploy prometheus | `true` |
> | `prometheus.annotations` | Prometheus annotations | `{}` |
> | `prometheus.ingress.annotations` | Prometheus Ingress annotations | `{}` |
> | `prometheus.ingress.enabled` | If true, Prometheus Ingress will be created | `false` |
> | `prometheus.ingress.hosts` | Prometheus Ingress hostnames | `[]` |
> | `prometheus.ingress.labels` | Prometheus Ingress additional labels | `{}` |
> | `prometheus.ingress.paths` | Prometheus Ingress paths | `[]` |
> | `prometheus.ingress.tls` | Prometheus Ingress TLS configuration (YAML) | `[]` |
> | `prometheus.ingressPerReplica.annotations` | Prometheus pre replica Ingress annotations | `{}` |
> | `prometheus.ingressPerReplica.enabled` | If true, create an Ingress for each Prometheus server replica in the StatefulSet | `false` |
> | `prometheus.ingressPerReplica.hostPrefix` |  | `""` |
> | `prometheus.ingressPerReplica.hostDomain` |  | `""` |
> | `prometheus.ingressPerReplica.labels` | Prometheus per replica Ingress additional labels | `{}` |
> | `prometheus.ingressPerReplica.paths` | Prometheus per replica Ingress paths | `[]` |
> | `prometheus.ingressPerReplica.tlsSecretName` | Secret name containing the TLS certificate for Prometheus per replica ingress | `[]` |
> | `prometheus.podDisruptionBudget.enabled` | If true, create a pod disruption budget for prometheus pods. The created resource cannot be modified once created - it must be deleted to perform a change | `false` |
> | `prometheus.podDisruptionBudget.maxUnavailable` | Maximum number / percentage of pods that may be made unavailable | `""` |
> | `prometheus.podDisruptionBudget.minAvailable` | Minimum number / percentage of pods that should remain scheduled | `1` |
> | `prometheus.podSecurityPolicy.allowedCapabilities` | Prometheus Pod Security Policy allowed capabilities | `""` |
> | `prometheus.prometheusSpec.additionalAlertManagerConfigs` | AdditionalAlertManagerConfigs allows for manual configuration of alertmanager jobs in the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#<alertmanager_config>. AlertManager configurations specified are appended to the configurations generated by the Prometheus Operator. As AlertManager configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible AlertManager configs are going to break Prometheus after the upgrade. | `{}` |
> | `prometheus.prometheusSpec.additionalAlertRelabelConfigs` | AdditionalAlertRelabelConfigs allows specifying additional Prometheus alert relabel configurations. Alert relabel configurations specified are appended to the configurations generated by the Prometheus Operator. Alert relabel configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs. As alert relabel configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible alert relabel configs are going to break Prometheus after the upgrade. | `[]` |
> | `prometheus.prometheusSpec.additionalScrapeConfigsExternal` | Enable additional scrape configs that are managed externally to this chart. This option requires a secret in the same namespace as Prometheus with the name, `prometheus-operator-prometheus-scrape-confg` and a key of `additional-scrape-configs.yaml`. Note that the prometheus will fail to provision if the correct secret does not exist. | `false` |
> | `prometheus.prometheusSpec.additionalScrapeConfigs` | AdditionalScrapeConfigs allows specifying additional Prometheus scrape configurations. Scrape configurations are appended to the configurations generated by the Prometheus Operator. Job configurations must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#<scrape_config>. As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible scrape configs are going to break Prometheus after the upgrade. | `{}` |
> | `prometheus.prometheusSpec.additionalPrometheusSecretsAnnotations` | additionalPrometheusSecretsAnnotations allows to add annotations to the kubernetes secret. This can be useful when deploying via spinnaker to disable versioning on the secret, strategy.spinnaker.io/versioned: 'false' | `{}` |
> | `prometheus.prometheusSpec.affinity` | Assign custom affinity rules to the prometheus instance https://kubernetes.io/docs/concepts/configuration/assign-pod-node/ | `{}` |
> | `prometheus.prometheusSpec.alertingEndpoints` | Alertmanagers to which alerts will be sent https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#alertmanagerendpoints Default configuration will connect to the alertmanager deployed as part of this release | `[]` |
> | `prometheus.prometheusSpec.apiserverConfig` | Custom `kubernetes_sd_config` https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#apiserverconfig Default configuration will connect to current Kubernetes cluster | `{}` |
> | `prometheus.prometheusSpec.configMaps` | ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The ConfigMaps are mounted into /etc/prometheus/configmaps/ | `[]` |
> | `prometheus.prometheusSpec.containers` | Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to a Prometheus pod. |`[]`|
> | `prometheus.prometheusSpec.disableCompaction` | If true, pass --storage.tsdb.max-block-duration=2h to prometheus. This is already done if using Thanos |`false`|
> | `prometheus.prometheusSpec.enableAdminAPI` | EnableAdminAPI enables Prometheus the administrative HTTP API which includes functionality such as deleting time series. | `false` |
> | `prometheus.prometheusSpec.evaluationInterval` | Interval between consecutive evaluations. | `""` |
> | `prometheus.prometheusSpec.externalLabels` | The labels to add to any time series or alerts when communicating with external systems (federation, remote storage, Alertmanager). | `{}` |
> | `prometheus.prometheusSpec.externalUrl` | The external URL the Prometheus instances will be available under. This is necessary to generate correct URLs. This is necessary if Prometheus is not served from root of a DNS name. | `""` |
> | `prometheus.prometheusSpec.image.repository` | Base image to use for a Prometheus deployment. | `quay.io/prometheus/prometheus` |
> | `prometheus.prometheusSpec.image.tag` | Tag of Prometheus container image to be deployed. | `v2.15.2` |
> | `prometheus.prometheusSpec.listenLocal` | ListenLocal makes the Prometheus server listen on loopback, so that it does not bind against the Pod IP. | `false` |
> | `prometheus.prometheusSpec.logFormat` | Log format for Prometheus to be configured with. | `logfmt` |
> | `prometheus.prometheusSpec.logLevel` | Log level for Prometheus to be configured with. | `info` |
> | `prometheus.prometheusSpec.nodeSelector` | Define which Nodes the Pods are scheduled on. | `{}` |
> | `prometheus.prometheusSpec.paused` | When a Prometheus deployment is paused, no actions except for deletion will be performed on the underlying objects. | `false` |
> | `prometheus.prometheusSpec.podAntiAffinityTopologyKey` | If anti-affinity is enabled sets the topologyKey to use for anti-affinity. This can be changed to, for example `failure-domain.beta.kubernetes.io/zone`| `kubernetes.io/hostname` |
> | `prometheus.prometheusSpec.podAntiAffinity` | Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node. The default value "soft" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided. The value "hard" means that the scheduler is *required* to not schedule two replica pods onto the same node. The value "" will disable pod anti-affinity so that no anti-affinity rules will be configured. | `""` |
> | `prometheus.prometheusSpec.podMetadata` | Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata Metadata Labels and Annotations gets propagated to the prometheus pods. | `{}` |
> | `prometheus.prometheusSpec.priorityClassName` | Priority class assigned to the Pods | `""` |
> | `prometheus.prometheusSpec.prometheusExternalLabelNameClear` | If true, the Operator won't add the external label used to denote Prometheus instance name. | `false` |
> | `prometheus.prometheusSpec.prometheusExternalLabelName` | Name of the external label used to denote Prometheus instance name. | `""` |
> | `prometheus.prometheusSpec.query` | QuerySpec defines the query command line flags when starting Prometheus. Not all parameters are supported by the operator - [see coreos documentation](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#queryspec) | `{}` |
> | `prometheus.prometheusSpec.remoteRead` | If specified, the remote_read spec. This is an experimental feature, it may change in any upcoming release in a breaking way. | `[]` |
> | `prometheus.prometheusSpec.remoteWrite` | If specified, the remote_write spec. This is an experimental feature, it may change in any upcoming release in a breaking way. | `[]` |
> | `prometheus.prometheusSpec.remoteWriteDashboards` | Enable/Disable Grafana dashboards provisioning for prometheus remote write feature | `false` |
> | `prometheus.prometheusSpec.replicaExternalLabelNameClear` | If true, the Operator won't add the external label used to denote replica name. | `false` |
> | `prometheus.prometheusSpec.replicaExternalLabelName` | Name of the external label used to denote replica name. | `""` |
> | `prometheus.prometheusSpec.replicas` | Number of instances to deploy for a Prometheus deployment. | `1` |
> | `prometheus.prometheusSpec.resources` | Define resources requests and limits for single Pods. | `{}` |
> | `prometheus.prometheusSpec.retentionSize` | Used Storage Prometheus shall retain data for. Example 50GiB (50 Gigabyte). Can be combined with prometheus.prometheusSpec.retention | `""` |
> | `prometheus.prometheusSpec.walCompression` | Enable compression of the write-ahead log using Snappy. This flag is only available in versions of Prometheus >= 2.11.0. | `false` |
> | `prometheus.prometheusSpec.retention` | Time duration Prometheus shall retain data for. Must match the regular expression `[0-9]+(ms\|s\|m\|h\|d\|w\|y)` (milliseconds seconds minutes hours days weeks years). | `10d` |
> | `prometheus.prometheusSpec.routePrefix` | The route prefix Prometheus registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`. | `/` |
> | `prometheus.prometheusSpec.ruleNamespaceSelector` | Namespaces to be selected for PrometheusRules discovery. If nil, select own namespace. See [namespaceSelector](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#namespaceselector) for usage | `{}` |
> | `prometheus.prometheusSpec.ruleSelectorNilUsesHelmValues` | If true, a nil or {} value for prometheus.prometheusSpec.ruleSelector will cause the prometheus resource to be created with selectors based on values in the helm deployment, which will also match the PrometheusRule resources created. | `true` |
> | `prometheus.prometheusSpec.ruleSelector` | A selector to select which PrometheusRules to mount for loading alerting rules from. Until (excluding) Prometheus Operator v0.24.0 Prometheus Operator will migrate any legacy rule ConfigMaps to PrometheusRule custom resources selected by RuleSelector. Make sure it does not match any config maps that you do not want to be migrated. If {}, select all PrometheusRules | `{}` |
> | `prometheus.prometheusSpec.scrapeInterval` | Interval between consecutive scrapes. | `""` |
> | `prometheus.prometheusSpec.secrets` | Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The Secrets are mounted into /etc/prometheus/secrets/<secret-name>. Secrets changes after initial creation of a Prometheus object are not reflected in the running Pods. To change the secrets mounted into the Prometheus Pods, the object must be deleted and recreated with the new list of secrets. | `[]` |
> | `prometheus.prometheusSpec.securityContext` | SecurityContext holds pod-level security attributes and common container settings. This defaults to non root user with uid 1000 and gid 2000 in order to support migration from operator version <0.26. | `{"runAsNonRoot": true, "runAsUser": 1000, "fsGroup": 2000}` |
> | `prometheus.prometheusSpec.serviceMonitorNamespaceSelector` | Namespaces to be selected for ServiceMonitor discovery. See [metav1.LabelSelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#labelselector-v1-meta) for usage | `{}` |
> | `prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues` | If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the prometheus resource to be created with selectors based on values in the helm deployment, which will also match the servicemonitors created | `true` |
> | `prometheus.prometheusSpec.serviceMonitorSelector` | ServiceMonitors to be selected for target discovery. If {}, select all ServiceMonitors | `{}` |
> | `prometheus.additionalPodMonitors` | List of `PodMonitor` objects to create. See https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#podmonitorspec | `[]` |
> | `prometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValues` | If true, a nil or {} value for prometheus.prometheusSpec.podMonitorSelector will cause the prometheus resource to be created with selectors based on values in the helm deployment, which will also match the podmonitors created | `true` |
> | `prometheus.prometheusSpec.podMonitorSelector` | PodMonitors to be selected for target discovery. If {}, select all PodMonitors | `{}` |
> | `prometheus.prometheusSpec.podMonitorNamespaceSelector` | Namespaces to be selected for PodMonitor discovery. See [metav1.LabelSelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#labelselector-v1-meta) for usage | `{}` |
> | `prometheus.prometheusSpec.storageSpec` | Storage spec to specify how storage shall be used. | `{}` |
> | `prometheus.prometheusSpec.thanos` | Thanos configuration allows configuring various aspects of a Prometheus server in a Thanos environment. This section is experimental, it may change significantly without deprecation notice in any release.This is experimental and may change significantly without backward compatibility in any release. See https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#thanosspec | `{}` |
> | `prometheus.prometheusSpec.tolerations` | If specified, the pod's tolerations. | `[]` |
> | `prometheus.service.additionalPorts` |  Additional Prometheus Service ports to add for NodePort service type | `[]` |
> | `prometheus.service.annotations` |  Prometheus Service Annotations | `{}` |
> | `prometheus.service.clusterIP` | Prometheus service clusterIP IP | `""` |
> | `prometheus.service.externalIPs` | List of IP addresses at which the Prometheus server service is available | `[]` |
> | `prometheus.service.labels` |  Prometheus Service Labels | `{}` |
> | `prometheus.service.loadBalancerIP` |  Prometheus Loadbalancer IP | `""` |
> | `prometheus.service.loadBalancerSourceRanges` | Prometheus Load Balancer Source Ranges | `[]` |
> | `prometheus.service.nodePort` |  Prometheus Service port for NodePort service type | `30090` |
> | `prometheus.service.port` |  Port for Prometheus Service to listen on | `9090` |
> | `prometheus.service.sessionAffinity` | Prometheus Service Session Affinity | `""` |
> | `prometheus.service.targetPort` |  Prometheus Service internal port | `9090` |
> | `prometheus.service.type` |  Prometheus Service type | `ClusterIP` |
> | `prometheus.serviceAccount.create` | Create a default serviceaccount for prometheus to use | `true` |
> | `prometheus.serviceAccount.name` | Name for prometheus serviceaccount | `""` |
> | `prometheus.serviceAccount.annotations` | Annotations to add to the serviceaccount | `""` |
> | `prometheus.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `""` |
> | `prometheus.serviceMonitor.scheme` | HTTP scheme to use for scraping. Can be used with `tlsConfig` for example if using istio mTLS. | `""` |
> | `prometheus.serviceMonitor.tlsConfig` | TLS configuration to use when scraping the endpoint. For example if using istio mTLS. Of type: [*TLSConfig](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#tlsconfig). | `{}` |
> | `prometheus.serviceMonitor.bearerTokenFile` | Bearer token used to scrape the Prometheus server | `nil` |
> | `prometheus.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping the prometheus instance. | `` |
> | `prometheus.serviceMonitor.relabelings` | The `relabel_configs` for scraping the prometheus instance. | `` |
> | `prometheus.serviceMonitor.selfMonitor` | Create a `serviceMonitor` to automatically monitor the prometheus instance | `true` |
> | `prometheus.servicePerReplica.annotations` | Prometheus per replica Service Annotations | `{}` |
> | `prometheus.servicePerReplica.enabled` | If true, create a Service for each Prometheus server replica in the StatefulSet | `false` |
> | `prometheus.servicePerReplica.labels` | Prometheus per replica Service Labels | `{}` |
> | `prometheus.servicePerReplica.loadBalancerSourceRanges` | Prometheus per replica Service Loadbalancer Source Ranges | `[]` |
> | `prometheus.servicePerReplica.nodePort` |  Prometheus per replica Service port for NodePort Service type | `30091` |
> | `prometheus.servicePerReplica.port` |  Port for Prometheus per replica Service to listen on | `9090` |
> | `prometheus.servicePerReplica.targetPort` |  Prometheus per replica Service internal port | `9090` |
> | `prometheus.servicePerReplica.type` |  Prometheus per replica Service type | `ClusterIP` |
> 
> ### Alertmanager
> | Parameter | Description | Default |
> | ----- | ----------- | ------ |
> | `alertmanager.alertmanagerSpec.additionalPeers` | AdditionalPeers allows injecting a set of additional Alertmanagers to peer with to form a highly available cluster. | `[]` |
> | `alertmanager.alertmanagerSpec.affinity` | Assign custom affinity rules to the alertmanager instance https://kubernetes.io/docs/concepts/configuration/assign-pod-node/ | `{}` |
> | `alertmanager.alertmanagerSpec.configMaps` | ConfigMaps is a list of ConfigMaps in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/ | `[]` |
> | `alertmanager.alertmanagerSpec.`configSecret | ConfigSecret is the name of a Kubernetes Secret in the same namespace as the Alertmanager object, which contains configuration for this Alertmanager instance. Defaults to 'alertmanager-' The secret is mounted into /etc/alertmanager/config. | `""` |
> | `alertmanager.alertmanagerSpec.containers` | Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to an Alertmanager pod. | `[]` |
> | `alertmanager.alertmanagerSpec.externalUrl` | The external URL the Alertmanager instances will be available under. This is necessary to generate correct URLs. This is necessary if Alertmanager is not served from root of a DNS name. | `""` |
> | `alertmanager.alertmanagerSpec.image.repository` | Base image that is used to deploy pods, without tag. | `quay.io/prometheus/alertmanager` |
> | `alertmanager.alertmanagerSpec.image.tag` | Tag of Alertmanager container image to be deployed. | `v0.20.0` |
> | `alertmanager.alertmanagerSpec.listenLocal` | ListenLocal makes the Alertmanager server listen on loopback, so that it does not bind against the Pod IP. Note this is only for the Alertmanager UI, not the gossip communication. | `false` |
> | `alertmanager.alertmanagerSpec.logFormat` | Log format for Alertmanager to be configured with. | `logfmt` |
> | `alertmanager.alertmanagerSpec.logLevel` | Log level for Alertmanager to be configured with. | `info` |
> | `alertmanager.alertmanagerSpec.nodeSelector` | Define which Nodes the Pods are scheduled on. | `{}` |
> | `alertmanager.alertmanagerSpec.paused` | If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions. | `false` |
> | `alertmanager.alertmanagerSpec.podAntiAffinityTopologyKey` | If anti-affinity is enabled sets the topologyKey to use for anti-affinity. This can be changed to, for example `failure-domain.beta.kubernetes.io/zone`| `kubernetes.io/hostname` |
> | `alertmanager.alertmanagerSpec.podAntiAffinity` | Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node. The default value "soft" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided. The value "hard" means that the scheduler is *required* to not schedule two replica pods onto the same node. The value "" will disable pod anti-affinity so that no anti-affinity rules will be configured. | `""` |
> | `alertmanager.alertmanagerSpec.podMetadata` | Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata Metadata Labels and Annotations gets propagated to the prometheus pods. | `{}` |
> | `alertmanager.alertmanagerSpec.priorityClassName` | Priority class assigned to the Pods | `""` |
> | `alertmanager.alertmanagerSpec.replicas` | Size is the expected size of the alertmanager cluster. The controller will eventually make the size of the running cluster equal to the expected size. | `1` |
> | `alertmanager.alertmanagerSpec.resources` | Define resources requests and limits for single Pods. | `{}` |
> | `alertmanager.alertmanagerSpec.retention` | Time duration Alertmanager shall retain data for. Value must match the regular expression `[0-9]+(ms\|s\|m\|h)` (milliseconds seconds minutes hours). | `120h` |
> | `alertmanager.alertmanagerSpec.routePrefix` | The route prefix Alertmanager registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`. | `/` |
> | `alertmanager.alertmanagerSpec.secrets` | Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>. | `[]` |
> | `alertmanager.alertmanagerSpec.securityContext` | SecurityContext holds pod-level security attributes and common container settings. This defaults to non root user with uid 1000 and gid 2000 in order to support migration from operator version < 0.26 | `{"runAsNonRoot": true, "runAsUser": 1000, "fsGroup": 2000}` |
> | `alertmanager.alertmanagerSpec.storage` | Storage is the definition of how storage will be used by the Alertmanager instances. | `{}` |
> | `alertmanager.alertmanagerSpec.tolerations` | If specified, the pod's tolerations. | `[]` |
> | `alertmanager.alertmanagerSpec.useExistingSecret` | Use an existing secret for configuration (all defined config from values.yaml will be ignored) | `false` |
> | `alertmanager.apiVersion` | Api that prometheus will use to communicate with alertmanager. Possible values are v1, v2 | `v2` |
> | `alertmanager.config` | Provide YAML to configure Alertmanager. See https://prometheus.io/docs/alerting/configuration/#configuration-file. The default provided works to suppress the Watchdog alert from `defaultRules.create` | `{"global":{"resolve_timeout":"5m"},"route":{"group_by":["job"],"group_wait":"30s","group_interval":"5m","repeat_interval":"12h","receiver":"null","routes":[{"match":{"alertname":"Watchdog"},"receiver":"null"}]},"receivers":[{"name":"null"}]}` |
> | `alertmanager.enabled` | Deploy alertmanager | `true` |
> | `alertmanager.ingress.annotations` | Alertmanager Ingress annotations | `{}` |
> | `alertmanager.ingress.enabled` | If true, Alertmanager Ingress will be created | `false` |
> | `alertmanager.ingress.hosts` | Alertmanager Ingress hostnames | `[]` |
> | `alertmanager.ingress.labels` | Alertmanager Ingress additional labels | `{}` |
> | `alertmanager.ingress.paths` | Alertmanager Ingress paths | `[]` |
> | `alertmanager.ingress.tls` | Alertmanager Ingress TLS configuration (YAML) | `[]` |
> | `alertmanager.podDisruptionBudget.enabled` | If true, create a pod disruption budget for Alertmanager pods. The created resource cannot be modified once created - it must be deleted to perform a change | `false` |
> | `alertmanager.podDisruptionBudget.maxUnavailable` | Maximum number / percentage of pods that may be made unavailable | `""` |
> | `alertmanager.podDisruptionBudget.minAvailable` | Minimum number / percentage of pods that should remain scheduled | `1` |
> | `alertmanager.secret.annotations` | Alertmanager Secret annotations | `{}` |
> | `alertmanager.service.annotations` | Alertmanager Service annotations | `{}` |
> | `alertmanager.service.clusterIP` | Alertmanager service clusterIP IP | `""` |
> | `alertmanager.service.externalIPs` | List of IP addresses at which the Alertmanager server service is available | `[]` |
> | `alertmanager.service.labels` |  Alertmanager Service Labels | `{}` |
> | `alertmanager.service.loadBalancerIP` |  Alertmanager Loadbalancer IP | `""` |
> | `alertmanager.service.loadBalancerSourceRanges` | Alertmanager Load Balancer Source Ranges | `[]` |
> | `alertmanager.service.nodePort` | Alertmanager Service port for NodePort service type | `30903` |
> | `alertmanager.service.port` | Port for Alertmanager Service to listen on | `9093` |
> | `alertmanager.service.targetPort` | AlertManager Service internal port | `9093` |
> | `alertmanager.service.type` | Alertmanager Service type | `ClusterIP` |
> | `alertmanager.serviceAccount.create` | Create a `serviceAccount` for alertmanager | `true` |
> | `alertmanager.serviceAccount.name` | Name for Alertmanager service account | `""` |
> | `alertmanager.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `alertmanager.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping the alertmanager instance. | `` |
> | `alertmanager.serviceMonitor.relabelings` | The `relabel_configs` for scraping the alertmanager instance. | `` |
> | `alertmanager.serviceMonitor.selfMonitor` | Create a `serviceMonitor` to automatically monitor the alartmanager instance | `true` |
> | `alertmanager.tplConfig` | Pass the Alertmanager configuration directives through Helm's templating engine. If the Alertmanager configuration contains Alertmanager templates, they'll need to be properly escaped so that they are not interpreted by Helm | `false` |
> 
> ### Grafana
> This is not a full list of the possible values.
> 
> For a full list of configurable values please refer to the [Grafana chart](https://github.com/helm/charts/tree/master/stable/grafana#configuration).
> 
> | Parameter | Description | Default |
> | ----- | ----------- | ------ |
> | `grafana.additionalDataSources` | Configure additional grafana datasources | `[]` |
> | `grafana.adminPassword` | Admin password to log into the grafana UI | "prom-operator" |
> | `grafana.defaultDashboardsEnabled` | Deploy default dashboards. These are loaded using the sidecar | `true` |
> | `grafana.enabled` | If true, deploy the grafana sub-chart | `true` |
> | `grafana.extraConfigmapMounts` | Additional grafana server configMap volume mounts | `[]` |
> | `grafana.grafana.ini` | Grafana's primary configuration | `{}`
> | `grafana.image.tag` | Image tag. (`Must be >= 5.0.0`) | `6.2.5` |
> | `grafana.ingress.annotations` | Ingress annotations for Grafana | `{}` |
> | `grafana.ingress.enabled` | Enables Ingress for Grafana | `false` |
> | `grafana.ingress.hosts` | Ingress accepted hostnames for Grafana| `[]` |
> | `grafana.ingress.labels` | Custom labels for Grafana Ingress | `{}` |
> | `grafana.ingress.tls` | Ingress TLS configuration for Grafana | `[]` |
> | `grafana.rbac.pspUseAppArmor` | Enforce AppArmor in created PodSecurityPolicy (requires rbac.pspEnabled) | `true` |
> | `grafana.service.portName` | Allow to customize Grafana service portname. Will be used by servicemonitor as well | `service` |
> | `grafana.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping the grafana instance. | `` |
> | `grafana.serviceMonitor.relabelings` | The `relabel_configs` for scraping the grafana instance. | `` |
> | `grafana.serviceMonitor.selfMonitor` | Create a `serviceMonitor` to automatically monitor the grafana instance | `true` |
> | `grafana.sidecar.dashboards.enabled` | Enable the Grafana sidecar to automatically load dashboards with a label `{{ grafana.sidecar.dashboards.label }}=1` | `true` |
> | `grafana.sidecar.dashboards.label` | If the sidecar is enabled, configmaps with this label will be loaded into Grafana as dashboards | `grafana_dashboard` |
> | `grafana.sidecar.datasources.annotations` | Create annotations on datasource configmaps | `{}` |
> | `grafana.sidecar.datasources.createPrometheusReplicasDatasources` | Create datasource for each Pod of Prometheus StatefulSet i.e. `Prometheus-0`, `Prometheus-1` | `false` |
> | `grafana.sidecar.datasources.defaultDatasourceEnabled` | Enable Grafana `Prometheus` default datasource | `true` |
> | `grafana.sidecar.datasources.enabled` | Enable the Grafana sidecar to automatically load datasources with a label `{{ grafana.sidecar.datasources.label }}=1` | `true` |
> | `grafana.sidecar.datasources.label` | If the sidecar is enabled, configmaps with this label will be loaded into Grafana as datasources configurations | `grafana_datasource` |
> 
> ### Exporters
> | Parameter | Description | Default |
> | ----- | ----------- | ------ |
> | `coreDns.enabled` | Deploy coreDns scraping components. Use either this or kubeDns | true |
> | `coreDns.service.port` | CoreDns port | `9153` |
> | `coreDns.service.selector` | CoreDns service selector | `{"k8s-app" : "kube-dns" }` |
> | `coreDns.service.targetPort` | CoreDns targetPort | `9153` |
> | `coreDns.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `coreDns.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping CoreDns. | `` |
> | `coreDns.serviceMonitor.relabelings` | The `relabel_configs` for scraping CoreDNS. | `` |
> | `kube-state-metrics.podSecurityPolicy.enabled` | Create pod security policy resource for kube-state-metrics. | `true` |
> | `kube-state-metrics.rbac.create` | Create RBAC components in kube-state-metrics. See `global.rbac.create` | `true` |
> | `kubeApiServer.enabled` | Deploy `serviceMonitor` to scrape the Kubernetes API server | `true` |
> | `kubeApiServer.relabelings` | Relablings for the API Server ServiceMonitor | `[]` |
> | `kubeApiServer.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `kubeApiServer.serviceMonitor.jobLabel` | The name of the label on the target service to use as the job name in prometheus | `component` |
> | `kubeApiServer.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping the Kubernetes API server. | `` |
> | `kubeApiServer.serviceMonitor.relabelings` | The `relabel_configs` for scraping the Kubernetes API server. | `` |
> | `kubeApiServer.serviceMonitor.selector` | The service selector | `{"matchLabels":{"component":"apiserver","provider":"kubernetes"}}` |
> | `kubeApiServer.tlsConfig.insecureSkipVerify` | Skip TLS certificate validation when scraping | `false` |
> | `kubeApiServer.tlsConfig.serverName` | Name of the server to use when validating TLS certificate | `kubernetes` |
> | `kubeControllerManager.enabled` | Deploy a `service` and `serviceMonitor` to scrape the Kubernetes controller-manager | `true` |
> | `kubeControllerManager.endpoints` | Endpoints where Controller-manager runs. Provide this if running Controller-manager outside the cluster | `[]` |
> | `kubeControllerManager.service.port` | Controller-manager port for the service runs on | `10252` |
> | `kubeControllerManager.service.selector` | Controller-manager service selector | `{"component" : "kube-controller-manager" }` |
> | `kubeControllerManager.service.targetPort` | Controller-manager targetPort for the service runs on | `10252` |
> | `kubeControllerManager.serviceMonitor.https` | Controller-manager service scrape over https | `false` |
> | `kubeControllerManager.serviceMonitor.insecureSkipVerify` | Skip TLS certificate validation when scraping | `null` |
> | `kubeControllerManager.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `kubeControllerManager.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping the scheduler. | `` |
> | `kubeControllerManager.serviceMonitor.relabelings` | The `relabel_configs` for scraping the scheduler. | `` |
> | `kubeControllerManager.serviceMonitor.serverName` | Name of the server to use when validating TLS certificate | `null` |
> | `kubeDns.enabled` | Deploy kubeDns scraping components. Use either this or coreDns| `false` |
> | `kubeDns.service.dnsmasq.port` | Dnsmasq service port | `10054` |
> | `kubeDns.service.dnsmasq.targetPort` | Dnsmasq service targetPort | `10054` |
> | `kubeDns.service.skydns.port` | Skydns service port | `10055` |
> | `kubeDns.service.skydns.targetPort` | Skydns service targetPort | `10055` |
> | `kubeDns.service.selector` | kubeDns service selector | `{"k8s-app" : "kube-dns" }` |
> | `kubeDns.serviceMonitor.dnsmasqMetricRelabelings` | The `metric_relabel_configs` for scraping dnsmasq kubeDns. | `` |
> | `kubeDns.serviceMonitor.dnsmasqRelabelings` | The `relabel_configs` for scraping dnsmasq kubeDns. | `` |
> | `kubeDns.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `kubeDns.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping kubeDns. | `` |
> | `kubeDns.serviceMonitor.relabelings` | The `relabel_configs` for scraping kubeDns. | `` |
> | `kubeEtcd.enabled` | Deploy components to scrape etcd | `true` |
> | `kubeEtcd.endpoints` | Endpoints where etcd runs. Provide this if running etcd outside the cluster | `[]` |
> | `kubeEtcd.service.port` | Etcd port | `4001` |
> | `kubeEtcd.service.selector` | Selector for etcd if running inside the cluster | `{"component":"etcd"}` |
> | `kubeEtcd.service.targetPort` | Etcd targetPort | `4001` |
> | `kubeEtcd.serviceMonitor.caFile` | Certificate authority file to use when connecting to etcd. See `prometheus.prometheusSpec.secrets` | `""` |
> | `kubeEtcd.serviceMonitor.certFile` | Client certificate file to use when connecting to etcd. See `prometheus.prometheusSpec.secrets` | `""` |
> | `kubeEtcd.serviceMonitor.insecureSkipVerify` | Skip validating etcd TLS certificate when scraping | `false` |
> | `kubeEtcd.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `kubeEtcd.serviceMonitor.keyFile` | Client key file to use when connecting to etcd.  See `prometheus.prometheusSpec.secrets` | `""` |
> | `kubeEtcd.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping Etcd. | `` |
> | `kubeEtcd.serviceMonitor.relabelings` | The `relabel_configs` for scraping Etcd. | `` |
> | `kubeEtcd.serviceMonitor.scheme` | Etcd servicemonitor scheme | `http` |
> | `kubeEtcd.serviceMonitor.serverName` | Etcd server name to validate certificate against when scraping | `""` |
> | `kubeProxy.enabled` | Deploy a `service` and `serviceMonitor` to scrape the Kubernetes proxy | `true` |
> | `kubeProxy.endpoints` | Endpoints where proxy runs. Provide this if running proxy outside the cluster | `[]` |
> | `kubeProxy.service.port` | Kubernetes proxy port for the service runs on | `10249` |
> | `kubeProxy.service.selector` | Kubernetes proxy service selector | `{"k8s-app" : "kube-proxy" }` |
> | `kubeProxy.service.targetPort` | Kubernetes proxy targetPort for the service runs on | `10249` |
> | `kubeProxy.serviceMonitor.https` | Kubernetes proxy service scrape over https | `false` |
> | `kubeProxy.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `kubeProxy.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping the Kubernetes proxy. | `` |
> | `kubeProxy.serviceMonitor.relabelings` | The `relabel_configs` for scraping the Kubernetes proxy. | `` |
> | `kubeScheduler.enabled` | Deploy a `service` and `serviceMonitor` to scrape the Kubernetes scheduler | `true` |
> | `kubeScheduler.endpoints` | Endpoints where scheduler runs. Provide this if running scheduler outside the cluster | `[]` |
> | `kubeScheduler.service.port` | Scheduler port for the service runs on | `10251` |
> | `kubeScheduler.service.selector` | Scheduler service selector | `{"component" : "kube-scheduler" }` |
> | `kubeScheduler.service.targetPort` | Scheduler targetPort for the service runs on | `10251` |
> | `kubeScheduler.serviceMonitor.https` | Scheduler service scrape over https | `false` |
> | `kubeScheduler.serviceMonitor.insecureSkipVerify` | Skip TLS certificate validation when scraping | `null` |
> | `kubeScheduler.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `kubeScheduler.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping the Kubernetes scheduler. | `` |
> | `kubeScheduler.serviceMonitor.relabelings` | The `relabel_configs` for scraping the Kubernetes scheduler. | `` |
> | `kubeScheduler.serviceMonitor.serverName` | Name of the server to use when validating TLS certificate | `null` |
> | `kubeStateMetrics.enabled` | Deploy the `kube-state-metrics` chart and configure a servicemonitor to scrape | `true` |
> | `kubeStateMetrics.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `kubeStateMetrics.serviceMonitor.metricRelabelings` | Metric relablings for the `kube-state-metrics` ServiceMonitor | `[]` |
> | `kubeStateMetrics.serviceMonitor.relabelings` | The `relabel_configs` for scraping `kube-state-metrics`. | `` |
> | `kubelet.enabled` | Deploy servicemonitor to scrape the kubelet service. See also `prometheusOperator.kubeletService` | `true` |
> | `kubelet.namespace` | Namespace where the kubelet is deployed. See also `prometheusOperator.kubeletService.namespace` | `kube-system` |
> | `kubelet.serviceMonitor.cAdvisorMetricRelabelings` | The `metric_relabel_configs` for scraping cAdvisor. | `` |
> | `kubelet.serviceMonitor.cAdvisorRelabelings` | The `relabel_configs` for scraping cAdvisor. | `[{"sourceLabels":["__metrics_path__"], "targetLabel":"metrics_path"}]` |
> | `kubelet.serviceMonitor.https` | Enable scraping of the kubelet over HTTPS. For more information, see https://github.com/coreos/prometheus-operator/issues/926 | `true` |
> | `kubelet.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `kubelet.serviceMonitor.metricRelabelings` | The `metric_relabel_configs` for scraping kubelet. | `` |
> | `kubelet.serviceMonitor.relabelings` | The `relabel_configs` for scraping kubelet. | `[{"sourceLabels":["__metrics_path__"], "targetLabel":"metrics_path"}]` |
> | `nodeExporter.enabled` | Deploy the `prometheus-node-exporter` and scrape it | `true` |
> | `nodeExporter.jobLabel` | The name of the label on the target service to use as the job name in prometheus. See `prometheus-node-exporter.podLabels.jobLabel=node-exporter` default | `jobLabel` |
> | `nodeExporter.serviceMonitor.interval` | Scrape interval. If not set, the Prometheus default scrape interval is used | `nil` |
> | `nodeExporter.serviceMonitor.scrapeTimeout` | How long until a scrape request times out. If not set, the Prometheus default scape timeout is used | `nil` |
> | `nodeExporter.serviceMonitor.metricRelabelings` | Metric relablings for the `prometheus-node-exporter` ServiceMonitor | `[]` |
> | `nodeExporter.serviceMonitor.relabelings` | The `relabel_configs` for scraping the `prometheus-node-exporter`. | `` |
> | `prometheus-node-exporter.extraArgs` | Additional arguments for the node exporter container | `["--collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)", "--collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$"]` |
> | `prometheus-node-exporter.podLabels` | Additional labels for pods in the DaemonSet | `{"jobLabel":"node-exporter"}` |
> 
> 
> Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,
> 
> ```console
> $ helm install --name my-release stable/prometheus-operator --set prometheusOperator.enabled=true
> ```
> 
> Alternatively, one or more YAML files that specify the values for the above parameters can be provided while installing the chart. For example,
> 
> ```console
> $ helm install --name my-release stable/prometheus-operator -f values1.yaml,values2.yaml
> ```
> 
> > **Tip**: You can use the default [values.yaml](values.yaml)
> 
> 
> ## PrometheusRules Admission Webhooks
> 
> With Prometheus Operator version 0.30+, the core Prometheus Operator pod exposes an endpoint that will integrate with the `validatingwebhookconfiguration` Kubernetes feature to prevent malformed rules from being added to the cluster.
> 
> ### How the Chart Configures the Hooks
> A validating and mutating webhook configuration requires the endpoint to which the request is sent to use TLS. It is possible to set up custom certificates to do this, but in most cases, a self-signed certificate is enough. The setup of this component requires some more complex orchestration when using helm. The steps are created to be idempotent and to allow turning the feature on and off without running into helm quirks.
> 1. A pre-install hook provisions a certificate into the same namespace using a format compatible with provisioning using end-user certificates. If the certificate already exists, the hook exits.
> 2. The prometheus operator pod is configured to use a TLS proxy container, which will load that certificate.
> 3. Validating and Mutating webhook configurations are created in the cluster, with their failure mode set to Ignore. This allows rules to be created by the same chart at the same time, even though the webhook has not yet been fully set up - it does not have the correct CA field set.
> 4. A post-install hook reads the CA from the secret created by step 1 and patches the Validating and Mutating webhook configurations. This process will allow a custom CA provisioned by some other process to also be patched into the webhook configurations. The chosen failure policy is also patched into the webhook configurations
> 
> ### Alternatives
> It should be possible to use [jetstack/cert-manager](https://github.com/jetstack/cert-manager) if a more complete solution is required, but it has not been tested.
> 
> ### Limitations
> Because the operator can only run as a single pod, there is potential for this component failure to cause rule deployment failure. Because this risk is outweighed by the benefit of having validation, the feature is enabled by default.
> 
> ## Developing Prometheus Rules and Grafana Dashboards
> 
> This chart Grafana Dashboards and Prometheus Rules are just a copy from coreos/prometheus-operator and other sources, synced (with alterations) by scripts in [hack](hack) folder. In order to introduce any changes you need to first [add them to the original repo](https://github.com/coreos/kube-prometheus/blob/master/docs/developing-prometheus-rules-and-grafana-dashboards.md) and then sync there by scripts.
> 
> ## Further Information
> 
> For more in-depth documentation of configuration options meanings, please see
> - [Prometheus Operator](https://github.com/coreos/prometheus-operator)
> - [Prometheus](https://prometheus.io/docs/introduction/overview/)
> - [Grafana](https://github.com/helm/charts/tree/master/stable/grafana#grafana-helm-chart)
> 
> # Migrating from coreos/prometheus-operator chart
> 
> The multiple charts have been combined into a single chart that installs prometheus operator, prometheus, alertmanager, grafana as well as the multitude of exporters necessary to monitor a cluster.
> 
> There is no simple and direct migration path between the charts as the changes are extensive and intended to make the chart easier to support.
> 
> The capabilities of the old chart are all available in the new chart, including the ability to run multiple prometheus instances on a single cluster - you will need to disable the parts of the chart you do not wish to deploy.
> 
> You can check out the tickets for this change [here](https://github.com/coreos/prometheus-operator/issues/592) and [here](https://github.com/helm/charts/pull/6765).
> 
> ## High-level overview of Changes
> The chart has 3 dependencies, that can be seen in the chart's requirements file:
> https://github.com/helm/charts/blob/master/stable/prometheus-operator/requirements.yaml
> 
> ### Node-Exporter, Kube-State-Metrics
> These components are loaded as dependencies into the chart. The source for both charts is found in the same repository. They are relatively simple components.
> 
> ### Grafana
> The Grafana chart is more feature-rich than this chart - it contains a sidecar that is able to load data sources and dashboards from configmaps deployed into the same cluster. For more information check out the [documentation for the chart](https://github.com/helm/charts/tree/master/stable/grafana)
> 
> ### Coreos CRDs
> The CRDs are provisioned using crd-install hooks, rather than relying on a separate chart installation. If you already have these CRDs provisioned and don't want to remove them, you can disable the CRD creation by these hooks by passing `prometheusOperator.createCustomResource=false` (not required if using Helm v3).
> 
> ### Kubelet Service
> Because the kubelet service has a new name in the chart, make sure to clean up the old kubelet service in the `kube-system` namespace to prevent counting container metrics twice.
> 
> ### Persistent Volumes
> If you would like to keep the data of the current persistent volumes, it should be possible to attach existing volumes to new PVCs and PVs that are created using the conventions in the new chart. For example, in order to use an existing Azure disk for a helm release called `prometheus-migration` the following resources can be created:
> ```
> apiVersion: v1
> kind: PersistentVolume
> metadata:
>   name: pvc-prometheus-migration-prometheus-0
> spec:
>   accessModes:
>   - ReadWriteOnce
>   azureDisk:
>     cachingMode: None
>     diskName: pvc-prometheus-migration-prometheus-0
>     diskURI: /subscriptions/f5125d82-2622-4c50-8d25-3f7ba3e9ac4b/resourceGroups/sample-migration-resource-group/providers/Microsoft.Compute/disks/pvc-prometheus-migration-prometheus-0
>     fsType: ""
>     kind: Managed
>     readOnly: false
>   capacity:
>     storage: 1Gi
>   persistentVolumeReclaimPolicy: Delete
>   storageClassName: prometheus
>   volumeMode: Filesystem
> ```
> ```
> apiVersion: v1
> kind: PersistentVolumeClaim
> metadata:
>   labels:
>     app: prometheus
>     prometheus: prometheus-migration-prometheus
>   name: prometheus-prometheus-migration-prometheus-db-prometheus-prometheus-migration-prometheus-0
>   namespace: monitoring
> spec:
>   accessModes:
>   - ReadWriteOnce
>   dataSource: null
>   resources:
>     requests:
>       storage: 1Gi
>   storageClassName: prometheus
>   volumeMode: Filesystem
>   volumeName: pvc-prometheus-migration-prometheus-0
> status:
>   accessModes:
>   - ReadWriteOnce
>   capacity:
>     storage: 1Gi
> ```
> 
> The PVC will take ownership of the PV and when you create a release using a persistent volume claim template it will use the existing PVCs as they match the naming convention used by the chart. For other cloud providers similar approaches can be used.
> 
> ### KubeProxy
> 
> The metrics bind address of kube-proxy is default to `127.0.0.1:10249` that prometheus instances **cannot** access to. You should expose metrics by changing `metricsBindAddress` field value to `0.0.0.0:10249` if you want to collect them.
> 
> Depending on the cluster, the relevant part `config.conf` will be in ConfigMap `kube-system/kube-proxy` or `kube-system/kube-proxy-config`. For example:
> 
> ```
> kubectl -n kube-system edit cm kube-proxy
> ```
> 
> ```
> apiVersion: v1
> data:
>   config.conf: |-
>     apiVersion: kubeproxy.config.k8s.io/v1alpha1
>     kind: KubeProxyConfiguration
>     # ...
>     # metricsBindAddress: 127.0.0.1:10249
>     metricsBindAddress: 0.0.0.0:10249
>     # ...
>   kubeconfig.conf: |-
>     # ...
> kind: ConfigMap
> metadata:
>   labels:
>     app: kube-proxy
>   name: kube-proxy
>   namespace: kube-system
> ```
diff -Nr packages/monitoring/charts-original/charts/grafana/.helmignore packages/monitoring/charts/charts/grafana/.helmignore
0a1,23
> # Patterns to ignore when building packages.
> # This supports shell glob matching, relative path matching, and
> # negation (prefixed with !). Only one pattern per line.
> .DS_Store
> # Common VCS dirs
> .git/
> .gitignore
> .bzr/
> .bzrignore
> .hg/
> .hgignore
> .svn/
> # Common backup files
> *.swp
> *.bak
> *.tmp
> *~
> # Various IDEs
> .vscode
> .project
> .idea/
> *.tmproj
> OWNERS
diff -Nr packages/monitoring/charts-original/charts/grafana/Chart.yaml packages/monitoring/charts/charts/grafana/Chart.yaml
0a1,19
> apiVersion: v1
> appVersion: 6.6.2
> description: The leading tool for querying and visualizing time series and metrics.
> engine: gotpl
> home: https://grafana.net
> icon: https://raw.githubusercontent.com/grafana/grafana/master/public/img/logo_transparent_400x.png
> kubeVersion: ^1.8.0-0
> maintainers:
> - email: zanhsieh@gmail.com
>   name: zanhsieh
> - email: rluckie@cisco.com
>   name: rtluckie
> - email: maor.friedman@redhat.com
>   name: maorfr
> name: grafana
> sources:
> - https://github.com/grafana/grafana
> tillerVersion: '>=2.12.0'
> version: 5.0.5
diff -Nr packages/monitoring/charts-original/charts/grafana/README.md packages/monitoring/charts/charts/grafana/README.md
0a1,321
> # Grafana Helm Chart
> 
> * Installs the web dashboarding system [Grafana](http://grafana.org/)
> 
> ## TL;DR;
> 
> ```console
> $ helm install stable/grafana
> ```
> 
> ## Installing the Chart
> 
> To install the chart with the release name `my-release`:
> 
> ```console
> $ helm install --name my-release stable/grafana
> ```
> 
> ## Uninstalling the Chart
> 
> To uninstall/delete the my-release deployment:
> 
> ```console
> $ helm delete my-release
> ```
> 
> The command removes all the Kubernetes components associated with the chart and deletes the release.
> 
> ## Upgrading an existing Release to a new major version
> 
> A major chart version change (like v1.2.3 -> v2.0.0) indicates that there is an
> incompatible breaking change needing manual actions.
> 
> ### To 4.0.0 (And 3.12.1)
> 
> This version requires Helm >= 2.12.0.
> 
> ### To 5.0.0
> 
> You have to add --force to your helm upgrade command as the labels of the chart have changed.
> 
> ## Configuration
> 
> | Parameter                                 | Description                                   | Default                                                 |
> |-------------------------------------------|-----------------------------------------------|---------------------------------------------------------|
> | `replicas`                                | Number of nodes                               | `1`                                                     |
> | `podDisruptionBudget.minAvailable`        | Pod disruption minimum available              | `nil`                                                   |
> | `podDisruptionBudget.maxUnavailable`      | Pod disruption maximum unavailable            | `nil`                                                   |
> | `deploymentStrategy`                      | Deployment strategy                           | `{ "type": "RollingUpdate" }`                           |
> | `livenessProbe`                           | Liveness Probe settings                       | `{ "httpGet": { "path": "/api/health", "port": 3000 } "initialDelaySeconds": 60, "timeoutSeconds": 30, "failureThreshold": 10 }` |
> | `readinessProbe`                          | Readiness Probe settings                      | `{ "httpGet": { "path": "/api/health", "port": 3000 } }`|
> | `securityContext`                         | Deployment securityContext                    | `{"runAsUser": 472, "fsGroup": 472}`                    |
> | `priorityClassName`                       | Name of Priority Class to assign pods         | `nil`                                                   |
> | `image.repository`                        | Image repository                              | `grafana/grafana`                                       |
> | `image.tag`                               | Image tag (`Must be >= 5.0.0`)                | `6.6.2`                                                 |
> | `image.pullPolicy`                        | Image pull policy                             | `IfNotPresent`                                          |
> | `image.pullSecrets`                       | Image pull secrets                            | `{}`                                                    |
> | `service.type`                            | Kubernetes service type                       | `ClusterIP`                                             |
> | `service.port`                            | Kubernetes port where service is exposed      | `80`                                                    |
> | `service.portName`                        | Name of the port on the service               | `service`                                               |
> | `service.targetPort`                      | Internal service is port                      | `3000`                                                  |
> | `service.nodePort`                        | Kubernetes service nodePort                   | `nil`                                                   |
> | `service.annotations`                     | Service annotations                           | `{}`                                                    |
> | `service.labels`                          | Custom labels                                 | `{}`                                                    |
> | `service.clusterIP`                       | internal cluster service IP                   | `nil`                                                   |
> | `service.loadBalancerIP`                  | IP address to assign to load balancer (if supported) | `nil`                                            |
> | `service.loadBalancerSourceRanges`        | list of IP CIDRs allowed access to lb (if supported) | `[]`                                             |
> | `serivce.externalIPs`                     | service external IP addresses                 | `[]`                                                    |
> | `ingress.enabled`                         | Enables Ingress                               | `false`                                                 |
> | `ingress.annotations`                     | Ingress annotations                           | `{}`                                                    |
> | `ingress.labels`                          | Custom labels                                 | `{}`                                                    |
> | `ingress.path`                            | Ingress accepted path                         | `/`                                                     |
> | `ingress.hosts`                           | Ingress accepted hostnames                    | `[]`                                                    |
> | `ingress.extraPaths`                      | Ingress extra paths to prepend to every host configuration. Useful when configuring [custom actions with AWS ALB Ingress Controller](https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/ingress/annotation/#actions). | `[]`                                                    |
> | `ingress.tls`                             | Ingress TLS configuration                     | `[]`                                                    |
> | `resources`                               | CPU/Memory resource requests/limits           | `{}`                                                    |
> | `nodeSelector`                            | Node labels for pod assignment                | `{}`                                                    |
> | `tolerations`                             | Toleration labels for pod assignment          | `[]`                                                    |
> | `affinity`                                | Affinity settings for pod assignment          | `{}`                                                    |
> | `extraInitContainers`                     | Init containers to add to the grafana pod     | `{}`                                                    |
> | `extraContainers`                         | Sidecar containers to add to the grafana pod  | `{}`                                                    |
> | `schedulerName`                           | Name of the k8s scheduler (other than default) | `nil`                                                  |
> | `persistence.enabled`                     | Use persistent volume to store data           | `false`                                                 |
> | `persistence.type`                        | Type of persistence (`pvc` or `statefulset`)  | `pvc`                                                   |
> | `persistence.size`                        | Size of persistent volume claim               | `10Gi`                                                  |
> | `persistence.existingClaim`               | Use an existing PVC to persist data           | `nil`                                                   |
> | `persistence.storageClassName`            | Type of persistent volume claim               | `nil`                                                   |
> | `persistence.accessModes`                 | Persistence access modes                      | `[ReadWriteOnce]`                                       |
> | `persistence.annotations`                 | PersistentVolumeClaim annotations             | `{}`                                                    |
> | `persistence.finalizers`                  | PersistentVolumeClaim finalizers              | `[ "kubernetes.io/pvc-protection" ]`                    |
> | `persistence.subPath`                     | Mount a sub dir of the persistent volume      | `nil`                                                   |
> | `initChownData.enabled`                   | If false, don't reset data ownership at startup | true                                                  |
> | `initChownData.image.repository`          | init-chown-data container image repository    | `busybox`                                               |
> | `initChownData.image.tag`                 | init-chown-data container image tag           | `latest`                                                |
> | `initChownData.image.pullPolicy`          | init-chown-data container image pull policy   | `IfNotPresent`                                          |
> | `initChownData.resources`                 | init-chown-data pod resource requests & limits | `{}`                                                   |
> | `schedulerName`                           | Alternate scheduler name                      | `nil`                                                   |
> | `env`                                     | Extra environment variables passed to pods    | `{}`                                                    |
> | `envValueFrom`                            | Environment variables from alternate sources. See the API docs on [EnvVarSource](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#envvarsource-v1-core) for format details.  | `{}` |
> | `envFromSecret`                           | Name of a Kubernetes secret (must be manually created in the same namespace) containing values to be added to the environment | `""` |
> | `envRenderSecret`                         | Sensible environment variables passed to pods and stored as secret | `{}`                               |
> | `extraSecretMounts`                       | Additional grafana server secret mounts       | `[]`                                                    |
> | `extraVolumeMounts`                       | Additional grafana server volume mounts       | `[]`                                                    |
> | `extraConfigmapMounts`                    | Additional grafana server configMap volume mounts | `[]`                                                |
> | `extraEmptyDirMounts`                     | Additional grafana server emptyDir volume mounts | `[]`                                                 |
> | `plugins`                                 | Plugins to be loaded along with Grafana       | `[]`                                                    |
> | `datasources`                             | Configure grafana datasources (passed through tpl) | `{}`                                               |
> | `notifiers`                               | Configure grafana notifiers                   | `{}`                                                    |
> | `dashboardProviders`                      | Configure grafana dashboard providers         | `{}`                                                    |
> | `dashboards`                              | Dashboards to import                          | `{}`                                                    |
> | `dashboardsConfigMaps`                    | ConfigMaps reference that contains dashboards | `{}`                                                    |
> | `grafana.ini`                             | Grafana's primary configuration               | `{}`                                                    |
> | `ldap.enabled`                            | Enable LDAP authentication                    | `false`                                                 |
> | `ldap.existingSecret`                     | The name of an existing secret containing the `ldap.toml` file, this must have the key `ldap-toml`. | `""` |
> | `ldap.config`                             | Grafana's LDAP configuration                  | `""`                                                    |
> | `annotations`                             | Deployment annotations                        | `{}`                                                    |
> | `labels`                                  | Deployment labels                             | `{}`                                                    |
> | `podAnnotations`                          | Pod annotations                               | `{}`                                                    |
> | `podLabels`                               | Pod labels                                    | `{}`                                                    |
> | `podPortName`                             | Name of the grafana port on the pod           | `grafana`                                               |
> | `sidecar.image`                           | Sidecar image                                 | `kiwigrid/k8s-sidecar:0.1.99`                           |
> | `sidecar.imagePullPolicy`                 | Sidecar image pull policy                     | `IfNotPresent`                                          |
> | `sidecar.resources`                       | Sidecar resources                             | `{}`                                                    |
> | `sidecar.dashboards.enabled`              | Enables the cluster wide search for dashboards and adds/updates/deletes them in grafana | `false`       |
> | `sidecar.dashboards.SCProvider`           | Enables creation of sidecar provider          | `true`                                                  |
> | `sidecar.dashboards.provider.name`        | Unique name of the grafana provider           | `sidecarProvider`                                       |
> | `sidecar.dashboards.provider.orgid`       | Id of the organisation, to which the dashboards should be added | `1`                                   |
> | `sidecar.dashboards.provider.folder`      | Logical folder in which grafana groups dashboards | `""`                                                |
> | `sidecar.dashboards.provider.disableDelete` | Activate to avoid the deletion of imported dashboards | `false`                                       |
> | `sidecar.dashboards.provider.allowUiUpdates` | Allow updating provisioned dashboards from the UI | `false`                                          |
> | `sidecar.dashboards.provider.type`        | Provider type                                 | `file`                                                  |
> | `sidecar.dashboards.watchMethod`          | Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds. | `WATCH` |
> | `sidecar.skipTlsVerify`                   | Set to true to skip tls verification for kube api calls | `nil`                                         |
> | `sidecar.dashboards.label`                | Label that config maps with dashboards should have to be added | `grafana_dashboard`                                |
> | `sidecar.dashboards.folder`               | Folder in the pod that should hold the collected dashboards (unless `sidecar.dashboards.defaultFolderName` is set). This path will be mounted. | `/tmp/dashboards`    |
> | `sidecar.dashboards.defaultFolderName`    | The default folder name, it will create a subfolder under the `sidecar.dashboards.folder` and put dashboards in there instead | `nil`                                |
> | `sidecar.dashboards.searchNamespace`      | If specified, the sidecar will search for dashboard config-maps inside this namespace. Otherwise the namespace in which the sidecar is running will be used. It's also possible to specify ALL to search in all namespaces | `nil`                                |
> | `sidecar.datasources.enabled`             | Enables the cluster wide search for datasources and adds/updates/deletes them in grafana |`false`       |
> | `sidecar.datasources.label`               | Label that config maps with datasources should have to be added | `grafana_datasource`                               |
> | `sidecar.datasources.searchNamespace`     | If specified, the sidecar will search for datasources config-maps inside this namespace. Otherwise the namespace in which the sidecar is running will be used. It's also possible to specify ALL to search in all namespaces | `nil`                               |
> | `smtp.existingSecret`                     | The name of an existing secret containing the SMTP credentials. | `""`                                  |
> | `smtp.userKey`                            | The key in the existing SMTP secret containing the username. | `"user"`                                 |
> | `smtp.passwordKey`                        | The key in the existing SMTP secret containing the password. | `"password"`                             |
> | `admin.existingSecret`                    | The name of an existing secret containing the admin credentials. | `""`                                 |
> | `admin.userKey`                           | The key in the existing admin secret containing the username. | `"admin-user"`                          |
> | `admin.passwordKey`                       | The key in the existing admin secret containing the password. | `"admin-password"`                      |
> | `serviceAccount.annotations`              | ServiceAccount annotations                    |                                                         |
> | `serviceAccount.create`                   | Create service account                        | `true`                                                  |
> | `serviceAccount.name`                     | Service account name to use, when empty will be set to created account if `serviceAccount.create` is set else to `default` | `` |
> | `serviceAccount.nameTest`                 | Service account name to use for test, when empty will be set to created account if `serviceAccount.create` is set else to `default` | `` |
> | `rbac.create`                             | Create and use RBAC resources                 | `true`                                                  |
> | `rbac.namespaced`                         | Creates Role and Rolebinding instead of the default ClusterRole and ClusteRoleBindings for the grafana instance  | `false` |
> | `rbac.pspEnabled`                         | Create PodSecurityPolicy (with `rbac.create`, grant roles permissions as well) | `true`                 |
> | `rbac.pspUseAppArmor`                     | Enforce AppArmor in created PodSecurityPolicy (requires `rbac.pspEnabled`)  | `true`                    |
> | `rbac.extraRoleRules`                     | Additional rules to add to the Role           | []                                                      |
> | `rbac.extraClusterRoleRules`              | Additional rules to add to the ClusterRole    | []                                                      |
> | `command`                     | Define command to be executed by grafana container at startup  | `nil`                                              |
> | `testFramework.enabled`                   | Whether to create test-related resources      | `true`                                                  |
> | `testFramework.image`                     | `test-framework` image repository.            | `bats/bats`                                        |
> | `testFramework.tag`                       | `test-framework` image tag.                   | `v1.1.0`                                                 |
> | `testFramework.securityContext`           | `test-framework` securityContext              | `{}`                                                    |
> | `downloadDashboards.env`                  | Environment variables to be passed to the `download-dashboards` container | `{}`                        |
> | `downloadDashboardsImage.repository`      | Curl docker image repo                        | `curlimages/curl`                                       |
> | `downloadDashboardsImage.tag`             | Curl docker image tag                         | `7.68.0`                                                |
> | `downloadDashboardsImage.pullPolicy`      | Curl docker image pull policy                 | `IfNotPresent`                                          |
> | `namespaceOverride`                       | Override the deployment namespace             | `""` (`Release.Namespace`)                              |
> 
> ### Example of extraVolumeMounts
> 
> ```yaml
> - extraVolumeMounts:
>   - name: plugins
>     mountPath: /var/lib/grafana/plugins
>     subPath: configs/grafana/plugins
>     existingClaim: existing-grafana-claim
>     readOnly: false
> ```
> 
> ## Import dashboards
> 
> There are a few methods to import dashboards to Grafana. Below are some examples and explanations as to how to use each method:
> 
> ```yaml
> dashboards:
>   default:
>     some-dashboard:
>       json: |
>         {
>           "annotations":
> 
>           ...
>           # Complete json file here
>           ...
> 
>           "title": "Some Dashboard",
>           "uid": "abcd1234",
>           "version": 1
>         }
>     custom-dashboard:
>       # This is a path to a file inside the dashboards directory inside the chart directory
>       file: dashboards/custom-dashboard.json
>     prometheus-stats:
>       # Ref: https://grafana.com/dashboards/2
>       gnetId: 2
>       revision: 2
>       datasource: Prometheus
>     local-dashboard:
>       url: https://raw.githubusercontent.com/user/repository/master/dashboards/dashboard.json
> ```
> 
> ## BASE64 dashboards
> 
> Dashboards could be storaged in a server that does not return JSON directly and instead of it returns a Base64 encoded file (e.g. Gerrit)
> A new parameter has been added to the url use case so if you specify a b64content value equals to true after the url entry a Base64 decoding is applied before save the file to disk.
> If this entry is not set or is equals to false not decoding is applied to the file before saving it to disk.
> 
> ### Gerrit use case:
> Gerrit API for download files has the following schema: https://yourgerritserver/a/{project-name}/branches/{branch-id}/files/{file-id}/content where {project-name} and
> {file-id} usualy has '/' in their values and so they MUST be replaced by %2F so if project-name is user/repo, branch-id is master and file-id is equals to dir1/dir2/dashboard
> the url value is https://yourgerritserver/a/user%2Frepo/branches/master/files/dir1%2Fdir2%2Fdashboard/content
> 
> ## Sidecar for dashboards
> 
> If the parameter `sidecar.dashboards.enabled` is set, a sidecar container is deployed in the grafana
> pod. This container watches all configmaps (or secrets) in the cluster and filters out the ones with
> a label as defined in `sidecar.dashboards.label`. The files defined in those configmaps are written
> to a folder and accessed by grafana. Changes to the configmaps are monitored and the imported
> dashboards are deleted/updated.
> 
> A recommendation is to use one configmap per dashboard, as a reduction of multiple dashboards inside
> one configmap is currently not properly mirrored in grafana.
> 
> Example dashboard config:
> ```
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   name: sample-grafana-dashboard
>   labels:
>      grafana_dashboard: "1"
> data:
>   k8s-dashboard.json: |-
>   [...]
> ```
> 
> ## Sidecar for datasources
> 
> If the parameter `sidecar.datasources.enabled` is set, an init container is deployed in the grafana
> pod. This container lists all secrets (or configmaps, though not recommended) in the cluster and
> filters out the ones with a label as defined in `sidecar.datasources.label`. The files defined in
> those secrets are written to a folder and accessed by grafana on startup. Using these yaml files,
> the data sources in grafana can be imported. The secrets must be created before `helm install` so
> that the datasources init container can list the secrets.
> 
> Secrets are recommended over configmaps for this usecase because datasources usually contain private
> data like usernames and passwords. Secrets are the more appropriate cluster ressource to manage those.
> 
> Example datasource config adapted from [Grafana](http://docs.grafana.org/administration/provisioning/#example-datasource-config-file):
> ```
> apiVersion: v1
> kind: Secret
> metadata:
>   name: sample-grafana-datasource
>   labels:
>      grafana_datasource: "1"
> type: Opaque
> stringData:
>   datasource.yaml: |-
>     # config file version
>     apiVersion: 1
> 
>     # list of datasources that should be deleted from the database
>     deleteDatasources:
>       - name: Graphite
>         orgId: 1
> 
>     # list of datasources to insert/update depending
>     # whats available in the database
>     datasources:
>       # <string, required> name of the datasource. Required
>     - name: Graphite
>       # <string, required> datasource type. Required
>       type: graphite
>       # <string, required> access mode. proxy or direct (Server or Browser in the UI). Required
>       access: proxy
>       # <int> org id. will default to orgId 1 if not specified
>       orgId: 1
>       # <string> url
>       url: http://localhost:8080
>       # <string> database password, if used
>       password:
>       # <string> database user, if used
>       user:
>       # <string> database name, if used
>       database:
>       # <bool> enable/disable basic auth
>       basicAuth:
>       # <string> basic auth username
>       basicAuthUser:
>       # <string> basic auth password
>       basicAuthPassword:
>       # <bool> enable/disable with credentials headers
>       withCredentials:
>       # <bool> mark as default datasource. Max one per org
>       isDefault:
>       # <map> fields that will be converted to json and stored in json_data
>       jsonData:
>          graphiteVersion: "1.1"
>          tlsAuth: true
>          tlsAuthWithCACert: true
>       # <string> json object of data that will be encrypted.
>       secureJsonData:
>         tlsCACert: "..."
>         tlsClientCert: "..."
>         tlsClientKey: "..."
>       version: 1
>       # <bool> allow users to edit datasources from the UI.
>       editable: false
> 
> ```
> 
diff -Nr packages/monitoring/charts-original/charts/grafana/ci/default-values.yaml packages/monitoring/charts/charts/grafana/ci/default-values.yaml
0a1
> # Leave this file empty to ensure that CI runs builds against the default configuration in values.yaml.
diff -Nr packages/monitoring/charts-original/charts/grafana/ci/with-dashboard-json-values.yaml packages/monitoring/charts/charts/grafana/ci/with-dashboard-json-values.yaml
0a1,53
> dashboards:
>   my-provider:
>     my-awesome-dashboard:
>       # An empty but valid dashboard
>       json: |
>         {
>           "__inputs": [],
>           "__requires": [
>             {
>               "type": "grafana",
>               "id": "grafana",
>               "name": "Grafana",
>               "version": "6.3.5"
>             }
>           ],
>           "annotations": {
>             "list": [
>               {
>                 "builtIn": 1,
>                 "datasource": "-- Grafana --",
>                 "enable": true,
>                 "hide": true,
>                 "iconColor": "rgba(0, 211, 255, 1)",
>                 "name": "Annotations & Alerts",
>                 "type": "dashboard"
>               }
>             ]
>           },
>           "editable": true,
>           "gnetId": null,
>           "graphTooltip": 0,
>           "id": null,
>           "links": [],
>           "panels": [],
>           "schemaVersion": 19,
>           "style": "dark",
>           "tags": [],
>           "templating": {
>             "list": []
>           },
>           "time": {
>             "from": "now-6h",
>             "to": "now"
>           },
>           "timepicker": {
>             "refresh_intervals": ["5s"]
>           },
>           "timezone": "",
>           "title": "Dummy Dashboard",
>           "uid": "IdcYQooWk",
>           "version": 1
>         }
>       datasource: Prometheus
diff -Nr packages/monitoring/charts-original/charts/grafana/ci/with-dashboard-values.yaml packages/monitoring/charts/charts/grafana/ci/with-dashboard-values.yaml
0a1,19
> dashboards:
>   my-provider:
>     my-awesome-dashboard:
>       gnetId: 10000
>       revision: 1
>       datasource: Prometheus
> dashboardProviders:
>   dashboardproviders.yaml:
>     apiVersion: 1
>     providers:
>     - name: 'my-provider'
>       orgId: 1
>       folder: ''
>       type: file
>       updateIntervalSeconds: 10
>       disableDeletion: true
>       editable: true
>       options:
>         path: /var/lib/grafana/dashboards/my-provider
diff -Nr packages/monitoring/charts-original/charts/grafana/dashboards/custom-dashboard.json packages/monitoring/charts/charts/grafana/dashboards/custom-dashboard.json
0a1
> {}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/NOTES.txt packages/monitoring/charts/charts/grafana/templates/NOTES.txt
0a1,53
> 1. Get your '{{ .Values.adminUser }}' user password by running:
> 
>    kubectl get secret --namespace {{ template "grafana.namespace" . }} {{ template "grafana.fullname" . }} -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
> 
> 2. The Grafana server can be accessed via port {{ .Values.service.port }} on the following DNS name from within your cluster:
> 
>    {{ template "grafana.fullname" . }}.{{ template "grafana.namespace" . }}.svc.cluster.local
> {{ if .Values.ingress.enabled }}
>    If you bind grafana to 80, please update values in values.yaml and reinstall:
>    ```
>    securityContext:
>      runAsUser: 0
>      fsGroup: 0
> 
>    command:
>    - "setcap"
>    - "'cap_net_bind_service=+ep'"
>    - "/usr/sbin/grafana-server &&"
>    - "sh"
>    - "/run.sh"
>    ```
>    Details refer to https://grafana.com/docs/installation/configuration/#http-port.
>    Or grafana would always crash.
> 
>    From outside the cluster, the server URL(s) are:
> {{- range .Values.ingress.hosts }}
>      http://{{ . }}
> {{- end }}
> {{ else }}
>    Get the Grafana URL to visit by running these commands in the same shell:
> {{ if contains "NodePort" .Values.service.type -}}
>      export NODE_PORT=$(kubectl get --namespace {{ template "grafana.namespace" . }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "grafana.fullname" . }})
>      export NODE_IP=$(kubectl get nodes --namespace {{ template "grafana.namespace" . }} -o jsonpath="{.items[0].status.addresses[0].address}")
>      echo http://$NODE_IP:$NODE_PORT
> {{ else if contains "LoadBalancer" .Values.service.type -}}
>    NOTE: It may take a few minutes for the LoadBalancer IP to be available.
>         You can watch the status of by running 'kubectl get svc --namespace {{ template "grafana.namespace" . }} -w {{ template "grafana.fullname" . }}'
>      export SERVICE_IP=$(kubectl get svc --namespace {{ template "grafana.namespace" . }} {{ template "grafana.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
>      http://$SERVICE_IP:{{ .Values.service.port -}}
> {{ else if contains "ClusterIP"  .Values.service.type }}
>      export POD_NAME=$(kubectl get pods --namespace {{ template "grafana.namespace" . }} -l "app={{ template "grafana.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
>      kubectl --namespace {{ template "grafana.namespace" . }} port-forward $POD_NAME 3000
> {{- end }}
> {{- end }}
> 
> 3. Login with the password from step 1 and the username: {{ .Values.adminUser }}
> 
> {{- if not .Values.persistence.enabled }}
> #################################################################################
> ######   WARNING: Persistence is disabled!!! You will lose your data when   #####
> ######            the Grafana pod is terminated.                            #####
> #################################################################################
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/_helpers.tpl packages/monitoring/charts/charts/grafana/templates/_helpers.tpl
0a1,82
> {{/* vim: set filetype=mustache: */}}
> {{/*
> Expand the name of the chart.
> */}}
> {{- define "grafana.name" -}}
> {{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
> {{- end -}}
> 
> {{/*
> Create a default fully qualified app name.
> We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
> If release name contains chart name it will be used as a full name.
> */}}
> {{- define "grafana.fullname" -}}
> {{- if .Values.fullnameOverride -}}
> {{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
> {{- else -}}
> {{- $name := default .Chart.Name .Values.nameOverride -}}
> {{- if contains $name .Release.Name -}}
> {{- .Release.Name | trunc 63 | trimSuffix "-" -}}
> {{- else -}}
> {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
> {{- end -}}
> {{- end -}}
> {{- end -}}
> 
> {{/*
> Create chart name and version as used by the chart label.
> */}}
> {{- define "grafana.chart" -}}
> {{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" -}}
> {{- end -}}
> 
> {{/*
> Create the name of the service account
> */}}
> {{- define "grafana.serviceAccountName" -}}
> {{- if .Values.serviceAccount.create -}}
>     {{ default (include "grafana.fullname" .) .Values.serviceAccount.name }}
> {{- else -}}
>     {{ default "default" .Values.serviceAccount.name }}
> {{- end -}}
> {{- end -}}
> 
> {{- define "grafana.serviceAccountNameTest" -}}
> {{- if .Values.serviceAccount.create -}}
>     {{ default (print (include "grafana.fullname" .) "-test") .Values.serviceAccount.nameTest }}
> {{- else -}}
>     {{ default "default" .Values.serviceAccount.nameTest }}
> {{- end -}}
> {{- end -}}
> 
> {{/*
> Allow the release namespace to be overridden for multi-namespace deployments in combined charts
> */}}
> {{- define "grafana.namespace" -}}
>   {{- if .Values.namespaceOverride -}}
>     {{- .Values.namespaceOverride -}}
>   {{- else -}}
>     {{- .Release.Namespace -}}
>   {{- end -}}
> {{- end -}}
> 
> {{/*
> Common labels
> */}}
> {{- define "grafana.labels" -}}
> helm.sh/chart: {{ include "grafana.chart" . }}
> {{ include "grafana.selectorLabels" . }}
> {{- if .Chart.AppVersion }}
> app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
> {{- end }}
> app.kubernetes.io/managed-by: {{ .Release.Service }}
> {{- end -}}
> 
> {{/*
> Selector labels
> */}}
> {{- define "grafana.selectorLabels" -}}
> app.kubernetes.io/name: {{ include "grafana.name" . }}
> app.kubernetes.io/instance: {{ .Release.Name }}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/_pod.tpl packages/monitoring/charts/charts/grafana/templates/_pod.tpl
0a1,369
> {{- define "grafana.pod" -}}
> {{- if .Values.schedulerName }}
> schedulerName: "{{ .Values.schedulerName }}"
> {{- end }}
> serviceAccountName: {{ template "grafana.serviceAccountName" . }}
> {{- if .Values.schedulerName }}
> schedulerName: "{{ .Values.schedulerName }}"
> {{- end }}
> {{- if .Values.securityContext }}
> securityContext:
> {{ toYaml .Values.securityContext | indent 2 }}
> {{- end }}
> {{- if .Values.priorityClassName }}
> priorityClassName: {{ .Values.priorityClassName }}
> {{- end }}
> {{- if ( or .Values.persistence.enabled .Values.dashboards  .Values.extraInitContainers) }}
> initContainers:
> {{- end }}
> {{- if ( and .Values.persistence.enabled .Values.initChownData.enabled ) }}
>   - name: init-chown-data
>     image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
>     imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
>     securityContext:
>       runAsUser: 0
>     command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsUser }}", "/var/lib/grafana"]
>     resources:
> {{ toYaml .Values.initChownData.resources | indent 6 }}
>     volumeMounts:
>       - name: storage
>         mountPath: "/var/lib/grafana"
> {{- if .Values.persistence.subPath }}
>         subPath: {{ .Values.persistence.subPath }}
> {{- end }}
> {{- end }}
> {{- if .Values.dashboards }}
>   - name: download-dashboards
>     image: "{{ .Values.downloadDashboardsImage.repository }}:{{ .Values.downloadDashboardsImage.tag }}"
>     imagePullPolicy: {{ .Values.downloadDashboardsImage.pullPolicy }}
>     command: ["/bin/sh"]
>     args: [ "-c", "mkdir -p /var/lib/grafana/dashboards/default && /bin/sh /etc/grafana/download_dashboards.sh" ]
>     env:
> {{- range $key, $value := .Values.downloadDashboards.env }}
>       - name: "{{ $key }}"
>         value: "{{ $value }}"
> {{- end }}
>     volumeMounts:
>       - name: config
>         mountPath: "/etc/grafana/download_dashboards.sh"
>         subPath: download_dashboards.sh
>       - name: storage
>         mountPath: "/var/lib/grafana"
> {{- if .Values.persistence.subPath }}
>         subPath: {{ .Values.persistence.subPath }}
> {{- end }}
>     {{- range .Values.extraSecretMounts }}
>       - name: {{ .name }}
>         mountPath: {{ .mountPath }}
>         readOnly: {{ .readOnly }}
>     {{- end }}
> {{- end }}
> {{- if .Values.extraInitContainers }}
> {{ toYaml .Values.extraInitContainers | indent 2 }}
> {{- end }}
> {{- if .Values.image.pullSecrets }}
> imagePullSecrets:
> {{- range .Values.image.pullSecrets }}
>   - name: {{ . }}
> {{- end}}
> {{- end }}
> containers:
> {{- if .Values.sidecar.dashboards.enabled }}
>   - name: {{ template "grafana.name" . }}-sc-dashboard
>     image: "{{ .Values.sidecar.image }}"
>     imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
>     env:
>       - name: METHOD
>         value: {{ .Values.sidecar.dashboards.watchMethod }}
>       - name: LABEL
>         value: "{{ .Values.sidecar.dashboards.label }}"
>       - name: FOLDER
>         value: "{{ .Values.sidecar.dashboards.folder }}{{- with .Values.sidecar.dashboards.defaultFolderName }}/{{ . }}{{- end }}"
>       - name: RESOURCE
>         value: "both"
>       {{- if .Values.sidecar.dashboards.searchNamespace }}
>       - name: NAMESPACE
>         value: "{{ .Values.sidecar.dashboards.searchNamespace }}"
>       {{- end }}
>       {{- if .Values.sidecar.skipTlsVerify }}
>       - name: SKIP_TLS_VERIFY
>         value: "{{ .Values.sidecar.skipTlsVerify }}"
>       {{- end }}
>     resources:
> {{ toYaml .Values.sidecar.resources | indent 6 }}
>     volumeMounts:
>       - name: sc-dashboard-volume
>         mountPath: {{ .Values.sidecar.dashboards.folder | quote }}
> {{- end}}
> {{- if .Values.sidecar.datasources.enabled }}
>   - name: {{ template "grafana.name" . }}-sc-datasources
>     image: "{{ .Values.sidecar.image }}"
>     imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
>     env:
>       - name: METHOD
>         value: {{ .Values.sidecar.datasources.watchMethod }}
>       - name: LABEL
>         value: "{{ .Values.sidecar.datasources.label }}"
>       - name: FOLDER
>         value: "/etc/grafana/provisioning/datasources"
>       - name: RESOURCE
>         value: "both"
>       {{- if .Values.sidecar.datasources.searchNamespace }}
>       - name: NAMESPACE
>         value: "{{ .Values.sidecar.datasources.searchNamespace }}"
>       {{- end }}
>       {{- if .Values.sidecar.skipTlsVerify }}
>       - name: SKIP_TLS_VERIFY
>         value: "{{ .Values.sidecar.skipTlsVerify }}"
>       {{- end }}
>     resources:
> {{ toYaml .Values.sidecar.resources | indent 6 }}
>     volumeMounts:
>       - name: sc-datasources-volume
>         mountPath: "/etc/grafana/provisioning/datasources"
> {{- end}}
>   - name: {{ .Chart.Name }}
>     image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
>     imagePullPolicy: {{ .Values.image.pullPolicy }}
>   {{- if .Values.command }}
>     command:
>     {{- range .Values.command }}
>       - {{ . }}
>     {{- end }}
>   {{- end}}
>     volumeMounts:
>       - name: config
>         mountPath: "/etc/grafana/grafana.ini"
>         subPath: grafana.ini
>       {{- if .Values.ldap.enabled }}
>       - name: ldap
>         mountPath: "/etc/grafana/ldap.toml"
>         subPath: ldap.toml
>       {{- end }}
>       {{- range .Values.extraConfigmapMounts }}
>       - name: {{ .name }}
>         mountPath: {{ .mountPath }}
>         subPath: {{ .subPath | default "" }}
>         readOnly: {{ .readOnly }}
>       {{- end }}
>       - name: storage
>         mountPath: "/var/lib/grafana"
> {{- if .Values.persistence.subPath }}
>         subPath: {{ .Values.persistence.subPath }}
> {{- end }}
> {{- if .Values.dashboards }}
> {{- range $provider, $dashboards := .Values.dashboards }}
> {{- range $key, $value := $dashboards }}
> {{- if (or (hasKey $value "json") (hasKey $value "file")) }}
>       - name: dashboards-{{ $provider }}
>         mountPath: "/var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.json"
>         subPath: "{{ $key }}.json"
> {{- end }}
> {{- end }}
> {{- end }}
> {{- end -}}
> {{- if .Values.dashboardsConfigMaps }}
> {{- range (keys .Values.dashboardsConfigMaps | sortAlpha) }}
>       - name: dashboards-{{ . }}
>         mountPath: "/var/lib/grafana/dashboards/{{ . }}"
> {{- end }}
> {{- end }}
> {{- if .Values.datasources }}
>       - name: config
>         mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
>         subPath: datasources.yaml
> {{- end }}
> {{- if .Values.notifiers }}
>       - name: config
>         mountPath: "/etc/grafana/provisioning/notifiers/notifiers.yaml"
>         subPath: notifiers.yaml
> {{- end }}
> {{- if .Values.dashboardProviders }}
>       - name: config
>         mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
>         subPath: dashboardproviders.yaml
> {{- end }}
> {{- if .Values.sidecar.dashboards.enabled }}
>       - name: sc-dashboard-volume
>         mountPath: {{ .Values.sidecar.dashboards.folder | quote }}
> {{ if .Values.sidecar.dashboards.SCProvider }}
>       - name: sc-dashboard-provider
>         mountPath: "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml"
>         subPath: provider.yaml
> {{- end}}
> {{- end}}
> {{- if .Values.sidecar.datasources.enabled }}
>       - name: sc-datasources-volume
>         mountPath: "/etc/grafana/provisioning/datasources"
> {{- end}}
>     {{- range .Values.extraSecretMounts }}
>       - name: {{ .name }}
>         mountPath: {{ .mountPath }}
>         readOnly: {{ .readOnly }}
>     {{- end }}
>     {{- range .Values.extraVolumeMounts }}
>       - name: {{ .name }}
>         mountPath: {{ .mountPath }}
>         subPath: {{ .subPath | default "" }}
>         readOnly: {{ .readOnly }}
>     {{- end }}
>     {{- range .Values.extraEmptyDirMounts }}
>       - name: {{ .name }}
>         mountPath: {{ .mountPath }}
>     {{- end }}
>     ports:
>       - name: {{ .Values.service.portName }}
>         containerPort: {{ .Values.service.port }}
>         protocol: TCP
>       - name: {{ .Values.podPortName }}
>         containerPort: 3000
>         protocol: TCP
>     env:
>       {{- if not .Values.env.GF_SECURITY_ADMIN_USER }}
>       - name: GF_SECURITY_ADMIN_USER
>         valueFrom:
>           secretKeyRef:
>             name: {{ .Values.admin.existingSecret | default (include "grafana.fullname" .) }}
>             key: {{ .Values.admin.userKey | default "admin-user" }}
>       {{- end }}
>       {{- if and (not .Values.env.GF_SECURITY_ADMIN_PASSWORD) (not .Values.env.GF_SECURITY_ADMIN_PASSWORD__FILE) }}
>       - name: GF_SECURITY_ADMIN_PASSWORD
>         valueFrom:
>           secretKeyRef:
>             name: {{ .Values.admin.existingSecret | default (include "grafana.fullname" .) }}
>             key: {{ .Values.admin.passwordKey | default "admin-password" }}
>       {{- end }}
>       {{- if .Values.plugins }}
>       - name: GF_INSTALL_PLUGINS
>         valueFrom:
>           configMapKeyRef:
>             name: {{ template "grafana.fullname" . }}
>             key: plugins
>       {{- end }}
>       {{- if .Values.smtp.existingSecret }}
>       - name: GF_SMTP_USER
>         valueFrom:
>           secretKeyRef:
>             name: {{ .Values.smtp.existingSecret }}
>             key: {{ .Values.smtp.userKey | default "user" }}
>       - name: GF_SMTP_PASSWORD
>         valueFrom:
>           secretKeyRef:
>             name: {{ .Values.smtp.existingSecret }}
>             key: {{ .Values.smtp.passwordKey | default "password" }}
>       {{- end }}
>     {{- range $key, $value := .Values.envValueFrom }}
>       - name: {{ $key | quote }}
>         valueFrom:
> {{ toYaml $value | indent 10 }}
>     {{- end }}
> {{- range $key, $value := .Values.env }}
>       - name: "{{ $key }}"
>         value: "{{ $value }}"
> {{- end }}
>     {{- if .Values.envFromSecret }}
>     envFrom:
>       - secretRef:
>           name: {{ .Values.envFromSecret }}
>     {{- end }}
>     {{- if .Values.envRenderSecret }}
>     envFrom:
>       - secretRef:
>           name: {{ template "grafana.fullname" . }}-env
>     {{- end }}
>     livenessProbe:
> {{ toYaml .Values.livenessProbe | indent 6 }}
>     readinessProbe:
> {{ toYaml .Values.readinessProbe | indent 6 }}
>     resources:
> {{ toYaml .Values.resources | indent 6 }}
> {{- with .Values.extraContainers }}
> {{ tpl . $ | indent 2 }}
> {{- end }}
> {{- with .Values.nodeSelector }}
> nodeSelector:
> {{ toYaml . | indent 2 }}
> {{- end }}
> {{- with .Values.affinity }}
> affinity:
> {{ toYaml . | indent 2 }}
> {{- end }}
> {{- with .Values.tolerations }}
> tolerations:
> {{ toYaml . | indent 2 }}
> {{- end }}
> volumes:
>   - name: config
>     configMap:
>       name: {{ template "grafana.fullname" . }}
> {{- range .Values.extraConfigmapMounts }}
>   - name: {{ .name }}
>     configMap:
>       name: {{ .configMap }}
> {{- end }}
>   {{- if .Values.dashboards }}
>     {{- range (keys .Values.dashboards | sortAlpha) }}
>   - name: dashboards-{{ . }}
>     configMap:
>       name: {{ template "grafana.fullname" $ }}-dashboards-{{ . }}
>     {{- end }}
>   {{- end }}
>   {{- if .Values.dashboardsConfigMaps }}
>     {{ $root := . }}
>     {{- range $provider, $name := .Values.dashboardsConfigMaps }}
>   - name: dashboards-{{ $provider }}
>     configMap:
>       name: {{ tpl $name $root }}
>     {{- end }}
>   {{- end }}
>   {{- if .Values.ldap.enabled }}
>   - name: ldap
>     secret:
>       {{- if .Values.ldap.existingSecret }}
>       secretName: {{ .Values.ldap.existingSecret }}
>       {{- else }}
>       secretName: {{ template "grafana.fullname" . }}
>       {{- end }}
>       items:
>         - key: ldap-toml
>           path: ldap.toml
>   {{- end }}
> {{- if and .Values.persistence.enabled (eq .Values.persistence.type "pvc") }}
>   - name: storage
>     persistentVolumeClaim:
>       claimName: {{ .Values.persistence.existingClaim | default (include "grafana.fullname" .) }}
> {{- else if and .Values.persistence.enabled (eq .Values.persistence.type "statefulset") }}
> # nothing
> {{- else }}
>   - name: storage
>     emptyDir: {}
> {{- end -}}
> {{- if .Values.sidecar.dashboards.enabled }}
>   - name: sc-dashboard-volume
>     emptyDir: {}
> {{- if .Values.sidecar.dashboards.SCProvider }}
>   - name: sc-dashboard-provider
>     configMap:
>       name: {{ template "grafana.fullname" . }}-config-dashboards
> {{- end }}
> {{- end }}
> {{- if .Values.sidecar.datasources.enabled }}
>   - name: sc-datasources-volume
>     emptyDir: {}
> {{- end -}}
> {{- range .Values.extraSecretMounts }}
>   - name: {{ .name }}
>     secret:
>       secretName: {{ .secretName }}
>       defaultMode: {{ .defaultMode }}
> {{- end }}
> {{- range .Values.extraVolumeMounts }}
>   - name: {{ .name }}
>     persistentVolumeClaim:
>       claimName: {{ .existingClaim }}
> {{- end }}
> {{- range .Values.extraEmptyDirMounts }}
>   - name: {{ .name }}
>     emptyDir: {}
> {{- end -}}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/clusterrole.yaml packages/monitoring/charts/charts/grafana/templates/clusterrole.yaml
0a1,25
> {{- if and .Values.rbac.create (not .Values.rbac.namespaced) }}
> kind: ClusterRole
> apiVersion: rbac.authorization.k8s.io/v1
> metadata:
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- with .Values.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
>   name: {{ template "grafana.fullname" . }}-clusterrole
> {{- if or .Values.sidecar.dashboards.enabled (or .Values.sidecar.datasources.enabled .Values.rbac.extraClusterRoleRules) }}
> rules:
> {{- if or .Values.sidecar.dashboards.enabled .Values.sidecar.datasources.enabled }}
> - apiGroups: [""] # "" indicates the core API group
>   resources: ["configmaps", "secrets"]
>   verbs: ["get", "watch", "list"]
> {{- end}}
> {{- with .Values.rbac.extraClusterRoleRules }}
> {{ toYaml . | indent 0 }}
> {{- end}}
> {{- else }}
> rules: []
> {{- end}}
> {{- end}}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/clusterrolebinding.yaml packages/monitoring/charts/charts/grafana/templates/clusterrolebinding.yaml
0a1,20
> {{- if and .Values.rbac.create (not .Values.rbac.namespaced) }}
> kind: ClusterRoleBinding
> apiVersion: rbac.authorization.k8s.io/v1
> metadata:
>   name: {{ template "grafana.fullname" . }}-clusterrolebinding
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- with .Values.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
> subjects:
>   - kind: ServiceAccount
>     name: {{ template "grafana.serviceAccountName" . }}
>     namespace: {{ template "grafana.namespace" . }}
> roleRef:
>   kind: ClusterRole
>   name: {{ template "grafana.fullname" . }}-clusterrole
>   apiGroup: rbac.authorization.k8s.io
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/configmap-dashboard-provider.yaml packages/monitoring/charts/charts/grafana/templates/configmap-dashboard-provider.yaml
0a1,25
> {{- if .Values.sidecar.dashboards.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- with .Values.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
>   name: {{ template "grafana.fullname" . }}-config-dashboards
>   namespace: {{ template "grafana.namespace" . }}
> data:
>   provider.yaml: |-
>     apiVersion: 1
>     providers:
>     - name: '{{ .Values.sidecar.dashboards.provider.name }}'
>       orgId: {{ .Values.sidecar.dashboards.provider.orgid }}
>       folder: '{{ .Values.sidecar.dashboards.provider.folder }}'
>       type: {{ .Values.sidecar.dashboards.provider.type }}
>       disableDeletion: {{ .Values.sidecar.dashboards.provider.disableDelete }}
>       allowUiUpdates: {{ .Values.sidecar.dashboards.provider.allowUiUpdates }}
>       options:
>         path: {{ .Values.sidecar.dashboards.folder }}{{- with .Values.sidecar.dashboards.defaultFolderName }}/{{ . }}{{- end }}
> {{- end}}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/configmap.yaml packages/monitoring/charts/charts/grafana/templates/configmap.yaml
0a1,69
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   name: {{ template "grafana.fullname" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> data:
> {{- if .Values.plugins }}
>   plugins: {{ join "," .Values.plugins }}
> {{- end }}
>   grafana.ini: |
> {{- range $key, $value := index .Values "grafana.ini" }}
>     [{{ $key }}]
>     {{- range $elem, $elemVal := $value }}
>     {{ $elem }} = {{ $elemVal }}
>     {{- end }}
> {{- end }}
> 
> {{- if .Values.datasources }}
> {{ $root := . }}
>   {{- range $key, $value := .Values.datasources }}
>   {{ $key }}: |
> {{ tpl (toYaml $value | indent 4) $root }}
>   {{- end -}}
> {{- end -}}
> 
> {{- if .Values.notifiers }}
>   {{- range $key, $value := .Values.notifiers }}
>   {{ $key }}: |
> {{ toYaml $value | indent 4 }}
>   {{- end -}}
> {{- end -}}
> 
> {{- if .Values.dashboardProviders }}
>   {{- range $key, $value := .Values.dashboardProviders }}
>   {{ $key }}: |
> {{ toYaml $value | indent 4 }}
>   {{- end -}}
> {{- end -}}
> 
> {{- if .Values.dashboards  }}
>   download_dashboards.sh: |
>     #!/usr/bin/env sh
>     set -euf
>     {{- if .Values.dashboardProviders }}
>       {{- range $key, $value := .Values.dashboardProviders }}
>         {{- range $value.providers }}
>     mkdir -p {{ .options.path }}
>         {{- end }}
>       {{- end }}
>     {{- end }}
> 
>   {{- range $provider, $dashboards := .Values.dashboards }}
>     {{- range $key, $value := $dashboards }}
>       {{- if (or (hasKey $value "gnetId") (hasKey $value "url")) }}
>     curl -skf \
>     --connect-timeout 60 \
>     --max-time 60 \
>       {{- if not $value.b64content }}
>     -H "Accept: application/json" \
>     -H "Content-Type: application/json;charset=UTF-8" \
>       {{ end }}
>     {{- if $value.url -}}{{ $value.url }}{{- else -}} https://grafana.com/api/dashboards/{{ $value.gnetId }}/revisions/{{- if $value.revision -}}{{ $value.revision }}{{- else -}}1{{- end -}}/download{{- end -}}{{ if $value.datasource }}| sed 's|\"datasource\":[^,]*|\"datasource\": \"{{ $value.datasource }}\"|g'{{ end }}{{- if $value.b64content -}} | base64 -d {{- end -}} \
>     > /var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.json
>       {{- end -}}
>     {{- end }}
>   {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/dashboards-json-configmap.yaml packages/monitoring/charts/charts/grafana/templates/dashboards-json-configmap.yaml
0a1,35
> {{- if .Values.dashboards }}
> {{ $files := .Files }}
> {{- range $provider, $dashboards := .Values.dashboards }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   name: {{ template "grafana.fullname" $ }}-dashboards-{{ $provider }}
>   namespace: {{ template "grafana.namespace" $ }}
>   labels:
>     {{- include "grafana.labels" $ | nindent 4 }}
>     dashboard-provider: {{ $provider }}
> {{- if $dashboards }}
> data:
> {{- $dashboardFound := false }}
> {{- range $key, $value := $dashboards }}
> {{- if (or (hasKey $value "json") (hasKey $value "file")) }}
> {{- $dashboardFound = true }}
> {{ print $key | indent 2 }}.json:
> {{- if hasKey $value "json" }}
>     |-
> {{ $value.json | indent 6 }}
> {{- end }}
> {{- if hasKey $value "file" }}
> {{ toYaml ( $files.Get $value.file ) | indent 4}}
> {{- end }}
> {{- end }}
> {{- end }}
> {{- if not $dashboardFound }}
>   {}
> {{- end }}
> {{- end }}
> ---
> {{- end }}
> 
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/deployment.yaml packages/monitoring/charts/charts/grafana/templates/deployment.yaml
0a1,44
> {{ if (or (not .Values.persistence.enabled) (eq .Values.persistence.type "pvc")) }}
> apiVersion: apps/v1
> kind: Deployment
> metadata:
>   name: {{ template "grafana.fullname" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- if .Values.labels }}
> {{ toYaml .Values.labels | indent 4 }}
> {{- end }}
> {{- with .Values.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
> spec:
>   replicas: {{ .Values.replicas }}
>   selector:
>     matchLabels:
>       {{- include "grafana.selectorLabels" . | nindent 6 }}
> {{- with .Values.deploymentStrategy }}
>   strategy:
> {{ toYaml . | trim | indent 4 }}
> {{- end }}
>   template:
>     metadata:
>       labels:
>         {{- include "grafana.selectorLabels" . | nindent 8 }}
> {{- with .Values.podLabels }}
> {{ toYaml . | indent 8 }}
> {{- end }}
>       annotations:
>         checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
>         checksum/dashboards-json-config: {{ include (print $.Template.BasePath "/dashboards-json-configmap.yaml") . | sha256sum }}
>         checksum/sc-dashboard-provider-config: {{ include (print $.Template.BasePath "/configmap-dashboard-provider.yaml") . | sha256sum }}
> {{- if and (not .Values.admin.existingSecret) (not .Values.env.GF_SECURITY_ADMIN_PASSWORD__FILE) }}
>         checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
> {{- end }}
> {{- with .Values.podAnnotations }}
> {{ toYaml . | indent 8 }}
> {{- end }}
>     spec:
>       {{- include "grafana.pod" . | nindent 6 }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/headless-service.yaml packages/monitoring/charts/charts/grafana/templates/headless-service.yaml
0a1,18
> {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) (eq .Values.persistence.type "statefulset")}}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "grafana.fullname" . }}-headless
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- with .Values.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
> spec:
>   clusterIP: None
>   selector:
>     {{- include "grafana.selectorLabels" . | nindent 4 }}
>   type: ClusterIP
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/ingress.yaml packages/monitoring/charts/charts/grafana/templates/ingress.yaml
0a1,42
> {{- if .Values.ingress.enabled -}}
> {{- $fullName := include "grafana.fullname" . -}}
> {{- $servicePort := .Values.service.port -}}
> {{- $ingressPath := .Values.ingress.path -}}
> {{- $extraPaths := .Values.ingress.extraPaths -}}
> {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" }}
> apiVersion: networking.k8s.io/v1beta1
> {{ else }}
> apiVersion: extensions/v1beta1
> {{ end -}}
> kind: Ingress
> metadata:
>   name: {{ $fullName }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- if .Values.ingress.labels }}
> {{ toYaml .Values.ingress.labels | indent 4 }}
> {{- end }}
> {{- with .Values.ingress.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
> spec:
> {{- if .Values.ingress.tls }}
>   tls:
> {{ toYaml .Values.ingress.tls | indent 4 }}
> {{- end }}
>   rules:
>   {{- range .Values.ingress.hosts }}
>     - host: {{ . }}
>       http:
>         paths:
> {{ if $extraPaths }}
> {{ toYaml $extraPaths | indent 10 }}
> {{- end }}
>           - path: {{ $ingressPath }}
>             backend:
>               serviceName: {{ $fullName }}
>               servicePort: {{ $servicePort }}
>   {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/poddisruptionbudget.yaml packages/monitoring/charts/charts/grafana/templates/poddisruptionbudget.yaml
0a1,22
> {{- if .Values.podDisruptionBudget }}
> apiVersion: policy/v1beta1
> kind: PodDisruptionBudget
> metadata:
>   name: {{ template "grafana.name" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- if .Values.labels }}
> {{ toYaml .Values.labels | indent 4 }}
> {{- end }}
> spec:
> {{- if .Values.podDisruptionBudget.minAvailable }}
>   minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
> {{- end }}
> {{- if .Values.podDisruptionBudget.maxUnavailable }}
>   maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
> {{- end }}
>   selector:
>     matchLabels:
>       {{- include "grafana.selectorLabels" . | nindent 6 }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/podsecuritypolicy.yaml packages/monitoring/charts/charts/grafana/templates/podsecuritypolicy.yaml
0a1,52
> {{- if .Values.rbac.pspEnabled }}
> apiVersion: policy/v1beta1
> kind: PodSecurityPolicy
> metadata:
>   name: {{ template "grafana.fullname" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
>   annotations:
>     seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
>     seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
>     {{- if .Values.rbac.pspUseAppArmor }}
>     apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
>     apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
>     {{- end }}
> spec:
>   privileged: false
>   allowPrivilegeEscalation: false
>   requiredDropCapabilities:
>     # Default set from Docker, without DAC_OVERRIDE or CHOWN
>     - FOWNER
>     - FSETID
>     - KILL
>     - SETGID
>     - SETUID
>     - SETPCAP
>     - NET_BIND_SERVICE
>     - NET_RAW
>     - SYS_CHROOT
>     - MKNOD
>     - AUDIT_WRITE
>     - SETFCAP
>   volumes:
>     - 'configMap'
>     - 'emptyDir'
>     - 'projected'
>     - 'secret'
>     - 'downwardAPI'
>     - 'persistentVolumeClaim'
>   hostNetwork: false
>   hostIPC: false
>   hostPID: false
>   runAsUser:
>     rule: 'RunAsAny'
>   seLinux:
>     rule: 'RunAsAny'
>   supplementalGroups:
>     rule: 'RunAsAny'
>   fsGroup:
>     rule: 'RunAsAny'
>   readOnlyRootFilesystem: false
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/pvc.yaml packages/monitoring/charts/charts/grafana/templates/pvc.yaml
0a1,28
> {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) (eq .Values.persistence.type "pvc")}}
> apiVersion: v1
> kind: PersistentVolumeClaim
> metadata:
>   name: {{ template "grafana.fullname" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
>   {{- with .Values.persistence.annotations  }}
>   annotations:
> {{ toYaml . | indent 4 }}
>   {{- end }}
>   {{- with .Values.persistence.finalizers  }}
>   finalizers:
> {{ toYaml . | indent 4 }}
>   {{- end }}
> spec:
>   accessModes:
>     {{- range .Values.persistence.accessModes }}
>     - {{ . | quote }}
>     {{- end }}
>   resources:
>     requests:
>       storage: {{ .Values.persistence.size | quote }}
>   {{- if .Values.persistence.storageClassName }}
>   storageClassName: {{ .Values.persistence.storageClassName }}
>   {{- end -}}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/role.yaml packages/monitoring/charts/charts/grafana/templates/role.yaml
0a1,32
> {{- if .Values.rbac.create -}}
> apiVersion: rbac.authorization.k8s.io/v1beta1
> kind: Role
> metadata:
>   name: {{ template "grafana.fullname" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- with .Values.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
> {{- if or .Values.rbac.pspEnabled (and .Values.rbac.namespaced (or .Values.sidecar.dashboards.enabled (or .Values.sidecar.datasources.enabled .Values.rbac.extraRoleRules))) }}
> rules:
> {{- if .Values.rbac.pspEnabled }}
> - apiGroups:      ['extensions']
>   resources:      ['podsecuritypolicies']
>   verbs:          ['use']
>   resourceNames:  [{{ template "grafana.fullname" . }}]
> {{- end }}
> {{- if and .Values.rbac.namespaced (or .Values.sidecar.dashboards.enabled .Values.sidecar.datasources.enabled) }}
> - apiGroups: [""] # "" indicates the core API group
>   resources: ["configmaps", "secrets"]
>   verbs: ["get", "watch", "list"]
> {{- end }}
> {{- with .Values.rbac.extraRoleRules }}
> {{ toYaml . | indent 0 }}
> {{- end}}
> {{- else }}
> rules: []
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/rolebinding.yaml packages/monitoring/charts/charts/grafana/templates/rolebinding.yaml
0a1,27
> {{- if .Values.rbac.create -}}
> apiVersion: rbac.authorization.k8s.io/v1beta1
> kind: RoleBinding
> metadata:
>   name: {{ template "grafana.fullname" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- with .Values.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: {{ template "grafana.fullname" . }}
> subjects:
> - kind: ServiceAccount
>   name: {{ template "grafana.serviceAccountName" . }}
>   namespace: {{ template "grafana.namespace" . }}
> {{- if .Values.rbac.namespaced }}
> roleRef:
>   kind: Role
>   name: {{ template "grafana.fullname" . }}
>   apiGroup: rbac.authorization.k8s.io
> {{- end }}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/secret-env.yaml packages/monitoring/charts/charts/grafana/templates/secret-env.yaml
0a1,14
> {{- if .Values.envRenderSecret }}
> apiVersion: v1
> kind: Secret
> metadata:
>   name: {{ template "grafana.fullname" . }}-env
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> type: Opaque
> data:
> {{- range $key, $val := .Values.envRenderSecret }}
>   {{ $key }}: {{ $val | b64enc | quote }}
> {{- end -}}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/secret.yaml packages/monitoring/charts/charts/grafana/templates/secret.yaml
0a1,20
> {{- if and (not .Values.admin.existingSecret) (not .Values.env.GF_SECURITY_ADMIN_PASSWORD__FILE) }}
> apiVersion: v1
> kind: Secret
> metadata:
>   name: {{ template "grafana.fullname" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> type: Opaque
> data:
>   admin-user: {{ .Values.adminUser | b64enc | quote }}
>   {{- if .Values.adminPassword }}
>   admin-password: {{ .Values.adminPassword | b64enc | quote }}
>   {{- else }}
>   admin-password: {{ randAlphaNum 40 | b64enc | quote }}
>   {{- end }}
>   {{- if not .Values.ldap.existingSecret }}
>   ldap-toml: {{ .Values.ldap.config | b64enc | quote }}
>   {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/service.yaml packages/monitoring/charts/charts/grafana/templates/service.yaml
0a1,46
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "grafana.fullname" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- if .Values.service.labels }}
> {{ toYaml .Values.service.labels | indent 4 }}
> {{- end }}
> {{- with .Values.service.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
> spec:
> {{- if (or (eq .Values.service.type "ClusterIP") (empty .Values.service.type)) }}
>   type: ClusterIP
>   {{- if .Values.service.clusterIP }}
>   clusterIP: {{ .Values.service.clusterIP }}
>   {{end}}
> {{- else if eq .Values.service.type "LoadBalancer" }}
>   type: {{ .Values.service.type }}
>   {{- if .Values.service.loadBalancerIP }}
>   loadBalancerIP: {{ .Values.service.loadBalancerIP }}
>   {{- end }}
>   {{- if .Values.service.loadBalancerSourceRanges }}
>   loadBalancerSourceRanges:
> {{ toYaml .Values.service.loadBalancerSourceRanges | indent 4 }}
>   {{- end -}}
> {{- else }}
>   type: {{ .Values.service.type }}
> {{- end }}
> {{- if .Values.service.externalIPs }}
>   externalIPs:
> {{ toYaml .Values.service.externalIPs | indent 4 }}
> {{- end }}
>   ports:
>     - name: {{ .Values.service.portName }}
>       port: {{ .Values.service.port }}
>       protocol: TCP
>       targetPort: {{ .Values.service.targetPort }}
> {{ if (and (eq .Values.service.type "NodePort") (not (empty .Values.service.nodePort))) }}
>       nodePort: {{.Values.service.nodePort}}
> {{ end }}
>   selector:
>     {{- include "grafana.selectorLabels" . | nindent 4 }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/serviceaccount.yaml packages/monitoring/charts/charts/grafana/templates/serviceaccount.yaml
0a1,13
> {{- if .Values.serviceAccount.create }}
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- with .Values.serviceAccount.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
>   name: {{ template "grafana.serviceAccountName" . }}
>   namespace: {{ template "grafana.namespace" . }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/statefulset.yaml packages/monitoring/charts/charts/grafana/templates/statefulset.yaml
0a1,44
> {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) (eq .Values.persistence.type "statefulset")}}
> apiVersion: apps/v1
> kind: StatefulSet
> metadata:
>   name: {{ template "grafana.fullname" . }}
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> {{- with .Values.annotations }}
>   annotations:
> {{ toYaml . | indent 4 }}
> {{- end }}
> spec:
>   replicas: {{ .Values.replicas }}
>   selector:
>     matchLabels:
>       {{- include "grafana.selectorLabels" . | nindent 6 }}
>   serviceName: {{ template "grafana.fullname" . }}-headless
>   template:
>     metadata:
>       labels:
>         {{- include "grafana.selectorLabels" . | nindent 8 }}
>       annotations:
>         checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
>         checksum/dashboards-json-config: {{ include (print $.Template.BasePath "/dashboards-json-configmap.yaml") . | sha256sum }}
>         checksum/sc-dashboard-provider-config: {{ include (print $.Template.BasePath "/configmap-dashboard-provider.yaml") . | sha256sum }}
> {{- if not .Values.admin.existingSecret }}
>         checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
> {{- end }}
> {{- with .Values.podAnnotations }}
> {{ toYaml . | indent 8 }}
> {{- end }}
>     spec:
>       {{- include "grafana.pod" . | nindent 6 }}
>   volumeClaimTemplates:
>   - metadata:
>       name: storage
>     spec:
>       accessModes: {{ .Values.persistence.accessModes }}
>       storageClassName: {{ .Values.persistence.storageClassName }}
>       resources:
>         requests:
>           storage: {{ .Values.persistence.size }} 
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/tests/test-configmap.yaml packages/monitoring/charts/charts/grafana/templates/tests/test-configmap.yaml
0a1,17
> {{- if .Values.testFramework.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   name: {{ template "grafana.fullname" . }}-test
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> data:
>   run.sh: |-
>     @test "Test Health" {
>       url="http://{{ template "grafana.fullname" . }}/api/health"
> 
>       code=$(wget --server-response --spider --timeout 10 --tries 1 ${url} 2>&1 | awk '/^  HTTP/{print $2}')
>       [ "$code" == "200" ]
>     }
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/tests/test-podsecuritypolicy.yaml packages/monitoring/charts/charts/grafana/templates/tests/test-podsecuritypolicy.yaml
0a1,29
> {{- if and .Values.testFramework.enabled .Values.rbac.pspEnabled }}
> apiVersion: policy/v1beta1
> kind: PodSecurityPolicy
> metadata:
>   name: {{ template "grafana.fullname" . }}-test
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> spec:
>   allowPrivilegeEscalation: true
>   privileged: false
>   hostNetwork: false
>   hostIPC: false
>   hostPID: false
>   fsGroup:
>     rule: RunAsAny
>   seLinux:
>     rule: RunAsAny
>   supplementalGroups:
>     rule: RunAsAny
>   runAsUser:
>     rule: RunAsAny
>   volumes:
>   - configMap
>   - downwardAPI
>   - emptyDir
>   - projected
>   - secret
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/tests/test-role.yaml packages/monitoring/charts/charts/grafana/templates/tests/test-role.yaml
0a1,14
> {{- if and .Values.testFramework.enabled .Values.rbac.pspEnabled -}}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name: {{ template "grafana.fullname" . }}-test
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> rules:
> - apiGroups:      ['policy']
>   resources:      ['podsecuritypolicies']
>   verbs:          ['use']
>   resourceNames:  [{{ template "grafana.fullname" . }}-test]
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/tests/test-rolebinding.yaml packages/monitoring/charts/charts/grafana/templates/tests/test-rolebinding.yaml
0a1,17
> {{- if and .Values.testFramework.enabled .Values.rbac.pspEnabled -}}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: {{ template "grafana.fullname" . }}-test
>   namespace: {{ template "grafana.namespace" . }}
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: {{ template "grafana.fullname" . }}-test
> subjects:
> - kind: ServiceAccount
>   name: {{ template "grafana.serviceAccountNameTest" . }}
>   namespace: {{ template "grafana.namespace" . }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/tests/test-serviceaccount.yaml packages/monitoring/charts/charts/grafana/templates/tests/test-serviceaccount.yaml
0a1,9
> {{- if and .Values.testFramework.enabled .Values.serviceAccount.create }}
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
>   name: {{ template "grafana.serviceAccountNameTest" . }}
>   namespace: {{ template "grafana.namespace" . }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/templates/tests/test.yaml packages/monitoring/charts/charts/grafana/templates/tests/test.yaml
0a1,47
> {{- if .Values.testFramework.enabled }}
> apiVersion: v1
> kind: Pod
> metadata:
>   name: {{ template "grafana.fullname" . }}-test
>   labels:
>     {{- include "grafana.labels" . | nindent 4 }}
>   annotations:
>     "helm.sh/hook": test-success
>   namespace: {{ template "grafana.namespace" . }}
> spec:
>   serviceAccountName: {{ template "grafana.serviceAccountNameTest" . }}
>   {{- if .Values.testFramework.securityContext }}
>   securityContext: {{ toYaml .Values.testFramework.securityContext | nindent 4 }}
>   {{- end }}
>   {{- if .Values.image.pullSecrets }}
>   imagePullSecrets:
>   {{- range .Values.image.pullSecrets }}
>     - name: {{ . }}
>   {{- end}}
>   {{- end }}
>   {{- with .Values.nodeSelector }}
>   nodeSelector:
> {{ toYaml . | indent 4 }}
>   {{- end }}
>   {{- with .Values.affinity }}
>   affinity:
> {{ toYaml . | indent 4 }}
>   {{- end }}
>   {{- with .Values.tolerations }}
>   tolerations:
> {{ toYaml . | indent 4 }}
>   {{- end }}
>   containers:
>     - name: {{ .Release.Name }}-test
>       image: "{{ .Values.testFramework.image}}:{{ .Values.testFramework.tag }}"
>       command: ["/opt/bats/bin/bats", "-t", "/tests/run.sh"]
>       volumeMounts:
>         - mountPath: /tests
>           name: tests
>           readOnly: true
>   volumes:
>   - name: tests
>     configMap:
>       name: {{ template "grafana.fullname" . }}-test
>   restartPolicy: Never
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/grafana/values.yaml packages/monitoring/charts/charts/grafana/values.yaml
0a1,485
> rbac:
>   create: true
>   pspEnabled: true
>   pspUseAppArmor: true
>   namespaced: false
>   extraRoleRules: []
>   # - apiGroups: []
>   #   resources: []
>   #   verbs: []
>   extraClusterRoleRules: []
>   # - apiGroups: []
>   #   resources: []
>   #   verbs: []
> serviceAccount:
>   create: true
>   name:
>   nameTest:
> #  annotations:
> 
> replicas: 1
> 
> ## See `kubectl explain poddisruptionbudget.spec` for more
> ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
> podDisruptionBudget: {}
> #  minAvailable: 1
> #  maxUnavailable: 1
> 
> ## See `kubectl explain deployment.spec.strategy` for more
> ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
> deploymentStrategy:
>   type: RollingUpdate
> 
> readinessProbe:
>   httpGet:
>     path: /api/health
>     port: 3000
> 
> livenessProbe:
>   httpGet:
>     path: /api/health
>     port: 3000
>   initialDelaySeconds: 60
>   timeoutSeconds: 30
>   failureThreshold: 10
> 
> ## Use an alternate scheduler, e.g. "stork".
> ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
> ##
> # schedulerName: "default-scheduler"
> 
> image:
>   repository: grafana/grafana
>   tag: 6.6.2
>   pullPolicy: IfNotPresent
> 
>   ## Optionally specify an array of imagePullSecrets.
>   ## Secrets must be manually created in the namespace.
>   ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
>   ##
>   # pullSecrets:
>   #   - myRegistrKeySecretName
> 
> testFramework:
>   enabled: true
>   image: "bats/bats"
>   tag: "v1.1.0"
>   securityContext: {}
> 
> securityContext:
>   runAsUser: 472
>   fsGroup: 472
> 
> 
> extraConfigmapMounts: []
>   # - name: certs-configmap
>   #   mountPath: /etc/grafana/ssl/
>   #   subPath: certificates.crt # (optional)
>   #   configMap: certs-configmap
>   #   readOnly: true
> 
> 
> extraEmptyDirMounts: []
>   # - name: provisioning-notifiers
>   #   mountPath: /etc/grafana/provisioning/notifiers
> 
> 
> ## Assign a PriorityClassName to pods if set
> # priorityClassName:
> 
> downloadDashboardsImage:
>   repository: curlimages/curl
>   tag: 7.68.0
>   pullPolicy: IfNotPresent
> 
> downloadDashboards:
>   env: {}
> 
> ## Pod Annotations
> # podAnnotations: {}
> 
> ## Pod Labels
> # podLabels: {}
> 
> podPortName: grafana
> 
> ## Deployment annotations
> # annotations: {}
> 
> ## Expose the grafana service to be accessed from outside the cluster (LoadBalancer service).
> ## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
> ## ref: http://kubernetes.io/docs/user-guide/services/
> ##
> service:
>   type: ClusterIP
>   port: 80
>   targetPort: 3000
>     # targetPort: 4181 To be used with a proxy extraContainer
>   annotations: {}
>   labels: {}
>   portName: service
> 
> ingress:
>   enabled: false
>   annotations: {}
>     # kubernetes.io/ingress.class: nginx
>     # kubernetes.io/tls-acme: "true"
>   labels: {}
>   path: /
>   hosts:
>     - chart-example.local
>   ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
>   extraPaths: []
>   # - path: /*
>   #   backend:
>   #     serviceName: ssl-redirect
>   #     servicePort: use-annotation
>   tls: []
>   #  - secretName: chart-example-tls
>   #    hosts:
>   #      - chart-example.local
> 
> resources: {}
> #  limits:
> #    cpu: 100m
> #    memory: 128Mi
> #  requests:
> #    cpu: 100m
> #    memory: 128Mi
> 
> ## Node labels for pod assignment
> ## ref: https://kubernetes.io/docs/user-guide/node-selection/
> #
> nodeSelector: {}
> 
> ## Tolerations for pod assignment
> ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
> ##
> tolerations: []
> 
> ## Affinity for pod assignment
> ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
> ##
> affinity: {}
> 
> extraInitContainers: []
> 
> ## Enable an Specify container in extraContainers. This is meant to allow adding an authentication proxy to a grafana pod
> extraContainers: |
> # - name: proxy
> #   image: quay.io/gambol99/keycloak-proxy:latest
> #   args:
> #   - -provider=github
> #   - -client-id=
> #   - -client-secret=
> #   - -github-org=<ORG_NAME>
> #   - -email-domain=*
> #   - -cookie-secret=
> #   - -http-address=http://0.0.0.0:4181
> #   - -upstream-url=http://127.0.0.1:3000
> #   ports:
> #     - name: proxy-web
> #       containerPort: 4181
> 
> ## Enable persistence using Persistent Volume Claims
> ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
> ##
> persistence:
>   type: pvc
>   enabled: false
>   # storageClassName: default
>   accessModes:
>     - ReadWriteOnce
>   size: 10Gi
>   # annotations: {}
>   finalizers:
>     - kubernetes.io/pvc-protection
>   # subPath: ""
>   # existingClaim:
> 
> initChownData:
>   ## If false, data ownership will not be reset at startup
>   ## This allows the prometheus-server to be run with an arbitrary user
>   ##
>   enabled: true
> 
>   ## initChownData container image
>   ##
>   image:
>     repository: busybox
>     tag: "1.31.1"
>     pullPolicy: IfNotPresent
> 
>   ## initChownData resource requests and limits
>   ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
>   ##
>   resources: {}
>   #  limits:
>   #    cpu: 100m
>   #    memory: 128Mi
>   #  requests:
>   #    cpu: 100m
>   #    memory: 128Mi
> 
> 
> # Administrator credentials when not using an existing secret (see below)
> adminUser: admin
> # adminPassword: strongpassword
> 
> # Use an existing secret for the admin user.
> admin:
>   existingSecret: ""
>   userKey: admin-user
>   passwordKey: admin-password
> 
> ## Define command to be executed at startup by grafana container
> ## Needed if using `vault-env` to manage secrets (ref: https://banzaicloud.com/blog/inject-secrets-into-pods-vault/)
> ## Default is "run.sh" as defined in grafana's Dockerfile
> # command:
> # - "sh"
> # - "/run.sh"
> 
> ## Use an alternate scheduler, e.g. "stork".
> ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
> ##
> # schedulerName:
> 
> ## Extra environment variables that will be pass onto deployment pods
> env: {}
> 
> ## "valueFrom" environment variable references that will be added to deployment pods
> ## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#envvarsource-v1-core
> ## Renders in container spec as:
> ##   env:
> ##     ...
> ##     - name: <key>
> ##       valueFrom:
> ##         <value rendered as YAML>
> envValueFrom: {}
> 
> ## The name of a secret in the same kubernetes namespace which contain values to be added to the environment
> ## This can be useful for auth tokens, etc
> envFromSecret: ""
> 
> ## Sensible environment variables that will be rendered as new secret object
> ## This can be useful for auth tokens, etc
> envRenderSecret: {}
> 
> ## Additional grafana server secret mounts
> # Defines additional mounts with secrets. Secrets must be manually created in the namespace.
> extraSecretMounts: []
>   # - name: secret-files
>   #   mountPath: /etc/secrets
>   #   secretName: grafana-secret-files
>   #   readOnly: true
> 
> ## Additional grafana server volume mounts
> # Defines additional volume mounts.
> extraVolumeMounts: []
>   # - name: extra-volume
>   #   mountPath: /mnt/volume
>   #   readOnly: true
>   #   existingClaim: volume-claim
> 
> ## Pass the plugins you want installed as a list.
> ##
> plugins: []
>   # - digrich-bubblechart-panel
>   # - grafana-clock-panel
> 
> ## Configure grafana datasources
> ## ref: http://docs.grafana.org/administration/provisioning/#datasources
> ##
> datasources: {}
> #  datasources.yaml:
> #    apiVersion: 1
> #    datasources:
> #    - name: Prometheus
> #      type: prometheus
> #      url: http://prometheus-prometheus-server
> #      access: proxy
> #      isDefault: true
> 
> ## Configure notifiers
> ## ref: http://docs.grafana.org/administration/provisioning/#alert-notification-channels
> ##
> notifiers: {}
> #  notifiers.yaml:
> #    notifiers:
> #    - name: email-notifier
> #      type: email
> #      uid: email1
> #      # either:
> #      org_id: 1
> #      # or
> #      org_name: Main Org.
> #      is_default: true
> #      settings:
> #        addresses: an_email_address@example.com
> #    delete_notifiers:
> 
> ## Configure grafana dashboard providers
> ## ref: http://docs.grafana.org/administration/provisioning/#dashboards
> ##
> ## `path` must be /var/lib/grafana/dashboards/<provider_name>
> ##
> dashboardProviders: {}
> #  dashboardproviders.yaml:
> #    apiVersion: 1
> #    providers:
> #    - name: 'default'
> #      orgId: 1
> #      folder: ''
> #      type: file
> #      disableDeletion: false
> #      editable: true
> #      options:
> #        path: /var/lib/grafana/dashboards/default
> 
> ## Configure grafana dashboard to import
> ## NOTE: To use dashboards you must also enable/configure dashboardProviders
> ## ref: https://grafana.com/dashboards
> ##
> ## dashboards per provider, use provider name as key.
> ##
> dashboards: {}
>   # default:
>   #   some-dashboard:
>   #     json: |
>   #       $RAW_JSON
>   #   custom-dashboard:
>   #     file: dashboards/custom-dashboard.json
>   #   prometheus-stats:
>   #     gnetId: 2
>   #     revision: 2
>   #     datasource: Prometheus
>   #   local-dashboard:
>   #     url: https://example.com/repository/test.json
>   #   local-dashboard-base64:
>   #     url: https://example.com/repository/test-b64.json
>   #     b64content: true
> 
> ## Reference to external ConfigMap per provider. Use provider name as key and ConfiMap name as value.
> ## A provider dashboards must be defined either by external ConfigMaps or in values.yaml, not in both.
> ## ConfigMap data example:
> ##
> ## data:
> ##   example-dashboard.json: |
> ##     RAW_JSON
> ##
> dashboardsConfigMaps: {}
> #  default: ""
> 
> ## Grafana's primary configuration
> ## NOTE: values in map will be converted to ini format
> ## ref: http://docs.grafana.org/installation/configuration/
> ##
> grafana.ini:
>   paths:
>     data: /var/lib/grafana/data
>     logs: /var/log/grafana
>     plugins: /var/lib/grafana/plugins
>     provisioning: /etc/grafana/provisioning
>   analytics:
>     check_for_updates: true
>   log:
>     mode: console
>   grafana_net:
>     url: https://grafana.net
> ## LDAP Authentication can be enabled with the following values on grafana.ini
> ## NOTE: Grafana will fail to start if the value for ldap.toml is invalid
>   # auth.ldap:
>   #   enabled: true
>   #   allow_sign_up: true
>   #   config_file: /etc/grafana/ldap.toml
> 
> ## Grafana's LDAP configuration
> ## Templated by the template in _helpers.tpl
> ## NOTE: To enable the grafana.ini must be configured with auth.ldap.enabled
> ## ref: http://docs.grafana.org/installation/configuration/#auth-ldap
> ## ref: http://docs.grafana.org/installation/ldap/#configuration
> ldap:
>   enabled: false
>   # `existingSecret` is a reference to an existing secret containing the ldap configuration
>   # for Grafana in a key `ldap-toml`.
>   existingSecret: ""
>   # `config` is the content of `ldap.toml` that will be stored in the created secret
>   config: ""
>   # config: |-
>   #   verbose_logging = true
> 
>   #   [[servers]]
>   #   host = "my-ldap-server"
>   #   port = 636
>   #   use_ssl = true
>   #   start_tls = false
>   #   ssl_skip_verify = false
>   #   bind_dn = "uid=%s,ou=users,dc=myorg,dc=com"
> 
> ## Grafana's SMTP configuration
> ## NOTE: To enable, grafana.ini must be configured with smtp.enabled
> ## ref: http://docs.grafana.org/installation/configuration/#smtp
> smtp:
>   # `existingSecret` is a reference to an existing secret containing the smtp configuration
>   # for Grafana.
>   existingSecret: ""
>   userKey: "user"
>   passwordKey: "password"
> 
> ## Sidecars that collect the configmaps with specified label and stores the included files them into the respective folders
> ## Requires at least Grafana 5 to work and can't be used together with parameters dashboardProviders, datasources and dashboards
> sidecar:
>   image: kiwigrid/k8s-sidecar:0.1.99
>   imagePullPolicy: IfNotPresent
>   resources: {}
> #   limits:
> #     cpu: 100m
> #     memory: 100Mi
> #   requests:
> #     cpu: 50m
> #     memory: 50Mi
>   # skipTlsVerify Set to true to skip tls verification for kube api calls
>   # skipTlsVerify: true
>   dashboards:
>     enabled: false
>     ## Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
>     watchMethod: WATCH
>     SCProvider: true
>     # label that the configmaps with dashboards are marked with
>     label: grafana_dashboard
>     # folder in the pod that should hold the collected dashboards (unless `defaultFolderName` is set)
>     folder: /tmp/dashboards
>     # The default folder name, it will create a subfolder under the `folder` and put dashboards in there instead
>     defaultFolderName: null
>     # If specified, the sidecar will search for dashboard config-maps inside this namespace.
>     # Otherwise the namespace in which the sidecar is running will be used.
>     # It's also possible to specify ALL to search in all namespaces
>     searchNamespace: null
>     # provider configuration that lets grafana manage the dashboards
>     provider:
>       # name of the provider, should be unique
>       name: sidecarProvider
>       # orgid as configured in grafana
>       orgid: 1
>       # folder in which the dashboards should be imported in grafana
>       folder: ''
>       # type of the provider
>       type: file
>       # disableDelete to activate a import-only behaviour
>       disableDelete: false
>       # allow updating provisioned dashboards from the UI
>       allowUiUpdates: false
>   datasources:
>     enabled: false
>     ## Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
>     watchMethod: WATCH
>     # label that the configmaps with datasources are marked with
>     label: grafana_datasource
>     # If specified, the sidecar will search for datasource config-maps inside this namespace.
>     # Otherwise the namespace in which the sidecar is running will be used.
>     # It's also possible to specify ALL to search in all namespaces
>     searchNamespace: null
> 
> ## Override the deployment namespace
> ##
> namespaceOverride: ""
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/.helmignore packages/monitoring/charts/charts/kube-state-metrics/.helmignore
0a1,21
> # Patterns to ignore when building packages.
> # This supports shell glob matching, relative path matching, and
> # negation (prefixed with !). Only one pattern per line.
> .DS_Store
> # Common VCS dirs
> .git/
> .gitignore
> .bzr/
> .bzrignore
> .hg/
> .hgignore
> .svn/
> # Common backup files
> *.swp
> *.bak
> *.tmp
> *~
> # Various IDEs
> .project
> .idea/
> *.tmproj
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/Chart.yaml packages/monitoring/charts/charts/kube-state-metrics/Chart.yaml
0a1,20
> apiVersion: v1
> appVersion: 1.9.4
> description: Install kube-state-metrics to generate and expose cluster-level metrics
> home: https://github.com/kubernetes/kube-state-metrics/
> keywords:
> - metric
> - monitoring
> - prometheus
> - kubernetes
> maintainers:
> - email: jose@armesto.net
>   name: fiunchinho
> - email: tariq.ibrahim@mulesoft.com
>   name: tariq1890
> - email: manuel@rueg.eu
>   name: mrueg
> name: kube-state-metrics
> sources:
> - https://github.com/kubernetes/kube-state-metrics/
> version: 2.6.4
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/OWNERS packages/monitoring/charts/charts/kube-state-metrics/OWNERS
0a1,8
> approvers:
> - fiunchinho
> - tariq1890
> - mrueg
> reviewers:
> - fiunchinho
> - tariq1890
> - mrueg
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/README.md packages/monitoring/charts/charts/kube-state-metrics/README.md
0a1,72
> # kube-state-metrics Helm Chart
> 
> * Installs the [kube-state-metrics agent](https://github.com/kubernetes/kube-state-metrics).
> 
> ## Installing the Chart
> 
> To install the chart with the release name `my-release`:
> 
> ```bash
> $ helm install stable/kube-state-metrics
> ```
> 
> ## Configuration
> 
> | Parameter                                    | Description                                                                           | Default                                    |
> |:---------------------------------------------|:--------------------------------------------------------------------------------------|:-------------------------------------------|
> | `image.repository`                           | The image repository to pull from                                                     | quay.io/coreos/kube-state-metrics          |
> | `image.tag`                                  | The image tag to pull from                                                            | `v1.9.4`                                   |
> | `image.pullPolicy`                           | Image pull policy                                                                     | `IfNotPresent`                             |
> | `replicas`                                   | Number of replicas                                                                    | `1`                                        |
> | `service.port`                               | The port of the container                                                             | `8080`                                     |
> | `service.annotations`                        | Annotations to be added to the service                                                | `{}`                                       |
> | `customLabels`                               | Custom labels to apply to service, deployment and pods                                | `{}`                                       |
> | `hostNetwork`                                | Whether or not to use the host network                                                | `false`                                    |
> | `prometheusScrape`                           | Whether or not enable prom scrape                                                     | `true`                                     |
> | `rbac.create`                                | If true, create & use RBAC resources                                                  | `true`                                     |
> | `serviceAccount.create`                      | If true, create & use serviceAccount                                                  | `true`                                     |
> | `serviceAccount.name`                        | If not set & create is true, use template fullname                                    |                                            |
> | `serviceAccount.imagePullSecrets`            | Specify image pull secrets field                                                      | `[]`                                       |
> | `podSecurityPolicy.enabled`                  | If true, create & use PodSecurityPolicy resources                                     | `false`                                    |
> | `podSecurityPolicy.annotations`              | Specify pod annotations in the pod security policy                                    | {}                                         |
> | `securityContext.enabled`                    | Enable security context                                                               | `true`                                     |
> | `securityContext.fsGroup`                    | Group ID for the container                                                            | `65534`                                    |
> | `securityContext.runAsUser`                  | User ID for the container                                                             | `65534`                                    |
> | `priorityClassName`                          | Name of Priority Class to assign pods                                                 | `nil`                                      |
> | `nodeSelector`                               | Node labels for pod assignment                                                        | {}                                         |
> | `affinity`                                   | Affinity settings for pod assignment                                                  | {}                                         |
> | `tolerations`                                | Tolerations for pod assignment                                                        | []                                         |
> | `podAnnotations`                             | Annotations to be added to the pod                                                    | {}                                         |
> | `resources`                                  | kube-state-metrics resource requests and limits                                       | {}                                         |
> | `collectors.certificatesigningrequests`      | Enable the certificatesigningrequests collector.                                      | `true`                                     |
> | `collectors.configmaps`                      | Enable the configmaps collector.                                                      | `true`                                     |
> | `collectors.cronjobs`                        | Enable the cronjobs collector.                                                        | `true`                                     |
> | `collectors.daemonsets`                      | Enable the daemonsets collector.                                                      | `true`                                     |
> | `collectors.deployments`                     | Enable the deployments collector.                                                     | `true`                                     |
> | `collectors.endpoints`                       | Enable the endpoints collector.                                                       | `true`                                     |
> | `collectors.horizontalpodautoscalers`        | Enable the horizontalpodautoscalers collector.                                        | `true`                                     |
> | `collectors.ingresses`                       | Enable the ingresses collector.                                                       | `true`                                     |
> | `collectors.jobs`                            | Enable the jobs collector.                                                            | `true`                                     |
> | `collectors.limitranges`                     | Enable the limitranges collector.                                                     | `true`                                     |
> | `collectors.mutatingwebhookconfigurations`   | Enable the mutatingwebhookconfigurations collector.                                   | `false`                                    | 
> | `collectors.namespaces`                      | Enable the namespaces collector.                                                      | `true`                                     |
> | `collectors.nodes`                           | Enable the nodes collector.                                                           | `true`                                     |
> | `collectors.persistentvolumeclaims`          | Enable the persistentvolumeclaims collector.                                          | `true`                                     |
> | `collectors.persistentvolumes`               | Enable the persistentvolumes collector.                                               | `true`                                     |
> | `collectors.poddisruptionbudgets`            | Enable the poddisruptionbudgets collector.                                            | `true`                                     |
> | `collectors.pods`                            | Enable the pods collector.                                                            | `true`                                     |
> | `collectors.replicasets`                     | Enable the replicasets collector.                                                     | `true`                                     |
> | `collectors.replicationcontrollers`          | Enable the replicationcontrollers collector.                                          | `true`                                     |
> | `collectors.resourcequotas`                  | Enable the resourcequotas collector.                                                  | `true`                                     |
> | `collectors.secrets`                         | Enable the secrets collector.                                                         | `true`                                     |
> | `collectors.services`                        | Enable the services collector.                                                        | `true`                                     |
> | `collectors.statefulsets`                    | Enable the statefulsets collector.                                                    | `true`                                     |
> | `collectors.storageclasses`                  | Enable the storageclasses collector.                                                  | `true`                                     |
> | `collectors.validatingwebhookconfigurations` | Enable the validatingwebhookconfigurations collector.                                 | `false`                                    |
> | `collectors.verticalpodautoscalers`          | Enable the verticalpodautoscalers collector.                                          | `false`                                    |
> | `collectors.volumeattachements`              | Enable the volumeattachments collector.                                               | `false`                                    |
> | `prometheus.monitor.enabled`                 | Set this to `true` to create ServiceMonitor for Prometheus operator                   | `false`                                    |
> | `prometheus.monitor.additionalLabels`        | Additional labels that can be used so ServiceMonitor will be discovered by Prometheus | `{}`                                       |
> | `prometheus.monitor.namespace`               | Namespace where servicemonitor resource should be created                             | `the same namespace as kube-state-metrics` |
> | `prometheus.monitor.honorLabels`             | Honor metric labels                                                                   | `false`                                    |
> | `namespaceOverride`                          | Override the deployment namespace                                                     | `""` (`Release.Namespace`)                 |
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/NOTES.txt packages/monitoring/charts/charts/kube-state-metrics/templates/NOTES.txt
0a1,10
> kube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.
> The exposed metrics can be found here:
> https://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics
> 
> The metrics are exported on the HTTP endpoint /metrics on the listening port.
> In your case, {{ template "kube-state-metrics.fullname" . }}.{{ template "kube-state-metrics.namespace" . }}.svc.cluster.local:{{ .Values.service.port }}/metrics
> 
> They are served either as plaintext or protobuf depending on the Accept header.
> They are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.
> 
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/_helpers.tpl packages/monitoring/charts/charts/kube-state-metrics/templates/_helpers.tpl
0a1,47
> {{/* vim: set filetype=mustache: */}}
> {{/*
> Expand the name of the chart.
> */}}
> {{- define "kube-state-metrics.name" -}}
> {{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
> {{- end -}}
> 
> {{/*
> Create a default fully qualified app name.
> We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
> If release name contains chart name it will be used as a full name.
> */}}
> {{- define "kube-state-metrics.fullname" -}}
> {{- if .Values.fullnameOverride -}}
> {{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
> {{- else -}}
> {{- $name := default .Chart.Name .Values.nameOverride -}}
> {{- if contains $name .Release.Name -}}
> {{- .Release.Name | trunc 63 | trimSuffix "-" -}}
> {{- else -}}
> {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
> {{- end -}}
> {{- end -}}
> {{- end -}}
> 
> {{/*
> Create the name of the service account to use
> */}}
> {{- define "kube-state-metrics.serviceAccountName" -}}
> {{- if .Values.serviceAccount.create -}}
>     {{ default (include "kube-state-metrics.fullname" .) .Values.serviceAccount.name }}
> {{- else -}}
>     {{ default "default" .Values.serviceAccount.name }}
> {{- end -}}
> {{- end -}}
> 
> {{/*
> Allow the release namespace to be overridden for multi-namespace deployments in combined charts
> */}}
> {{- define "kube-state-metrics.namespace" -}}
>   {{- if .Values.namespaceOverride -}}
>     {{- .Values.namespaceOverride -}}
>   {{- else -}}
>     {{- .Release.Namespace -}}
>   {{- end -}}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/clusterrole.yaml packages/monitoring/charts/charts/kube-state-metrics/templates/clusterrole.yaml
0a1,180
> {{- if .Values.rbac.create -}}
> apiVersion: rbac.authorization.k8s.io/v1beta1
> kind: ClusterRole
> metadata:
>   labels:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
>     app.kubernetes.io/managed-by: {{ .Release.Service }}
>     app.kubernetes.io/instance: {{ .Release.Name }}
>   name: {{ template "kube-state-metrics.fullname" . }}
> rules:
> {{ if .Values.collectors.certificatesigningrequests }}
> - apiGroups: ["certificates.k8s.io"]
>   resources:
>   - certificatesigningrequests
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.configmaps }}
> - apiGroups: [""]
>   resources:
>   - configmaps
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.cronjobs }}
> - apiGroups: ["batch"]
>   resources:
>   - cronjobs
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.daemonsets }}
> - apiGroups: ["extensions", "apps"]
>   resources:
>   - daemonsets
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.deployments }}
> - apiGroups: ["extensions", "apps"]
>   resources:
>   - deployments
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.endpoints }}
> - apiGroups: [""]
>   resources:
>   - endpoints
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.horizontalpodautoscalers }}
> - apiGroups: ["autoscaling"]
>   resources:
>   - horizontalpodautoscalers
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.ingresses }}
> - apiGroups: ["extensions", "networking.k8s.io"]
>   resources:
>   - ingresses
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.jobs }}
> - apiGroups: ["batch"]
>   resources:
>   - jobs
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.limitranges }}
> - apiGroups: [""]
>   resources:
>   - limitranges
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.mutatingwebhookconfigurations }}
> - apiGroups: ["admissionregistration.k8s.io"]
>   resources:
>     - mutatingwebhookconfigurations
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.namespaces }}
> - apiGroups: [""]
>   resources:
>   - namespaces
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.networkpolicies }}
> - apiGroups: ["networking.k8s.io"]
>   resources:
>   - networkpolicies
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.nodes }}
> - apiGroups: [""]
>   resources:
>   - nodes
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.persistentvolumeclaims }}
> - apiGroups: [""]
>   resources:
>   - persistentvolumeclaims
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.persistentvolumes }}
> - apiGroups: [""]
>   resources:
>   - persistentvolumes
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.poddisruptionbudgets }}
> - apiGroups: ["policy"]
>   resources:
>     - poddisruptionbudgets
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.pods }}
> - apiGroups: [""]
>   resources:
>   - pods
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.replicasets }}
> - apiGroups: ["extensions", "apps"]
>   resources:
>   - replicasets
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.replicationcontrollers }}
> - apiGroups: [""]
>   resources:
>   - replicationcontrollers
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.resourcequotas }}
> - apiGroups: [""]
>   resources:
>   - resourcequotas
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.secrets }}
> - apiGroups: [""]
>   resources:
>   - secrets
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.services }}
> - apiGroups: [""]
>   resources:
>   - services
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.statefulsets }}
> - apiGroups: ["apps"]
>   resources:
>   - statefulsets
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.storageclasses }}
> - apiGroups: ["storage.k8s.io"]
>   resources:
>     - storageclasses
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.validatingwebhookconfigurations }}
> - apiGroups: ["admissionregistration.k8s.io"]
>   resources:
>     - validatingwebhookconfigurations
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.volumeattachements }}
> - apiGroups: ["storageclasses.k8s.io"]
>   resources:
>     - storageclasses
>   verbs: ["list", "watch"]
> {{ end -}}
> {{ if .Values.collectors.verticalpodautoscalers }}
> - apiGroups: ["autoscaling.k8s.io"]
>   resources:
>     - verticalpodautoscalers
>   verbs: ["list", "watch"]
> {{ end -}}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/clusterrolebinding.yaml packages/monitoring/charts/charts/kube-state-metrics/templates/clusterrolebinding.yaml
0a1,19
> {{- if .Values.rbac.create -}}
> apiVersion: rbac.authorization.k8s.io/v1beta1
> kind: ClusterRoleBinding
> metadata:
>   labels:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
>     app.kubernetes.io/managed-by: {{ .Release.Service }}
>     app.kubernetes.io/instance: {{ .Release.Name }}
>   name: {{ template "kube-state-metrics.fullname" . }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: {{ template "kube-state-metrics.fullname" . }}
> subjects:
> - kind: ServiceAccount
>   name: {{ template "kube-state-metrics.fullname" . }}
>   namespace: {{ template "kube-state-metrics.namespace" . }}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/deployment.yaml packages/monitoring/charts/charts/kube-state-metrics/templates/deployment.yaml
0a1,163
> apiVersion: apps/v1
> kind: Deployment
> metadata:
>   name: {{ template "kube-state-metrics.fullname" . }}
>   namespace: {{ template "kube-state-metrics.namespace" . }}
>   labels:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
>     app.kubernetes.io/instance: "{{ .Release.Name }}"
>     app.kubernetes.io/managed-by: "{{ .Release.Service }}"
> {{- if .Values.customLabels }}
> {{ toYaml .Values.customLabels | indent 4 }}
> {{- end }}
> spec:
>   selector:
>     matchLabels:
>       app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>   replicas: {{ .Values.replicas }}
>   template:
>     metadata:
>       labels:
>         app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>         app.kubernetes.io/instance: "{{ .Release.Name }}"
> {{- if .Values.customLabels }}
> {{ toYaml .Values.customLabels | indent 8 }}
> {{- end }}
> {{- if .Values.podAnnotations }}
>       annotations:
> {{ toYaml .Values.podAnnotations | indent 8 }}
> {{- end }}
>     spec:
>       hostNetwork: {{ .Values.hostNetwork }}
>       serviceAccountName: {{ template "kube-state-metrics.serviceAccountName" . }}
>       {{- if .Values.securityContext.enabled }}
>       securityContext:
>         fsGroup: {{ .Values.securityContext.fsGroup }}
>         runAsUser: {{ .Values.securityContext.runAsUser }}
>       {{- end }}
>     {{- if .Values.priorityClassName }}
>       priorityClassName: {{ .Values.priorityClassName }}
>     {{- end }}
>       containers:
>       - name: {{ .Chart.Name }}
>         args:
> {{  if .Values.collectors.certificatesigningrequests  }}
>         - --collectors=certificatesigningrequests
> {{  end  }}
> {{  if .Values.collectors.configmaps  }}
>         - --collectors=configmaps
> {{  end  }}
> {{  if .Values.collectors.cronjobs  }}
>         - --collectors=cronjobs
> {{  end  }}
> {{ if .Values.collectors.daemonsets  }}
>         - --collectors=daemonsets
> {{  end  }}
> {{  if .Values.collectors.deployments  }}
>         - --collectors=deployments
> {{  end  }}
> {{  if .Values.collectors.endpoints  }}
>         - --collectors=endpoints
> {{  end  }}
> {{  if .Values.collectors.horizontalpodautoscalers  }}
>         - --collectors=horizontalpodautoscalers
> {{  end  }}
> {{  if .Values.collectors.ingresses  }}
>         - --collectors=ingresses
> {{  end  }}
> {{  if .Values.collectors.jobs  }}
>         - --collectors=jobs
> {{  end  }}
> {{  if .Values.collectors.limitranges  }}
>         - --collectors=limitranges
> {{  end  }}
> {{  if .Values.collectors.mutatingwebhookconfigurations  }}
>         - --collectors=mutatingwebhookconfigurations
> {{  end  }}
> {{  if .Values.collectors.namespaces  }}
>         - --collectors=namespaces
> {{  end  }}
> {{  if .Values.collectors.networkpolicies  }}
>         - --collectors=networkpolicies
> {{  end  }}
> {{  if .Values.collectors.nodes  }}
>         - --collectors=nodes
> {{  end  }}
> {{  if .Values.collectors.persistentvolumeclaims  }}
>         - --collectors=persistentvolumeclaims
> {{  end  }}
> {{  if .Values.collectors.persistentvolumes  }}
>         - --collectors=persistentvolumes
> {{  end  }}
> {{  if .Values.collectors.poddisruptionbudgets  }}
>         - --collectors=poddisruptionbudgets
> {{  end  }}
> {{  if .Values.collectors.pods  }}
>         - --collectors=pods
> {{  end  }}
> {{  if .Values.collectors.replicasets  }}
>         - --collectors=replicasets
> {{  end  }}
> {{  if .Values.collectors.replicationcontrollers  }}
>         - --collectors=replicationcontrollers
> {{  end  }}
> {{  if .Values.collectors.resourcequotas  }}
>         - --collectors=resourcequotas
> {{  end  }}
> {{  if .Values.collectors.secrets  }}
>         - --collectors=secrets
> {{  end  }}
> {{  if .Values.collectors.services  }}
>         - --collectors=services
> {{  end  }}
> {{  if .Values.collectors.statefulsets  }}
>         - --collectors=statefulsets
> {{  end  }}
> {{  if .Values.collectors.storageclasses  }}
>         - --collectors=storageclasses
> {{  end  }}
> {{  if .Values.collectors.validatingwebhookconfigurations  }}
>         - --collectors=validatingwebhookconfigurations
> {{  end  }}
> {{  if .Values.collectors.verticalpodautoscalers  }}
>         - --collectors=verticalpodautoscalers
> {{  end  }}
> {{  if .Values.collectors.volumeattachements  }}
>         - --collectors=volumeattachements
> {{  end  }}
> {{ if .Values.namespace }}
>         - --namespace={{ .Values.namespace }}
> {{ end }}
>         imagePullPolicy: {{ .Values.image.pullPolicy }}
>         image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
>         ports:
>         - containerPort: 8080
>         livenessProbe:
>           httpGet:
>             path: /healthz
>             port: 8080
>           initialDelaySeconds: 5
>           timeoutSeconds: 5
>         readinessProbe:
>           httpGet:
>             path: /
>             port: 8080
>           initialDelaySeconds: 5
>           timeoutSeconds: 5
> {{- if .Values.resources }}
>         resources:
> {{ toYaml .Values.resources | indent 10 }}
> {{- end }}
> {{- if .Values.affinity }}
>       affinity:
> {{ toYaml .Values.affinity | indent 8 }}
> {{- end }}
> {{- if .Values.nodeSelector }}
>       nodeSelector:
> {{ toYaml .Values.nodeSelector | indent 8 }}
> {{- end }}
> {{- if .Values.tolerations }}
>       tolerations:
> {{ toYaml .Values.tolerations | indent 8 }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/podsecuritypolicy.yaml packages/monitoring/charts/charts/kube-state-metrics/templates/podsecuritypolicy.yaml
0a1,39
> {{- if .Values.podSecurityPolicy.enabled }}
> apiVersion: policy/v1beta1
> kind: PodSecurityPolicy
> metadata:
>   name: {{ template "kube-state-metrics.fullname" . }}
>   labels:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
>     app.kubernetes.io/managed-by: {{ .Release.Service }}
>     app.kubernetes.io/instance: {{ .Release.Name }}
> {{- if .Values.podSecurityPolicy.annotations }}
>   annotations:
> {{ toYaml .Values.podSecurityPolicy.annotations | indent 4 }}
> {{- end }}
> spec:
>   privileged: false
>   volumes:
>     - 'secret'
>   hostNetwork: false
>   hostIPC: false
>   hostPID: false
>   runAsUser:
>     rule: 'MustRunAsNonRoot'
>   seLinux:
>     rule: 'RunAsAny'
>   supplementalGroups:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 1
>         max: 65535
>   fsGroup:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 1
>         max: 65535
>   readOnlyRootFilesystem: false
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/psp-clusterrole.yaml packages/monitoring/charts/charts/kube-state-metrics/templates/psp-clusterrole.yaml
0a1,17
> {{- if and .Values.podSecurityPolicy.enabled -}}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   labels:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
>     app.kubernetes.io/managed-by: {{ .Release.Service }}
>     app.kubernetes.io/instance: {{ .Release.Name }}
>   name: psp-{{ template "kube-state-metrics.fullname" . }}
> rules:
> - apiGroups: ['extensions']
>   resources: ['podsecuritypolicies']
>   verbs:     ['use']
>   resourceNames:
>   - {{ template "kube-state-metrics.fullname" . }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/psp-clusterrolebinding.yaml packages/monitoring/charts/charts/kube-state-metrics/templates/psp-clusterrolebinding.yaml
0a1,19
> {{- if and .Values.podSecurityPolicy.enabled -}}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   labels:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
>     app.kubernetes.io/managed-by: {{ .Release.Service }}
>     app.kubernetes.io/instance: {{ .Release.Name }}
>   name: psp-{{ template "kube-state-metrics.fullname" . }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: psp-{{ template "kube-state-metrics.fullname" . }}
> subjects:
>   - kind: ServiceAccount
>     name: {{ template "kube-state-metrics.fullname" . }}
>     namespace: {{ template "kube-state-metrics.namespace" . }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/service.yaml packages/monitoring/charts/charts/kube-state-metrics/templates/service.yaml
0a1,36
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "kube-state-metrics.fullname" . }}
>   namespace: {{ template "kube-state-metrics.namespace" . }}
>   labels:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
>     app.kubernetes.io/instance: "{{ .Release.Name }}"
>     app.kubernetes.io/managed-by: "{{ .Release.Service }}"
> {{- if .Values.customLabels }}
> {{ toYaml .Values.customLabels | indent 4 }}
> {{- end }}
>   annotations:
>     {{- if .Values.prometheusScrape }}
>     prometheus.io/scrape: '{{ .Values.prometheusScrape }}'
>     {{- end }}
>     {{- if .Values.service.annotations }}
>     {{- toYaml .Values.service.annotations | nindent 4 }}
>     {{- end }}
> spec:
>   type: "{{ .Values.service.type }}"
>   ports:
>   - name: "http"
>     protocol: TCP
>     port: {{ .Values.service.port }}
>   {{- if .Values.service.nodePort }}
>     nodePort: {{ .Values.service.nodePort }}
>   {{- end }}
>     targetPort: 8080
> {{- if .Values.service.loadBalancerIP }}
>   loadBalancerIP: "{{ .Values.service.loadBalancerIP }}"
> {{- end }}
>   selector:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     app.kubernetes.io/instance: {{ .Release.Name }}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/serviceaccount.yaml packages/monitoring/charts/charts/kube-state-metrics/templates/serviceaccount.yaml
0a1,14
> {{- if .Values.serviceAccount.create -}}
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   labels:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
>     app.kubernetes.io/managed-by: {{ .Release.Service }}
>     app.kubernetes.io/instance: {{ .Release.Name }}
>   name: {{ template "kube-state-metrics.fullname" . }}
>   namespace: {{ template "kube-state-metrics.namespace" . }}
> imagePullSecrets:
> {{ toYaml .Values.serviceAccount.imagePullSecrets | indent 2 }}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/templates/servicemonitor.yaml packages/monitoring/charts/charts/kube-state-metrics/templates/servicemonitor.yaml
0a1,25
> {{- if .Values.prometheus.monitor.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "kube-state-metrics.fullname" . }}
>   namespace: {{ template "kube-state-metrics.namespace" . }}
>   labels:
>     app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>     helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
>     app.kubernetes.io/instance: "{{ .Release.Name }}"
>     app.kubernetes.io/managed-by: "{{ .Release.Service }}"
>     {{- if .Values.prometheus.monitor.additionalLabels }}
> {{ toYaml .Values.prometheus.monitor.additionalLabels | indent 4 }}
>     {{- end }}
> spec:
>   selector:
>     matchLabels:
>       app.kubernetes.io/name: {{ template "kube-state-metrics.name" . }}
>       app.kubernetes.io/instance: {{ .Release.Name }}
>   endpoints:
>     - port: http
>       {{- if .Values.prometheus.monitor.honorLabels }}
>       honorLabels: true
>       {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/kube-state-metrics/values.yaml packages/monitoring/charts/charts/kube-state-metrics/values.yaml
0a1,119
> # Default values for kube-state-metrics.
> prometheusScrape: true
> image:
>   repository: quay.io/coreos/kube-state-metrics
>   tag: v1.9.4
>   pullPolicy: IfNotPresent
> 
> replicas: 1
> 
> service:
>   port: 8080
>   # Default to clusterIP for backward compatibility
>   type: ClusterIP
>   nodePort: 0
>   loadBalancerIP: ""
>   annotations: {}
> 
> customLabels: {}
> 
> hostNetwork: false
> 
> rbac:
>   # If true, create & use RBAC resources
>   create: true
> 
> serviceAccount:
>   # Specifies whether a ServiceAccount should be created, require rbac true
>   create: true
>   # The name of the ServiceAccount to use.
>   # If not set and create is true, a name is generated using the fullname template
>   name:
>   # Reference to one or more secrets to be used when pulling images
>   # ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
>   imagePullSecrets: []
> 
> prometheus:
>   monitor:
>     enabled: false
>     additionalLabels: {}
>     namespace: ""
>     honorLabels: false
> 
> ## Specify if a Pod Security Policy for kube-state-metrics must be created
> ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
> ##
> podSecurityPolicy:
>   enabled: false
>   annotations: {}
>     ## Specify pod annotations
>     ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
>     ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
>     ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl
>     ##
>     # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
>     # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
>     # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
> 
> 
> securityContext:
>   enabled: true
>   runAsUser: 65534
>   fsGroup: 65534
> 
> ## Node labels for pod assignment
> ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
> nodeSelector: {}
> 
> ## Affinity settings for pod assignment
> ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
> affinity: {}
> 
> ## Tolerations for pod assignment
> ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
> tolerations: []
> 
> # Annotations to be added to the pod
> podAnnotations: {}
> 
> ## Assign a PriorityClassName to pods if set
> # priorityClassName: ""
> 
> # Available collectors for kube-state-metrics. By default all available
> # collectors are enabled.
> collectors:
>   certificatesigningrequests: true
>   configmaps: true
>   cronjobs: true
>   daemonsets: true
>   deployments: true
>   endpoints: true
>   horizontalpodautoscalers: true
>   ingresses: true
>   jobs: true
>   limitranges: true
>   mutatingwebhookconfigurations: false
>   namespaces: true
>   networkpolicies: false
>   nodes: true
>   persistentvolumeclaims: true
>   persistentvolumes: true
>   poddisruptionbudgets: true
>   pods: true
>   replicasets: true
>   replicationcontrollers: true
>   resourcequotas: true
>   secrets: true
>   services: true
>   statefulsets: true
>   storageclasses: true
>   validatingwebhookconfigurations: false
>   verticalpodautoscalers: false
>   volumeattachements: false
> 
> # Namespace to be enabled for collecting resources. By default all namespaces are collected.
> # namespace: ""
> 
> ## Override the deployment namespace
> ##
> namespaceOverride: ""
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/.helmignore packages/monitoring/charts/charts/prometheus-node-exporter/.helmignore
0a1,21
> # Patterns to ignore when building packages.
> # This supports shell glob matching, relative path matching, and
> # negation (prefixed with !). Only one pattern per line.
> .DS_Store
> # Common VCS dirs
> .git/
> .gitignore
> .bzr/
> .bzrignore
> .hg/
> .hgignore
> .svn/
> # Common backup files
> *.swp
> *.bak
> *.tmp
> *~
> # Various IDEs
> .project
> .idea/
> *.tmproj
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/Chart.yaml packages/monitoring/charts/charts/prometheus-node-exporter/Chart.yaml
0a1,16
> apiVersion: v1
> appVersion: 0.18.1
> description: A Helm chart for prometheus node-exporter
> home: https://github.com/prometheus/node_exporter/
> keywords:
> - node-exporter
> - prometheus
> - exporter
> maintainers:
> - email: gianrubio@gmail.com
>   name: gianrubio
> - name: vsliouniaev
> name: prometheus-node-exporter
> sources:
> - https://github.com/prometheus/node_exporter/
> version: 1.8.2
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/OWNERS packages/monitoring/charts/charts/prometheus-node-exporter/OWNERS
0a1,6
> approvers:
> - gianrubio
> - vsliouniaev
> reviewers:
> - gianrubio
> - vsliouniaev
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/README.md packages/monitoring/charts/charts/prometheus-node-exporter/README.md
0a1,86
> # Prometheus Node Exporter
> 
> * Installs prometheus [node exporter](https://github.com/prometheus/node_exporter)
> 
> ## TL;DR;
> 
> ```console
> $ helm install stable/prometheus-node-exporter
> ```
> 
> ## Introduction
> 
> This chart bootstraps a prometheus [node exporter](http://github.com/prometheus/node_exporter) deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager.
> 
> ## Installing the Chart
> 
> To install the chart with the release name `my-release`:
> 
> ```console
> $ helm install --name my-release stable/prometheus-node-exporter
> ```
> 
> The command deploys node exporter on the Kubernetes cluster in the default configuration. The [configuration](#configuration) section lists the parameters that can be configured during installation.
> 
> ## Uninstalling the Chart
> 
> To uninstall/delete the `my-release` deployment:
> 
> ```console
> $ helm delete my-release
> ```
> 
> The command removes all the Kubernetes components associated with the chart and deletes the release.
> 
> ## Configuration
> 
> The following table lists the configurable parameters of the Node Exporter chart and their default values.
> 
> |             Parameter                 |                                                          Description                                                          |                 Default                          |
> | ------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------ |
> | `image.repository`                    | Image repository                                                                                                              | `quay.io/prometheus/node-exporter`               |
> | `image.tag`                           | Image tag                                                                                                                     | `v0.18.1`                                        |
> | `image.pullPolicy`                    | Image pull policy                                                                                                             | `IfNotPresent`                                   |
> | `extraArgs`                           | Additional container arguments                                                                                                | `[]`                                             |
> | `extraHostVolumeMounts`               | Additional host volume mounts                                                                                                 | `[]`                                             |
> | `podAnnotations`                      | Annotations to be added to node exporter pods                                                                                 | `{}`                                             |
> | `podLabels`                           | Additional labels to be added to pods                                                                                         | `{}`                                             |
> | `rbac.create`                         | If true, create & use RBAC resources                                                                                          | `true`                                           |
> | `rbac.pspEnabled`                     | Specifies whether a PodSecurityPolicy should be created.                                                                      | `true`                                           |
> | `resources`                           | CPU/Memory resource requests/limits                                                                                           | `{}`                                             |
> | `service.type`                        | Service type                                                                                                                  | `ClusterIP`                                      |
> | `service.port`                        | The service port                                                                                                              | `9100`                                           |
> | `service.targetPort`                  | The target port of the container                                                                                              | `9100`                                           |
> | `service.nodePort`                    | The node port of the service                                                                                                  |                                                  |
> | `service.annotations`                 | Kubernetes service annotations                                                                                                | `{prometheus.io/scrape: "true"}`                 |
> | `serviceAccount.create`               | Specifies whether a service account should be created.                                                                        | `true`                                           |
> | `serviceAccount.name`                 | Service account to be used. If not set and `serviceAccount.create` is `true`, a name is generated using the fullname template |                                                  |
> | `serviceAccount.imagePullSecrets`     | Specify image pull secrets                                                                                                    | `[]`                                             |
> | `securityContext`                     | SecurityContext                                                                                                               | `{"runAsNonRoot": true, "runAsUser": 65534}`     |
> | `affinity`                            | A group of affinity scheduling rules for pod assignment                                                                       | `{}`                                             |
> | `nodeSelector`                        | Node labels for pod assignment                                                                                                | `{}`                                             |
> | `tolerations`                         | List of node taints to tolerate                                                                                               | `- effect: NoSchedule operator: Exists`          |
> | `priorityClassName`                   | Name of Priority Class to assign pods                                                                                         | `nil`                                            |
> | `endpoints`                           | list of addresses that have node exporter deployed outside of the cluster                                                     | `[]`                                             |
> | `hostNetwork`                         | Whether to expose the service to the host network                                                                             | `true`                                           |
> | `prometheus.monitor.enabled`          | Set this to `true` to create ServiceMonitor for Prometheus operator                                                           | `false`                                          |
> | `prometheus.monitor.additionalLabels` | Additional labels that can be used so ServiceMonitor will be discovered by Prometheus                                         | `{}`                                             |
> | `prometheus.monitor.namespace`        | namespace where servicemonitor resource should be created                                                                     | `the same namespace as prometheus node exporter` |
> | `prometheus.monitor.scrapeTimeout`    | Timeout after which the scrape is ended                                                                                       | `10s`                                            |
> | `configmaps`                          | Allow mounting additional configmaps.                                                                                         | `[]`                                             |
> | `namespaceOverride`                   | Override the deployment namespace                                                                                             | `""` (`Release.Namespace`)                       |
> | `updateStrategy`                      | Configure a custom update strategy for the daemonset                                                                          | `Rolling update with 1 max unavailable`          |
> 
> Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,
> 
> ```console
> $ helm install --name my-release \
>   --set serviceAccount.name=node-exporter  \
>     stable/prometheus-node-exporter
> ```
> 
> Alternatively, a YAML file that specifies the values for the above parameters can be provided while installing the chart. For example,
> 
> ```console
> $ helm install --name my-release -f values.yaml stable/prometheus-node-exporter
> ```
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/NOTES.txt packages/monitoring/charts/charts/prometheus-node-exporter/templates/NOTES.txt
0a1,15
> 1. Get the application URL by running these commands:
> {{- if contains "NodePort" .Values.service.type }}
>   export NODE_PORT=$(kubectl get --namespace {{ template "prometheus-node-exporter.namespace" . }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "prometheus-node-exporter.fullname" . }})
>   export NODE_IP=$(kubectl get nodes --namespace {{ template "prometheus-node-exporter.namespace" . }} -o jsonpath="{.items[0].status.addresses[0].address}")
>   echo http://$NODE_IP:$NODE_PORT
> {{- else if contains "LoadBalancer" .Values.service.type }}
>      NOTE: It may take a few minutes for the LoadBalancer IP to be available.
>            You can watch the status of by running 'kubectl get svc -w {{ template "prometheus-node-exporter.fullname" . }}'
>   export SERVICE_IP=$(kubectl get svc --namespace {{ template "prometheus-node-exporter.namespace" . }} {{ template "prometheus-node-exporter.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
>   echo http://$SERVICE_IP:{{ .Values.service.port }}
> {{- else if contains "ClusterIP" .Values.service.type }}
>   export POD_NAME=$(kubectl get pods --namespace {{ template "prometheus-node-exporter.namespace" . }} -l "app={{ template "prometheus-node-exporter.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
>   echo "Visit http://127.0.0.1:9100 to use your application"
>   kubectl port-forward --namespace {{ template "prometheus-node-exporter.namespace" . }} $POD_NAME 9100
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/_helpers.tpl packages/monitoring/charts/charts/prometheus-node-exporter/templates/_helpers.tpl
0a1,66
> {{/* vim: set filetype=mustache: */}}
> {{/*
> Expand the name of the chart.
> */}}
> {{- define "prometheus-node-exporter.name" -}}
> {{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
> {{- end -}}
> 
> {{/*
> Create a default fully qualified app name.
> We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
> If release name contains chart name it will be used as a full name.
> */}}
> {{- define "prometheus-node-exporter.fullname" -}}
> {{- if .Values.fullnameOverride -}}
> {{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
> {{- else -}}
> {{- $name := default .Chart.Name .Values.nameOverride -}}
> {{- if contains $name .Release.Name -}}
> {{- .Release.Name | trunc 63 | trimSuffix "-" -}}
> {{- else -}}
> {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
> {{- end -}}
> {{- end -}}
> {{- end -}}
> 
> {{/* Generate basic labels */}}
> {{- define "prometheus-node-exporter.labels" }}
> app: {{ template "prometheus-node-exporter.name" . }}
> heritage: {{.Release.Service }}
> release: {{.Release.Name }}
> chart: {{ template "prometheus-node-exporter.chart" . }}
> {{- if .Values.podLabels}}
> {{ toYaml .Values.podLabels }}
> {{- end }}
> {{- end }}
> 
> {{/*
> Create chart name and version as used by the chart label.
> */}}
> {{- define "prometheus-node-exporter.chart" -}}
> {{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" -}}
> {{- end -}}
> 
> 
> {{/*
> Create the name of the service account to use
> */}}
> {{- define "prometheus-node-exporter.serviceAccountName" -}}
> {{- if .Values.serviceAccount.create -}}
>     {{ default (include "prometheus-node-exporter.fullname" .) .Values.serviceAccount.name }}
> {{- else -}}
>     {{ default "default" .Values.serviceAccount.name }}
> {{- end -}}
> {{- end -}}
> 
> {{/*
> Allow the release namespace to be overridden for multi-namespace deployments in combined charts
> */}}
> {{- define "prometheus-node-exporter.namespace" -}}
>   {{- if .Values.namespaceOverride -}}
>     {{- .Values.namespaceOverride -}}
>   {{- else -}}
>     {{- .Release.Namespace -}}
>   {{- end -}}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/daemonset.yaml packages/monitoring/charts/charts/prometheus-node-exporter/templates/daemonset.yaml
0a1,116
> apiVersion: apps/v1
> kind: DaemonSet
> metadata:
>   name: {{ template "prometheus-node-exporter.fullname" . }}
>   namespace: {{ template "prometheus-node-exporter.namespace" . }}
>   labels: {{ include "prometheus-node-exporter.labels" . | indent 4 }}
> spec:
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-node-exporter.name" . }}
>       release: {{ .Release.Name }}
>   {{- if .Values.updateStrategy }}
>   updateStrategy:
> {{ toYaml .Values.updateStrategy | indent 4 }}
>   {{- end }}
>   template:
>     metadata:
>       labels: {{ include "prometheus-node-exporter.labels" . | indent 8 }}
>       {{- if .Values.podAnnotations }}
>       annotations:
>       {{- toYaml .Values.podAnnotations | nindent 8 }}
>       {{- end }}
>     spec:
> {{- if and .Values.rbac.create .Values.serviceAccount.create }}
>       serviceAccountName: {{ template "prometheus-node-exporter.serviceAccountName" . }}
> {{- end }}
> {{- if .Values.securityContext }}
>       securityContext:
> {{ toYaml .Values.securityContext | indent 8 }}
> {{- end }}
> {{- if .Values.priorityClassName }}
>       priorityClassName: {{ .Values.priorityClassName }}
> {{- end }}
>       containers:
>         - name: node-exporter
>           image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
>           imagePullPolicy: {{ .Values.image.pullPolicy }}
>           args:
>             - --path.procfs=/host/proc
>             - --path.sysfs=/host/sys
>             - --web.listen-address=0.0.0.0:{{ .Values.service.port }}
> {{- if .Values.extraArgs }}
> {{ toYaml .Values.extraArgs | indent 12 }}
> {{- end }}
>           ports:
>             - name: metrics
>               containerPort: {{ .Values.service.targetPort }}
>               protocol: TCP
>           livenessProbe:
>             httpGet:
>               path: /
>               port: {{ .Values.service.port }}
>           readinessProbe:
>             httpGet:
>               path: /
>               port: {{ .Values.service.port }}
>           resources:
> {{ toYaml .Values.resources | indent 12 }}
>           volumeMounts:
>             - name: proc
>               mountPath: /host/proc
>               readOnly:  true
>             - name: sys
>               mountPath: /host/sys
>               readOnly: true
>             {{- if .Values.extraHostVolumeMounts }}
>             {{- range $_, $mount := .Values.extraHostVolumeMounts }}
>             - name: {{ $mount.name }}
>               mountPath: {{ $mount.mountPath }}
>               readOnly: {{ $mount.readOnly }}
>             {{- if $mount.mountPropagation }}
>               mountPropagation: {{ $mount.mountPropagation }}
>             {{- end }}
>             {{- end }}
>             {{- end }}
>             {{- if .Values.configmaps }}
>             {{- range $_, $mount := .Values.configmaps }}
>             - name: {{ $mount.name }}
>               mountPath: {{ $mount.mountPath }}
>             {{- end }}
>             {{- end }}
>       hostNetwork: {{ .Values.hostNetwork }}
>       hostPID: true
> {{- if .Values.affinity }}
>       affinity:
> {{ toYaml .Values.affinity | indent 8 }}
> {{- end }}
> {{- if .Values.nodeSelector }}
>       nodeSelector:
> {{ toYaml .Values.nodeSelector | indent 8 }}
> {{- end }}
>     {{- with .Values.tolerations }}
>       tolerations:
> {{ toYaml . | indent 8 }}
>     {{- end }}
>       volumes:
>         - name: proc
>           hostPath:
>             path: /proc
>         - name: sys
>           hostPath:
>             path: /sys
>         {{- if .Values.extraHostVolumeMounts }}
>         {{- range $_, $mount := .Values.extraHostVolumeMounts }}
>         - name: {{ $mount.name }}
>           hostPath:
>             path: {{ $mount.hostPath }}
>         {{- end }}
>         {{- end }}
>         {{- if .Values.configmaps }}
>         {{- range $_, $mount := .Values.configmaps }}
>         - name: {{ $mount.name }}
>           configMap:
>             name: {{ $mount.name }}
>         {{- end }}
>         {{- end }}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/endpoints.yaml packages/monitoring/charts/charts/prometheus-node-exporter/templates/endpoints.yaml
0a1,18
> {{- if .Values.endpoints }}
> apiVersion: v1
> kind: Endpoints
> metadata:
>   name: {{ template "prometheus-node-exporter.fullname" . }}
>   namespace: {{ template "prometheus-node-exporter.namespace" . }}
>   labels:
> {{ include "prometheus-node-exporter.labels" . | indent 4 }}
> subsets:
>   - addresses:
>       {{- range .Values.endpoints }}
>       - ip: {{ . }}
>       {{- end }}
>     ports:
>       - name: metrics
>         port: 9100
>         protocol: TCP
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/monitor.yaml packages/monitoring/charts/charts/prometheus-node-exporter/templates/monitor.yaml
0a1,21
> {{- if .Values.prometheus.monitor.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-node-exporter.fullname" . }}
>   namespace: {{ template "prometheus-node-exporter.namespace" . }}
>   labels: {{ include "prometheus-node-exporter.labels" . | indent 4 }}
>   {{- if .Values.prometheus.monitor.additionalLabels }}
> {{ toYaml .Values.prometheus.monitor.additionalLabels | indent 4 }}
>   {{- end }}
> spec:
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-node-exporter.name" . }}
>       release: {{ .Release.Name }}
>   endpoints:
>     - port: metrics
>       {{- if .Values.prometheus.monitor.scrapeTimeout }}
>       scrapeTimeout: {{ .Values.prometheus.monitor.scrapeTimeout }}
>       {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/psp-clusterrole.yaml packages/monitoring/charts/charts/prometheus-node-exporter/templates/psp-clusterrole.yaml
0a1,15
> {{- if .Values.rbac.create }}
> {{- if .Values.rbac.pspEnabled }}
> kind: ClusterRole
> apiVersion: rbac.authorization.k8s.io/v1
> metadata:
>   name: psp-{{ template "prometheus-node-exporter.fullname" . }}
>   labels: {{ include "prometheus-node-exporter.labels" . | indent 4 }}
> rules:
> - apiGroups: ['extensions']
>   resources: ['podsecuritypolicies']
>   verbs:     ['use']
>   resourceNames:
>   - {{ template "prometheus-node-exporter.fullname" . }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/psp-clusterrolebinding.yaml packages/monitoring/charts/charts/prometheus-node-exporter/templates/psp-clusterrolebinding.yaml
0a1,17
> {{- if .Values.rbac.create }}
> {{- if .Values.rbac.pspEnabled }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   name: psp-{{ template "prometheus-node-exporter.fullname" . }}
>   labels: {{ include "prometheus-node-exporter.labels" . | indent 4 }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: psp-{{ template "prometheus-node-exporter.fullname" . }}
> subjects:
>   - kind: ServiceAccount
>     name: {{ template "prometheus-node-exporter.fullname" . }}
>     namespace: {{ template "prometheus-node-exporter.namespace" . }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/psp.yaml packages/monitoring/charts/charts/prometheus-node-exporter/templates/psp.yaml
0a1,52
> {{- if .Values.rbac.create }}
> {{- if .Values.rbac.pspEnabled }}
> apiVersion: policy/v1beta1
> kind: PodSecurityPolicy
> metadata:
>   name: {{ template "prometheus-node-exporter.fullname" . }}
>   namespace: {{ template "prometheus-node-exporter.namespace" . }}
>   labels: {{ include "prometheus-node-exporter.labels" . | indent 4 }}
> spec:
>   privileged: false
>   # Required to prevent escalations to root.
>   # allowPrivilegeEscalation: false
>   # This is redundant with non-root + disallow privilege escalation,
>   # but we can provide it for defense in depth.
>   #requiredDropCapabilities:
>   #  - ALL
>   # Allow core volume types.
>   volumes:
>     - 'configMap'
>     - 'emptyDir'
>     - 'projected'
>     - 'secret'
>     - 'downwardAPI'
>     - 'persistentVolumeClaim'
>     - 'hostPath'
>   hostNetwork: true
>   hostIPC: false
>   hostPID: true
>   hostPorts:
>     - min: 0
>       max: 65535
>   runAsUser:
>     # Permits the container to run with root privileges as well.
>     rule: 'RunAsAny'
>   seLinux:
>     # This policy assumes the nodes are using AppArmor rather than SELinux.
>     rule: 'RunAsAny'
>   supplementalGroups:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   fsGroup:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   readOnlyRootFilesystem: false
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/service.yaml packages/monitoring/charts/charts/prometheus-node-exporter/templates/service.yaml
0a1,23
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-node-exporter.fullname" . }}
>   namespace: {{ template "prometheus-node-exporter.namespace" . }}
> {{- if .Values.service.annotations }}
>   annotations:
> {{ toYaml .Values.service.annotations | indent 4 }}
> {{- end }}
>   labels: {{ include "prometheus-node-exporter.labels" . | indent 4 }}
> spec:
>   type: {{ .Values.service.type }}
>   ports:
>     - port: {{ .Values.service.port }}
>     {{- if ( and (eq .Values.service.type "NodePort" ) (not (empty .Values.service.nodePort)) ) }}
>       nodePort: {{ .Values.service.nodePort }}
>     {{- end }}
>       targetPort: {{ .Values.service.targetPort }}
>       protocol: TCP
>       name: metrics
>   selector:
>     app: {{ template "prometheus-node-exporter.name" . }}
>     release: {{ .Release.Name }}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/templates/serviceaccount.yaml packages/monitoring/charts/charts/prometheus-node-exporter/templates/serviceaccount.yaml
0a1,16
> {{- if .Values.rbac.create -}}
> {{- if .Values.serviceAccount.create -}}
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   name: {{ template "prometheus-node-exporter.serviceAccountName" . }}
>   namespace: {{ template "prometheus-node-exporter.namespace" . }}
>   labels:
>     app: {{ template "prometheus-node-exporter.name" . }}
>     chart: {{ template "prometheus-node-exporter.chart" . }}
>     release: "{{ .Release.Name }}"
>     heritage: "{{ .Release.Service }}"
> imagePullSecrets:
> {{ toYaml .Values.serviceAccount.imagePullSecrets | indent 2 }}
> {{- end -}}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/charts/prometheus-node-exporter/values.yaml packages/monitoring/charts/charts/prometheus-node-exporter/values.yaml
0a1,123
> # Default values for prometheus-node-exporter.
> # This is a YAML-formatted file.
> # Declare variables to be passed into your templates.
> image:
>   repository: quay.io/prometheus/node-exporter
>   tag: v0.18.1
>   pullPolicy: IfNotPresent
> 
> service:
>   type: ClusterIP
>   port: 9100
>   targetPort: 9100
>   nodePort:
>   annotations:
>     prometheus.io/scrape: "true"
> 
> prometheus:
>   monitor:
>     enabled: false
>     additionalLabels: {}
>     namespace: ""
> 
>     scrapeTimeout: 10s
> 
> ## Customize the updateStrategy if set
> updateStrategy:
>   type: RollingUpdate
>   rollingUpdate:
>     maxUnavailable: 1
> 
> resources: {}
>   # We usually recommend not to specify default resources and to leave this as a conscious
>   # choice for the user. This also increases chances charts run on environments with little
>   # resources, such as Minikube. If you do want to specify resources, uncomment the following
>   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
>   # limits:
>   #   cpu: 200m
>   #   memory: 50Mi
>   # requests:
>   #   cpu: 100m
>   #   memory: 30Mi
> 
> serviceAccount:
>   # Specifies whether a ServiceAccount should be created
>   create: true
>   # The name of the ServiceAccount to use.
>   # If not set and create is true, a name is generated using the fullname template
>   name:
>   imagePullSecrets: []
> 
> securityContext:
>   runAsNonRoot: true
>   runAsUser: 65534
> 
> rbac:
>   ## If true, create & use RBAC resources
>   ##
>   create: true
>   ## If true, create & use Pod Security Policy resources
>   ## https://kubernetes.io/docs/concepts/policy/pod-security-policy/
>   pspEnabled: true
> 
> # for deployments that have node_exporter deployed outside of the cluster, list
> # their addresses here
> endpoints: []
> 
> # Expose the service to the host network
> hostNetwork: true
> 
> ## Assign a group of affinity scheduling rules
> ##
> affinity: {}
> #   nodeAffinity:
> #     requiredDuringSchedulingIgnoredDuringExecution:
> #       nodeSelectorTerms:
> #         - matchFields:
> #             - key: metadata.name
> #               operator: In
> #               values:
> #                 - target-host-name
> 
> # Annotations to be added to node exporter pods
> podAnnotations: {}
> 
> # Extra labels to be added to node exporter pods
> podLabels: {}
> 
> ## Assign a nodeSelector if operating a hybrid cluster
> ##
> nodeSelector: {}
> #   beta.kubernetes.io/arch: amd64
> #   beta.kubernetes.io/os: linux
> 
> tolerations:
>   - effect: NoSchedule
>     operator: Exists
> 
> ## Assign a PriorityClassName to pods if set
> # priorityClassName: ""
> 
> ## Additional container arguments
> ##
> extraArgs: []
> #   - --collector.diskstats.ignored-devices=^(ram|loop|fd|(h|s|v)d[a-z]|nvme\\d+n\\d+p)\\d+$
> 
> ## Additional mounts from the host
> ##
> extraHostVolumeMounts: []
> #  - name: <mountName>
> #    hostPath: <hostPath>
> #    mountPath: <mountPath>
> #    readOnly: true|false
> #    mountPropagation: None|HostToContainer|Bidirectional
> 
> ## Additional configmaps to be mounted.
> ##
> configmaps: []
> # - name: <configMapName>
> #   mountPath: <mountPath>
> 
> ## Override the deployment namespace
> ##
> namespaceOverride: ""
diff -Nr packages/monitoring/charts-original/crds/crd-alertmanager.yaml packages/monitoring/charts/crds/crd-alertmanager.yaml
0a1,4480
> # https://raw.githubusercontent.com/coreos/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
> apiVersion: apiextensions.k8s.io/v1beta1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.2.4
>     helm.sh/hook: crd-install
>   creationTimestamp: null
>   name: alertmanagers.monitoring.coreos.com
> spec:
>   group: monitoring.coreos.com
>   names:
>     kind: Alertmanager
>     listKind: AlertmanagerList
>     plural: alertmanagers
>     singular: alertmanager
>   preserveUnknownFields: false
>   scope: Namespaced
>   validation:
>     openAPIV3Schema:
>       description: Alertmanager describes an Alertmanager cluster.
>       properties:
>         apiVersion:
>           description: 'APIVersion defines the versioned schema of this representation
>             of an object. Servers should convert recognized schemas to the latest
>             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
>           type: string
>         kind:
>           description: 'Kind is a string value representing the REST resource this
>             object represents. Servers may infer this from the endpoint the client
>             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
>           type: string
>         metadata:
>           type: object
>         spec:
>           description: 'Specification of the desired behavior of the Alertmanager
>             cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
>           properties:
>             additionalPeers:
>               description: AdditionalPeers allows injecting a set of additional Alertmanagers
>                 to peer with to form a highly available cluster.
>               items:
>                 type: string
>               type: array
>             affinity:
>               description: If specified, the pod's scheduling constraints.
>               properties:
>                 nodeAffinity:
>                   description: Describes node affinity scheduling rules for the pod.
>                   properties:
>                     preferredDuringSchedulingIgnoredDuringExecution:
>                       description: The scheduler will prefer to schedule pods to nodes
>                         that satisfy the affinity expressions specified by this field,
>                         but it may choose a node that violates one or more of the
>                         expressions. The node that is most preferred is the one with
>                         the greatest sum of weights, i.e. for each node that meets
>                         all of the scheduling requirements (resource request, requiredDuringScheduling
>                         affinity expressions, etc.), compute a sum by iterating through
>                         the elements of this field and adding "weight" to the sum
>                         if the node matches the corresponding matchExpressions; the
>                         node(s) with the highest sum are the most preferred.
>                       items:
>                         description: An empty preferred scheduling term matches all
>                           objects with implicit weight 0 (i.e. it's a no-op). A null
>                           preferred scheduling term matches no objects (i.e. is also
>                           a no-op).
>                         properties:
>                           preference:
>                             description: A node selector term, associated with the
>                               corresponding weight.
>                             properties:
>                               matchExpressions:
>                                 description: A list of node selector requirements
>                                   by node's labels.
>                                 items:
>                                   description: A node selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: The label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: Represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists, DoesNotExist. Gt, and Lt.
>                                       type: string
>                                     values:
>                                       description: An array of string values. If the
>                                         operator is In or NotIn, the values array
>                                         must be non-empty. If the operator is Exists
>                                         or DoesNotExist, the values array must be
>                                         empty. If the operator is Gt or Lt, the values
>                                         array must have a single element, which will
>                                         be interpreted as an integer. This array is
>                                         replaced during a strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                               matchFields:
>                                 description: A list of node selector requirements
>                                   by node's fields.
>                                 items:
>                                   description: A node selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: The label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: Represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists, DoesNotExist. Gt, and Lt.
>                                       type: string
>                                     values:
>                                       description: An array of string values. If the
>                                         operator is In or NotIn, the values array
>                                         must be non-empty. If the operator is Exists
>                                         or DoesNotExist, the values array must be
>                                         empty. If the operator is Gt or Lt, the values
>                                         array must have a single element, which will
>                                         be interpreted as an integer. This array is
>                                         replaced during a strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                             type: object
>                           weight:
>                             description: Weight associated with matching the corresponding
>                               nodeSelectorTerm, in the range 1-100.
>                             format: int32
>                             type: integer
>                         required:
>                         - preference
>                         - weight
>                         type: object
>                       type: array
>                     requiredDuringSchedulingIgnoredDuringExecution:
>                       description: If the affinity requirements specified by this
>                         field are not met at scheduling time, the pod will not be
>                         scheduled onto the node. If the affinity requirements specified
>                         by this field cease to be met at some point during pod execution
>                         (e.g. due to an update), the system may or may not try to
>                         eventually evict the pod from its node.
>                       properties:
>                         nodeSelectorTerms:
>                           description: Required. A list of node selector terms. The
>                             terms are ORed.
>                           items:
>                             description: A null or empty node selector term matches
>                               no objects. The requirements of them are ANDed. The
>                               TopologySelectorTerm type implements a subset of the
>                               NodeSelectorTerm.
>                             properties:
>                               matchExpressions:
>                                 description: A list of node selector requirements
>                                   by node's labels.
>                                 items:
>                                   description: A node selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: The label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: Represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists, DoesNotExist. Gt, and Lt.
>                                       type: string
>                                     values:
>                                       description: An array of string values. If the
>                                         operator is In or NotIn, the values array
>                                         must be non-empty. If the operator is Exists
>                                         or DoesNotExist, the values array must be
>                                         empty. If the operator is Gt or Lt, the values
>                                         array must have a single element, which will
>                                         be interpreted as an integer. This array is
>                                         replaced during a strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                               matchFields:
>                                 description: A list of node selector requirements
>                                   by node's fields.
>                                 items:
>                                   description: A node selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: The label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: Represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists, DoesNotExist. Gt, and Lt.
>                                       type: string
>                                     values:
>                                       description: An array of string values. If the
>                                         operator is In or NotIn, the values array
>                                         must be non-empty. If the operator is Exists
>                                         or DoesNotExist, the values array must be
>                                         empty. If the operator is Gt or Lt, the values
>                                         array must have a single element, which will
>                                         be interpreted as an integer. This array is
>                                         replaced during a strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                             type: object
>                           type: array
>                       required:
>                       - nodeSelectorTerms
>                       type: object
>                   type: object
>                 podAffinity:
>                   description: Describes pod affinity scheduling rules (e.g. co-locate
>                     this pod in the same node, zone, etc. as some other pod(s)).
>                   properties:
>                     preferredDuringSchedulingIgnoredDuringExecution:
>                       description: The scheduler will prefer to schedule pods to nodes
>                         that satisfy the affinity expressions specified by this field,
>                         but it may choose a node that violates one or more of the
>                         expressions. The node that is most preferred is the one with
>                         the greatest sum of weights, i.e. for each node that meets
>                         all of the scheduling requirements (resource request, requiredDuringScheduling
>                         affinity expressions, etc.), compute a sum by iterating through
>                         the elements of this field and adding "weight" to the sum
>                         if the node has pods which matches the corresponding podAffinityTerm;
>                         the node(s) with the highest sum are the most preferred.
>                       items:
>                         description: The weights of all of the matched WeightedPodAffinityTerm
>                           fields are added per-node to find the most preferred node(s)
>                         properties:
>                           podAffinityTerm:
>                             description: Required. A pod affinity term, associated
>                               with the corresponding weight.
>                             properties:
>                               labelSelector:
>                                 description: A label query over a set of resources,
>                                   in this case pods.
>                                 properties:
>                                   matchExpressions:
>                                     description: matchExpressions is a list of label
>                                       selector requirements. The requirements are
>                                       ANDed.
>                                     items:
>                                       description: A label selector requirement is
>                                         a selector that contains values, a key, and
>                                         an operator that relates the key and values.
>                                       properties:
>                                         key:
>                                           description: key is the label key that the
>                                             selector applies to.
>                                           type: string
>                                         operator:
>                                           description: operator represents a key's
>                                             relationship to a set of values. Valid
>                                             operators are In, NotIn, Exists and DoesNotExist.
>                                           type: string
>                                         values:
>                                           description: values is an array of string
>                                             values. If the operator is In or NotIn,
>                                             the values array must be non-empty. If
>                                             the operator is Exists or DoesNotExist,
>                                             the values array must be empty. This array
>                                             is replaced during a strategic merge patch.
>                                           items:
>                                             type: string
>                                           type: array
>                                       required:
>                                       - key
>                                       - operator
>                                       type: object
>                                     type: array
>                                   matchLabels:
>                                     additionalProperties:
>                                       type: string
>                                     description: matchLabels is a map of {key,value}
>                                       pairs. A single {key,value} in the matchLabels
>                                       map is equivalent to an element of matchExpressions,
>                                       whose key field is "key", the operator is "In",
>                                       and the values array contains only "value".
>                                       The requirements are ANDed.
>                                     type: object
>                                 type: object
>                               namespaces:
>                                 description: namespaces specifies which namespaces
>                                   the labelSelector applies to (matches against);
>                                   null or empty list means "this pod's namespace"
>                                 items:
>                                   type: string
>                                 type: array
>                               topologyKey:
>                                 description: This pod should be co-located (affinity)
>                                   or not co-located (anti-affinity) with the pods
>                                   matching the labelSelector in the specified namespaces,
>                                   where co-located is defined as running on a node
>                                   whose value of the label with key topologyKey matches
>                                   that of any node on which any of the selected pods
>                                   is running. Empty topologyKey is not allowed.
>                                 type: string
>                             required:
>                             - topologyKey
>                             type: object
>                           weight:
>                             description: weight associated with matching the corresponding
>                               podAffinityTerm, in the range 1-100.
>                             format: int32
>                             type: integer
>                         required:
>                         - podAffinityTerm
>                         - weight
>                         type: object
>                       type: array
>                     requiredDuringSchedulingIgnoredDuringExecution:
>                       description: If the affinity requirements specified by this
>                         field are not met at scheduling time, the pod will not be
>                         scheduled onto the node. If the affinity requirements specified
>                         by this field cease to be met at some point during pod execution
>                         (e.g. due to a pod label update), the system may or may not
>                         try to eventually evict the pod from its node. When there
>                         are multiple elements, the lists of nodes corresponding to
>                         each podAffinityTerm are intersected, i.e. all terms must
>                         be satisfied.
>                       items:
>                         description: Defines a set of pods (namely those matching
>                           the labelSelector relative to the given namespace(s)) that
>                           this pod should be co-located (affinity) or not co-located
>                           (anti-affinity) with, where co-located is defined as running
>                           on a node whose value of the label with key <topologyKey>
>                           matches that of any node on which a pod of the set of pods
>                           is running
>                         properties:
>                           labelSelector:
>                             description: A label query over a set of resources, in
>                               this case pods.
>                             properties:
>                               matchExpressions:
>                                 description: matchExpressions is a list of label selector
>                                   requirements. The requirements are ANDed.
>                                 items:
>                                   description: A label selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: key is the label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: operator represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists and DoesNotExist.
>                                       type: string
>                                     values:
>                                       description: values is an array of string values.
>                                         If the operator is In or NotIn, the values
>                                         array must be non-empty. If the operator is
>                                         Exists or DoesNotExist, the values array must
>                                         be empty. This array is replaced during a
>                                         strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                               matchLabels:
>                                 additionalProperties:
>                                   type: string
>                                 description: matchLabels is a map of {key,value} pairs.
>                                   A single {key,value} in the matchLabels map is equivalent
>                                   to an element of matchExpressions, whose key field
>                                   is "key", the operator is "In", and the values array
>                                   contains only "value". The requirements are ANDed.
>                                 type: object
>                             type: object
>                           namespaces:
>                             description: namespaces specifies which namespaces the
>                               labelSelector applies to (matches against); null or
>                               empty list means "this pod's namespace"
>                             items:
>                               type: string
>                             type: array
>                           topologyKey:
>                             description: This pod should be co-located (affinity)
>                               or not co-located (anti-affinity) with the pods matching
>                               the labelSelector in the specified namespaces, where
>                               co-located is defined as running on a node whose value
>                               of the label with key topologyKey matches that of any
>                               node on which any of the selected pods is running. Empty
>                               topologyKey is not allowed.
>                             type: string
>                         required:
>                         - topologyKey
>                         type: object
>                       type: array
>                   type: object
>                 podAntiAffinity:
>                   description: Describes pod anti-affinity scheduling rules (e.g.
>                     avoid putting this pod in the same node, zone, etc. as some other
>                     pod(s)).
>                   properties:
>                     preferredDuringSchedulingIgnoredDuringExecution:
>                       description: The scheduler will prefer to schedule pods to nodes
>                         that satisfy the anti-affinity expressions specified by this
>                         field, but it may choose a node that violates one or more
>                         of the expressions. The node that is most preferred is the
>                         one with the greatest sum of weights, i.e. for each node that
>                         meets all of the scheduling requirements (resource request,
>                         requiredDuringScheduling anti-affinity expressions, etc.),
>                         compute a sum by iterating through the elements of this field
>                         and adding "weight" to the sum if the node has pods which
>                         matches the corresponding podAffinityTerm; the node(s) with
>                         the highest sum are the most preferred.
>                       items:
>                         description: The weights of all of the matched WeightedPodAffinityTerm
>                           fields are added per-node to find the most preferred node(s)
>                         properties:
>                           podAffinityTerm:
>                             description: Required. A pod affinity term, associated
>                               with the corresponding weight.
>                             properties:
>                               labelSelector:
>                                 description: A label query over a set of resources,
>                                   in this case pods.
>                                 properties:
>                                   matchExpressions:
>                                     description: matchExpressions is a list of label
>                                       selector requirements. The requirements are
>                                       ANDed.
>                                     items:
>                                       description: A label selector requirement is
>                                         a selector that contains values, a key, and
>                                         an operator that relates the key and values.
>                                       properties:
>                                         key:
>                                           description: key is the label key that the
>                                             selector applies to.
>                                           type: string
>                                         operator:
>                                           description: operator represents a key's
>                                             relationship to a set of values. Valid
>                                             operators are In, NotIn, Exists and DoesNotExist.
>                                           type: string
>                                         values:
>                                           description: values is an array of string
>                                             values. If the operator is In or NotIn,
>                                             the values array must be non-empty. If
>                                             the operator is Exists or DoesNotExist,
>                                             the values array must be empty. This array
>                                             is replaced during a strategic merge patch.
>                                           items:
>                                             type: string
>                                           type: array
>                                       required:
>                                       - key
>                                       - operator
>                                       type: object
>                                     type: array
>                                   matchLabels:
>                                     additionalProperties:
>                                       type: string
>                                     description: matchLabels is a map of {key,value}
>                                       pairs. A single {key,value} in the matchLabels
>                                       map is equivalent to an element of matchExpressions,
>                                       whose key field is "key", the operator is "In",
>                                       and the values array contains only "value".
>                                       The requirements are ANDed.
>                                     type: object
>                                 type: object
>                               namespaces:
>                                 description: namespaces specifies which namespaces
>                                   the labelSelector applies to (matches against);
>                                   null or empty list means "this pod's namespace"
>                                 items:
>                                   type: string
>                                 type: array
>                               topologyKey:
>                                 description: This pod should be co-located (affinity)
>                                   or not co-located (anti-affinity) with the pods
>                                   matching the labelSelector in the specified namespaces,
>                                   where co-located is defined as running on a node
>                                   whose value of the label with key topologyKey matches
>                                   that of any node on which any of the selected pods
>                                   is running. Empty topologyKey is not allowed.
>                                 type: string
>                             required:
>                             - topologyKey
>                             type: object
>                           weight:
>                             description: weight associated with matching the corresponding
>                               podAffinityTerm, in the range 1-100.
>                             format: int32
>                             type: integer
>                         required:
>                         - podAffinityTerm
>                         - weight
>                         type: object
>                       type: array
>                     requiredDuringSchedulingIgnoredDuringExecution:
>                       description: If the anti-affinity requirements specified by
>                         this field are not met at scheduling time, the pod will not
>                         be scheduled onto the node. If the anti-affinity requirements
>                         specified by this field cease to be met at some point during
>                         pod execution (e.g. due to a pod label update), the system
>                         may or may not try to eventually evict the pod from its node.
>                         When there are multiple elements, the lists of nodes corresponding
>                         to each podAffinityTerm are intersected, i.e. all terms must
>                         be satisfied.
>                       items:
>                         description: Defines a set of pods (namely those matching
>                           the labelSelector relative to the given namespace(s)) that
>                           this pod should be co-located (affinity) or not co-located
>                           (anti-affinity) with, where co-located is defined as running
>                           on a node whose value of the label with key <topologyKey>
>                           matches that of any node on which a pod of the set of pods
>                           is running
>                         properties:
>                           labelSelector:
>                             description: A label query over a set of resources, in
>                               this case pods.
>                             properties:
>                               matchExpressions:
>                                 description: matchExpressions is a list of label selector
>                                   requirements. The requirements are ANDed.
>                                 items:
>                                   description: A label selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: key is the label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: operator represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists and DoesNotExist.
>                                       type: string
>                                     values:
>                                       description: values is an array of string values.
>                                         If the operator is In or NotIn, the values
>                                         array must be non-empty. If the operator is
>                                         Exists or DoesNotExist, the values array must
>                                         be empty. This array is replaced during a
>                                         strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                               matchLabels:
>                                 additionalProperties:
>                                   type: string
>                                 description: matchLabels is a map of {key,value} pairs.
>                                   A single {key,value} in the matchLabels map is equivalent
>                                   to an element of matchExpressions, whose key field
>                                   is "key", the operator is "In", and the values array
>                                   contains only "value". The requirements are ANDed.
>                                 type: object
>                             type: object
>                           namespaces:
>                             description: namespaces specifies which namespaces the
>                               labelSelector applies to (matches against); null or
>                               empty list means "this pod's namespace"
>                             items:
>                               type: string
>                             type: array
>                           topologyKey:
>                             description: This pod should be co-located (affinity)
>                               or not co-located (anti-affinity) with the pods matching
>                               the labelSelector in the specified namespaces, where
>                               co-located is defined as running on a node whose value
>                               of the label with key topologyKey matches that of any
>                               node on which any of the selected pods is running. Empty
>                               topologyKey is not allowed.
>                             type: string
>                         required:
>                         - topologyKey
>                         type: object
>                       type: array
>                   type: object
>               type: object
>             baseImage:
>               description: Base image that is used to deploy pods, without tag.
>               type: string
>             configMaps:
>               description: ConfigMaps is a list of ConfigMaps in the same namespace
>                 as the Alertmanager object, which shall be mounted into the Alertmanager
>                 Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/<configmap-name>.
>               items:
>                 type: string
>               type: array
>             configSecret:
>               description: ConfigSecret is the name of a Kubernetes Secret in the
>                 same namespace as the Alertmanager object, which contains configuration
>                 for this Alertmanager instance. Defaults to 'alertmanager-<alertmanager-name>'
>                 The secret is mounted into /etc/alertmanager/config.
>               type: string
>             containers:
>               description: Containers allows injecting additional containers. This
>                 is meant to allow adding an authentication proxy to an Alertmanager
>                 pod.
>               items:
>                 description: A single application container that you want to run within
>                   a pod.
>                 properties:
>                   args:
>                     description: 'Arguments to the entrypoint. The docker image''s
>                       CMD is used if this is not provided. Variable references $(VAR_NAME)
>                       are expanded using the container''s environment. If a variable
>                       cannot be resolved, the reference in the input string will be
>                       unchanged. The $(VAR_NAME) syntax can be escaped with a double
>                       $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
>                       regardless of whether the variable exists or not. Cannot be
>                       updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   command:
>                     description: 'Entrypoint array. Not executed within a shell. The
>                       docker image''s ENTRYPOINT is used if this is not provided.
>                       Variable references $(VAR_NAME) are expanded using the container''s
>                       environment. If a variable cannot be resolved, the reference
>                       in the input string will be unchanged. The $(VAR_NAME) syntax
>                       can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                       will never be expanded, regardless of whether the variable exists
>                       or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   env:
>                     description: List of environment variables to set in the container.
>                       Cannot be updated.
>                     items:
>                       description: EnvVar represents an environment variable present
>                         in a Container.
>                       properties:
>                         name:
>                           description: Name of the environment variable. Must be a
>                             C_IDENTIFIER.
>                           type: string
>                         value:
>                           description: 'Variable references $(VAR_NAME) are expanded
>                             using the previous defined environment variables in the
>                             container and any service environment variables. If a
>                             variable cannot be resolved, the reference in the input
>                             string will be unchanged. The $(VAR_NAME) syntax can be
>                             escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                             will never be expanded, regardless of whether the variable
>                             exists or not. Defaults to "".'
>                           type: string
>                         valueFrom:
>                           description: Source for the environment variable's value.
>                             Cannot be used if value is not empty.
>                           properties:
>                             configMapKeyRef:
>                               description: Selects a key of a ConfigMap.
>                               properties:
>                                 key:
>                                   description: The key to select.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the ConfigMap or its
>                                     key must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                             fieldRef:
>                               description: 'Selects a field of the pod: supports metadata.name,
>                                 metadata.namespace, metadata.labels, metadata.annotations,
>                                 spec.nodeName, spec.serviceAccountName, status.hostIP,
>                                 status.podIP.'
>                               properties:
>                                 apiVersion:
>                                   description: Version of the schema the FieldPath
>                                     is written in terms of, defaults to "v1".
>                                   type: string
>                                 fieldPath:
>                                   description: Path of the field to select in the
>                                     specified API version.
>                                   type: string
>                               required:
>                               - fieldPath
>                               type: object
>                             resourceFieldRef:
>                               description: 'Selects a resource of the container: only
>                                 resources limits and requests (limits.cpu, limits.memory,
>                                 limits.ephemeral-storage, requests.cpu, requests.memory
>                                 and requests.ephemeral-storage) are currently supported.'
>                               properties:
>                                 containerName:
>                                   description: 'Container name: required for volumes,
>                                     optional for env vars'
>                                   type: string
>                                 divisor:
>                                   description: Specifies the output format of the
>                                     exposed resources, defaults to "1"
>                                   type: string
>                                 resource:
>                                   description: 'Required: resource to select'
>                                   type: string
>                               required:
>                               - resource
>                               type: object
>                             secretKeyRef:
>                               description: Selects a key of a secret in the pod's
>                                 namespace
>                               properties:
>                                 key:
>                                   description: The key of the secret to select from.  Must
>                                     be a valid secret key.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the Secret or its key
>                                     must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                           type: object
>                       required:
>                       - name
>                       type: object
>                     type: array
>                   envFrom:
>                     description: List of sources to populate environment variables
>                       in the container. The keys defined within a source must be a
>                       C_IDENTIFIER. All invalid keys will be reported as an event
>                       when the container is starting. When a key exists in multiple
>                       sources, the value associated with the last source will take
>                       precedence. Values defined by an Env with a duplicate key will
>                       take precedence. Cannot be updated.
>                     items:
>                       description: EnvFromSource represents the source of a set of
>                         ConfigMaps
>                       properties:
>                         configMapRef:
>                           description: The ConfigMap to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the ConfigMap must be defined
>                               type: boolean
>                           type: object
>                         prefix:
>                           description: An optional identifier to prepend to each key
>                             in the ConfigMap. Must be a C_IDENTIFIER.
>                           type: string
>                         secretRef:
>                           description: The Secret to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the Secret must be defined
>                               type: boolean
>                           type: object
>                       type: object
>                     type: array
>                   image:
>                     description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
>                       This field is optional to allow higher level config management
>                       to default or override container images in workload controllers
>                       like Deployments and StatefulSets.'
>                     type: string
>                   imagePullPolicy:
>                     description: 'Image pull policy. One of Always, Never, IfNotPresent.
>                       Defaults to Always if :latest tag is specified, or IfNotPresent
>                       otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
>                     type: string
>                   lifecycle:
>                     description: Actions that the management system should take in
>                       response to container lifecycle events. Cannot be updated.
>                     properties:
>                       postStart:
>                         description: 'PostStart is called immediately after a container
>                           is created. If the handler fails, the container is terminated
>                           and restarted according to its restart policy. Other management
>                           of the container blocks until the hook completes. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                       preStop:
>                         description: 'PreStop is called immediately before a container
>                           is terminated due to an API request or management event
>                           such as liveness/startup probe failure, preemption, resource
>                           contention, etc. The handler is not called if the container
>                           crashes or exits. The reason for termination is passed to
>                           the handler. The Pod''s termination grace period countdown
>                           begins before the PreStop hooked is executed. Regardless
>                           of the outcome of the handler, the container will eventually
>                           terminate within the Pod''s termination grace period. Other
>                           management of the container blocks until the hook completes
>                           or until the termination grace period is reached. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                     type: object
>                   livenessProbe:
>                     description: 'Periodic probe of container liveness. Container
>                       will be restarted if the probe fails. Cannot be updated. More
>                       info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   name:
>                     description: Name of the container specified as a DNS_LABEL. Each
>                       container in a pod must have a unique name (DNS_LABEL). Cannot
>                       be updated.
>                     type: string
>                   ports:
>                     description: List of ports to expose from the container. Exposing
>                       a port here gives the system additional information about the
>                       network connections a container uses, but is primarily informational.
>                       Not specifying a port here DOES NOT prevent that port from being
>                       exposed. Any port which is listening on the default "0.0.0.0"
>                       address inside a container will be accessible from the network.
>                       Cannot be updated.
>                     items:
>                       description: ContainerPort represents a network port in a single
>                         container.
>                       properties:
>                         containerPort:
>                           description: Number of port to expose on the pod's IP address.
>                             This must be a valid port number, 0 < x < 65536.
>                           format: int32
>                           type: integer
>                         hostIP:
>                           description: What host IP to bind the external port to.
>                           type: string
>                         hostPort:
>                           description: Number of port to expose on the host. If specified,
>                             this must be a valid port number, 0 < x < 65536. If HostNetwork
>                             is specified, this must match ContainerPort. Most containers
>                             do not need this.
>                           format: int32
>                           type: integer
>                         name:
>                           description: If specified, this must be an IANA_SVC_NAME
>                             and unique within the pod. Each named port in a pod must
>                             have a unique name. Name for the port that can be referred
>                             to by services.
>                           type: string
>                         protocol:
>                           description: Protocol for port. Must be UDP, TCP, or SCTP.
>                             Defaults to "TCP".
>                           type: string
>                       required:
>                       - containerPort
>                       type: object
>                     type: array
>                   readinessProbe:
>                     description: 'Periodic probe of container service readiness. Container
>                       will be removed from service endpoints if the probe fails. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   resources:
>                     description: 'Compute Resources required by this container. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                     properties:
>                       limits:
>                         additionalProperties:
>                           type: string
>                         description: 'Limits describes the maximum amount of compute
>                           resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                       requests:
>                         additionalProperties:
>                           type: string
>                         description: 'Requests describes the minimum amount of compute
>                           resources required. If Requests is omitted for a container,
>                           it defaults to Limits if that is explicitly specified, otherwise
>                           to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                     type: object
>                   securityContext:
>                     description: 'Security options the pod should run with. More info:
>                       https://kubernetes.io/docs/concepts/policy/security-context/
>                       More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
>                     properties:
>                       allowPrivilegeEscalation:
>                         description: 'AllowPrivilegeEscalation controls whether a
>                           process can gain more privileges than its parent process.
>                           This bool directly controls if the no_new_privs flag will
>                           be set on the container process. AllowPrivilegeEscalation
>                           is true always when the container is: 1) run as Privileged
>                           2) has CAP_SYS_ADMIN'
>                         type: boolean
>                       capabilities:
>                         description: The capabilities to add/drop when running containers.
>                           Defaults to the default set of capabilities granted by the
>                           container runtime.
>                         properties:
>                           add:
>                             description: Added capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                           drop:
>                             description: Removed capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                         type: object
>                       privileged:
>                         description: Run container in privileged mode. Processes in
>                           privileged containers are essentially equivalent to root
>                           on the host. Defaults to false.
>                         type: boolean
>                       procMount:
>                         description: procMount denotes the type of proc mount to use
>                           for the containers. The default is DefaultProcMount which
>                           uses the container runtime defaults for readonly paths and
>                           masked paths. This requires the ProcMountType feature flag
>                           to be enabled.
>                         type: string
>                       readOnlyRootFilesystem:
>                         description: Whether this container has a read-only root filesystem.
>                           Default is false.
>                         type: boolean
>                       runAsGroup:
>                         description: The GID to run the entrypoint of the container
>                           process. Uses runtime default if unset. May also be set
>                           in PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         format: int64
>                         type: integer
>                       runAsNonRoot:
>                         description: Indicates that the container must run as a non-root
>                           user. If true, the Kubelet will validate the image at runtime
>                           to ensure that it does not run as UID 0 (root) and fail
>                           to start the container if it does. If unset or false, no
>                           such validation will be performed. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         type: boolean
>                       runAsUser:
>                         description: The UID to run the entrypoint of the container
>                           process. Defaults to user specified in image metadata if
>                           unspecified. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         format: int64
>                         type: integer
>                       seLinuxOptions:
>                         description: The SELinux context to be applied to the container.
>                           If unspecified, the container runtime will allocate a random
>                           SELinux context for each container.  May also be set in
>                           PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         properties:
>                           level:
>                             description: Level is SELinux level label that applies
>                               to the container.
>                             type: string
>                           role:
>                             description: Role is a SELinux role label that applies
>                               to the container.
>                             type: string
>                           type:
>                             description: Type is a SELinux type label that applies
>                               to the container.
>                             type: string
>                           user:
>                             description: User is a SELinux user label that applies
>                               to the container.
>                             type: string
>                         type: object
>                       windowsOptions:
>                         description: The Windows specific settings applied to all
>                           containers. If unspecified, the options from the PodSecurityContext
>                           will be used. If set in both SecurityContext and PodSecurityContext,
>                           the value specified in SecurityContext takes precedence.
>                         properties:
>                           gmsaCredentialSpec:
>                             description: GMSACredentialSpec is where the GMSA admission
>                               webhook (https://github.com/kubernetes-sigs/windows-gmsa)
>                               inlines the contents of the GMSA credential spec named
>                               by the GMSACredentialSpecName field. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           gmsaCredentialSpecName:
>                             description: GMSACredentialSpecName is the name of the
>                               GMSA credential spec to use. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           runAsUserName:
>                             description: The UserName in Windows to run the entrypoint
>                               of the container process. Defaults to the user specified
>                               in image metadata if unspecified. May also be set in
>                               PodSecurityContext. If set in both SecurityContext and
>                               PodSecurityContext, the value specified in SecurityContext
>                               takes precedence. This field is alpha-level and it is
>                               only honored by servers that enable the WindowsRunAsUserName
>                               feature flag.
>                             type: string
>                         type: object
>                     type: object
>                   startupProbe:
>                     description: 'StartupProbe indicates that the Pod has successfully
>                       initialized. If specified, no other probes are executed until
>                       this completes successfully. If this probe fails, the Pod will
>                       be restarted, just as if the livenessProbe failed. This can
>                       be used to provide different probe parameters at the beginning
>                       of a Pod''s lifecycle, when it might take a long time to load
>                       data or warm a cache, than during steady-state operation. This
>                       cannot be updated. This is an alpha feature enabled by the StartupProbe
>                       feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   stdin:
>                     description: Whether this container should allocate a buffer for
>                       stdin in the container runtime. If this is not set, reads from
>                       stdin in the container will always result in EOF. Default is
>                       false.
>                     type: boolean
>                   stdinOnce:
>                     description: Whether the container runtime should close the stdin
>                       channel after it has been opened by a single attach. When stdin
>                       is true the stdin stream will remain open across multiple attach
>                       sessions. If stdinOnce is set to true, stdin is opened on container
>                       start, is empty until the first client attaches to stdin, and
>                       then remains open and accepts data until the client disconnects,
>                       at which time stdin is closed and remains closed until the container
>                       is restarted. If this flag is false, a container processes that
>                       reads from stdin will never receive an EOF. Default is false
>                     type: boolean
>                   terminationMessagePath:
>                     description: 'Optional: Path at which the file to which the container''s
>                       termination message will be written is mounted into the container''s
>                       filesystem. Message written is intended to be brief final status,
>                       such as an assertion failure message. Will be truncated by the
>                       node if greater than 4096 bytes. The total message length across
>                       all containers will be limited to 12kb. Defaults to /dev/termination-log.
>                       Cannot be updated.'
>                     type: string
>                   terminationMessagePolicy:
>                     description: Indicate how the termination message should be populated.
>                       File will use the contents of terminationMessagePath to populate
>                       the container status message on both success and failure. FallbackToLogsOnError
>                       will use the last chunk of container log output if the termination
>                       message file is empty and the container exited with an error.
>                       The log output is limited to 2048 bytes or 80 lines, whichever
>                       is smaller. Defaults to File. Cannot be updated.
>                     type: string
>                   tty:
>                     description: Whether this container should allocate a TTY for
>                       itself, also requires 'stdin' to be true. Default is false.
>                     type: boolean
>                   volumeDevices:
>                     description: volumeDevices is the list of block devices to be
>                       used by the container. This is a beta feature.
>                     items:
>                       description: volumeDevice describes a mapping of a raw block
>                         device within a container.
>                       properties:
>                         devicePath:
>                           description: devicePath is the path inside of the container
>                             that the device will be mapped to.
>                           type: string
>                         name:
>                           description: name must match the name of a persistentVolumeClaim
>                             in the pod
>                           type: string
>                       required:
>                       - devicePath
>                       - name
>                       type: object
>                     type: array
>                   volumeMounts:
>                     description: Pod volumes to mount into the container's filesystem.
>                       Cannot be updated.
>                     items:
>                       description: VolumeMount describes a mounting of a Volume within
>                         a container.
>                       properties:
>                         mountPath:
>                           description: Path within the container at which the volume
>                             should be mounted.  Must not contain ':'.
>                           type: string
>                         mountPropagation:
>                           description: mountPropagation determines how mounts are
>                             propagated from the host to container and the other way
>                             around. When not set, MountPropagationNone is used. This
>                             field is beta in 1.10.
>                           type: string
>                         name:
>                           description: This must match the Name of a Volume.
>                           type: string
>                         readOnly:
>                           description: Mounted read-only if true, read-write otherwise
>                             (false or unspecified). Defaults to false.
>                           type: boolean
>                         subPath:
>                           description: Path within the volume from which the container's
>                             volume should be mounted. Defaults to "" (volume's root).
>                           type: string
>                         subPathExpr:
>                           description: Expanded path within the volume from which
>                             the container's volume should be mounted. Behaves similarly
>                             to SubPath but environment variable references $(VAR_NAME)
>                             are expanded using the container's environment. Defaults
>                             to "" (volume's root). SubPathExpr and SubPath are mutually
>                             exclusive. This field is beta in 1.15.
>                           type: string
>                       required:
>                       - mountPath
>                       - name
>                       type: object
>                     type: array
>                   workingDir:
>                     description: Container's working directory. If not specified,
>                       the container runtime's default will be used, which might be
>                       configured in the container image. Cannot be updated.
>                     type: string
>                 required:
>                 - name
>                 type: object
>               type: array
>             externalUrl:
>               description: The external URL the Alertmanager instances will be available
>                 under. This is necessary to generate correct URLs. This is necessary
>                 if Alertmanager is not served from root of a DNS name.
>               type: string
>             image:
>               description: Image if specified has precedence over baseImage, tag and
>                 sha combinations. Specifying the version is still necessary to ensure
>                 the Prometheus Operator knows what version of Alertmanager is being
>                 configured.
>               type: string
>             imagePullSecrets:
>               description: An optional list of references to secrets in the same namespace
>                 to use for pulling prometheus and alertmanager images from registries
>                 see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
>               items:
>                 description: LocalObjectReference contains enough information to let
>                   you locate the referenced object inside the same namespace.
>                 properties:
>                   name:
>                     description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                       TODO: Add other useful fields. apiVersion, kind, uid?'
>                     type: string
>                 type: object
>               type: array
>             initContainers:
>               description: 'InitContainers allows adding initContainers to the pod
>                 definition. Those can be used to e.g. fetch secrets for injection
>                 into the Alertmanager configuration from external sources. Any errors
>                 during the execution of an initContainer will lead to a restart of
>                 the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
>                 Using initContainers for any use case other then secret fetching is
>                 entirely outside the scope of what the maintainers will support and
>                 by doing so, you accept that this behaviour may break at any time
>                 without notice.'
>               items:
>                 description: A single application container that you want to run within
>                   a pod.
>                 properties:
>                   args:
>                     description: 'Arguments to the entrypoint. The docker image''s
>                       CMD is used if this is not provided. Variable references $(VAR_NAME)
>                       are expanded using the container''s environment. If a variable
>                       cannot be resolved, the reference in the input string will be
>                       unchanged. The $(VAR_NAME) syntax can be escaped with a double
>                       $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
>                       regardless of whether the variable exists or not. Cannot be
>                       updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   command:
>                     description: 'Entrypoint array. Not executed within a shell. The
>                       docker image''s ENTRYPOINT is used if this is not provided.
>                       Variable references $(VAR_NAME) are expanded using the container''s
>                       environment. If a variable cannot be resolved, the reference
>                       in the input string will be unchanged. The $(VAR_NAME) syntax
>                       can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                       will never be expanded, regardless of whether the variable exists
>                       or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   env:
>                     description: List of environment variables to set in the container.
>                       Cannot be updated.
>                     items:
>                       description: EnvVar represents an environment variable present
>                         in a Container.
>                       properties:
>                         name:
>                           description: Name of the environment variable. Must be a
>                             C_IDENTIFIER.
>                           type: string
>                         value:
>                           description: 'Variable references $(VAR_NAME) are expanded
>                             using the previous defined environment variables in the
>                             container and any service environment variables. If a
>                             variable cannot be resolved, the reference in the input
>                             string will be unchanged. The $(VAR_NAME) syntax can be
>                             escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                             will never be expanded, regardless of whether the variable
>                             exists or not. Defaults to "".'
>                           type: string
>                         valueFrom:
>                           description: Source for the environment variable's value.
>                             Cannot be used if value is not empty.
>                           properties:
>                             configMapKeyRef:
>                               description: Selects a key of a ConfigMap.
>                               properties:
>                                 key:
>                                   description: The key to select.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the ConfigMap or its
>                                     key must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                             fieldRef:
>                               description: 'Selects a field of the pod: supports metadata.name,
>                                 metadata.namespace, metadata.labels, metadata.annotations,
>                                 spec.nodeName, spec.serviceAccountName, status.hostIP,
>                                 status.podIP.'
>                               properties:
>                                 apiVersion:
>                                   description: Version of the schema the FieldPath
>                                     is written in terms of, defaults to "v1".
>                                   type: string
>                                 fieldPath:
>                                   description: Path of the field to select in the
>                                     specified API version.
>                                   type: string
>                               required:
>                               - fieldPath
>                               type: object
>                             resourceFieldRef:
>                               description: 'Selects a resource of the container: only
>                                 resources limits and requests (limits.cpu, limits.memory,
>                                 limits.ephemeral-storage, requests.cpu, requests.memory
>                                 and requests.ephemeral-storage) are currently supported.'
>                               properties:
>                                 containerName:
>                                   description: 'Container name: required for volumes,
>                                     optional for env vars'
>                                   type: string
>                                 divisor:
>                                   description: Specifies the output format of the
>                                     exposed resources, defaults to "1"
>                                   type: string
>                                 resource:
>                                   description: 'Required: resource to select'
>                                   type: string
>                               required:
>                               - resource
>                               type: object
>                             secretKeyRef:
>                               description: Selects a key of a secret in the pod's
>                                 namespace
>                               properties:
>                                 key:
>                                   description: The key of the secret to select from.  Must
>                                     be a valid secret key.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the Secret or its key
>                                     must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                           type: object
>                       required:
>                       - name
>                       type: object
>                     type: array
>                   envFrom:
>                     description: List of sources to populate environment variables
>                       in the container. The keys defined within a source must be a
>                       C_IDENTIFIER. All invalid keys will be reported as an event
>                       when the container is starting. When a key exists in multiple
>                       sources, the value associated with the last source will take
>                       precedence. Values defined by an Env with a duplicate key will
>                       take precedence. Cannot be updated.
>                     items:
>                       description: EnvFromSource represents the source of a set of
>                         ConfigMaps
>                       properties:
>                         configMapRef:
>                           description: The ConfigMap to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the ConfigMap must be defined
>                               type: boolean
>                           type: object
>                         prefix:
>                           description: An optional identifier to prepend to each key
>                             in the ConfigMap. Must be a C_IDENTIFIER.
>                           type: string
>                         secretRef:
>                           description: The Secret to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the Secret must be defined
>                               type: boolean
>                           type: object
>                       type: object
>                     type: array
>                   image:
>                     description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
>                       This field is optional to allow higher level config management
>                       to default or override container images in workload controllers
>                       like Deployments and StatefulSets.'
>                     type: string
>                   imagePullPolicy:
>                     description: 'Image pull policy. One of Always, Never, IfNotPresent.
>                       Defaults to Always if :latest tag is specified, or IfNotPresent
>                       otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
>                     type: string
>                   lifecycle:
>                     description: Actions that the management system should take in
>                       response to container lifecycle events. Cannot be updated.
>                     properties:
>                       postStart:
>                         description: 'PostStart is called immediately after a container
>                           is created. If the handler fails, the container is terminated
>                           and restarted according to its restart policy. Other management
>                           of the container blocks until the hook completes. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                       preStop:
>                         description: 'PreStop is called immediately before a container
>                           is terminated due to an API request or management event
>                           such as liveness/startup probe failure, preemption, resource
>                           contention, etc. The handler is not called if the container
>                           crashes or exits. The reason for termination is passed to
>                           the handler. The Pod''s termination grace period countdown
>                           begins before the PreStop hooked is executed. Regardless
>                           of the outcome of the handler, the container will eventually
>                           terminate within the Pod''s termination grace period. Other
>                           management of the container blocks until the hook completes
>                           or until the termination grace period is reached. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                     type: object
>                   livenessProbe:
>                     description: 'Periodic probe of container liveness. Container
>                       will be restarted if the probe fails. Cannot be updated. More
>                       info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   name:
>                     description: Name of the container specified as a DNS_LABEL. Each
>                       container in a pod must have a unique name (DNS_LABEL). Cannot
>                       be updated.
>                     type: string
>                   ports:
>                     description: List of ports to expose from the container. Exposing
>                       a port here gives the system additional information about the
>                       network connections a container uses, but is primarily informational.
>                       Not specifying a port here DOES NOT prevent that port from being
>                       exposed. Any port which is listening on the default "0.0.0.0"
>                       address inside a container will be accessible from the network.
>                       Cannot be updated.
>                     items:
>                       description: ContainerPort represents a network port in a single
>                         container.
>                       properties:
>                         containerPort:
>                           description: Number of port to expose on the pod's IP address.
>                             This must be a valid port number, 0 < x < 65536.
>                           format: int32
>                           type: integer
>                         hostIP:
>                           description: What host IP to bind the external port to.
>                           type: string
>                         hostPort:
>                           description: Number of port to expose on the host. If specified,
>                             this must be a valid port number, 0 < x < 65536. If HostNetwork
>                             is specified, this must match ContainerPort. Most containers
>                             do not need this.
>                           format: int32
>                           type: integer
>                         name:
>                           description: If specified, this must be an IANA_SVC_NAME
>                             and unique within the pod. Each named port in a pod must
>                             have a unique name. Name for the port that can be referred
>                             to by services.
>                           type: string
>                         protocol:
>                           description: Protocol for port. Must be UDP, TCP, or SCTP.
>                             Defaults to "TCP".
>                           type: string
>                       required:
>                       - containerPort
>                       type: object
>                     type: array
>                   readinessProbe:
>                     description: 'Periodic probe of container service readiness. Container
>                       will be removed from service endpoints if the probe fails. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   resources:
>                     description: 'Compute Resources required by this container. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                     properties:
>                       limits:
>                         additionalProperties:
>                           type: string
>                         description: 'Limits describes the maximum amount of compute
>                           resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                       requests:
>                         additionalProperties:
>                           type: string
>                         description: 'Requests describes the minimum amount of compute
>                           resources required. If Requests is omitted for a container,
>                           it defaults to Limits if that is explicitly specified, otherwise
>                           to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                     type: object
>                   securityContext:
>                     description: 'Security options the pod should run with. More info:
>                       https://kubernetes.io/docs/concepts/policy/security-context/
>                       More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
>                     properties:
>                       allowPrivilegeEscalation:
>                         description: 'AllowPrivilegeEscalation controls whether a
>                           process can gain more privileges than its parent process.
>                           This bool directly controls if the no_new_privs flag will
>                           be set on the container process. AllowPrivilegeEscalation
>                           is true always when the container is: 1) run as Privileged
>                           2) has CAP_SYS_ADMIN'
>                         type: boolean
>                       capabilities:
>                         description: The capabilities to add/drop when running containers.
>                           Defaults to the default set of capabilities granted by the
>                           container runtime.
>                         properties:
>                           add:
>                             description: Added capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                           drop:
>                             description: Removed capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                         type: object
>                       privileged:
>                         description: Run container in privileged mode. Processes in
>                           privileged containers are essentially equivalent to root
>                           on the host. Defaults to false.
>                         type: boolean
>                       procMount:
>                         description: procMount denotes the type of proc mount to use
>                           for the containers. The default is DefaultProcMount which
>                           uses the container runtime defaults for readonly paths and
>                           masked paths. This requires the ProcMountType feature flag
>                           to be enabled.
>                         type: string
>                       readOnlyRootFilesystem:
>                         description: Whether this container has a read-only root filesystem.
>                           Default is false.
>                         type: boolean
>                       runAsGroup:
>                         description: The GID to run the entrypoint of the container
>                           process. Uses runtime default if unset. May also be set
>                           in PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         format: int64
>                         type: integer
>                       runAsNonRoot:
>                         description: Indicates that the container must run as a non-root
>                           user. If true, the Kubelet will validate the image at runtime
>                           to ensure that it does not run as UID 0 (root) and fail
>                           to start the container if it does. If unset or false, no
>                           such validation will be performed. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         type: boolean
>                       runAsUser:
>                         description: The UID to run the entrypoint of the container
>                           process. Defaults to user specified in image metadata if
>                           unspecified. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         format: int64
>                         type: integer
>                       seLinuxOptions:
>                         description: The SELinux context to be applied to the container.
>                           If unspecified, the container runtime will allocate a random
>                           SELinux context for each container.  May also be set in
>                           PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         properties:
>                           level:
>                             description: Level is SELinux level label that applies
>                               to the container.
>                             type: string
>                           role:
>                             description: Role is a SELinux role label that applies
>                               to the container.
>                             type: string
>                           type:
>                             description: Type is a SELinux type label that applies
>                               to the container.
>                             type: string
>                           user:
>                             description: User is a SELinux user label that applies
>                               to the container.
>                             type: string
>                         type: object
>                       windowsOptions:
>                         description: The Windows specific settings applied to all
>                           containers. If unspecified, the options from the PodSecurityContext
>                           will be used. If set in both SecurityContext and PodSecurityContext,
>                           the value specified in SecurityContext takes precedence.
>                         properties:
>                           gmsaCredentialSpec:
>                             description: GMSACredentialSpec is where the GMSA admission
>                               webhook (https://github.com/kubernetes-sigs/windows-gmsa)
>                               inlines the contents of the GMSA credential spec named
>                               by the GMSACredentialSpecName field. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           gmsaCredentialSpecName:
>                             description: GMSACredentialSpecName is the name of the
>                               GMSA credential spec to use. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           runAsUserName:
>                             description: The UserName in Windows to run the entrypoint
>                               of the container process. Defaults to the user specified
>                               in image metadata if unspecified. May also be set in
>                               PodSecurityContext. If set in both SecurityContext and
>                               PodSecurityContext, the value specified in SecurityContext
>                               takes precedence. This field is alpha-level and it is
>                               only honored by servers that enable the WindowsRunAsUserName
>                               feature flag.
>                             type: string
>                         type: object
>                     type: object
>                   startupProbe:
>                     description: 'StartupProbe indicates that the Pod has successfully
>                       initialized. If specified, no other probes are executed until
>                       this completes successfully. If this probe fails, the Pod will
>                       be restarted, just as if the livenessProbe failed. This can
>                       be used to provide different probe parameters at the beginning
>                       of a Pod''s lifecycle, when it might take a long time to load
>                       data or warm a cache, than during steady-state operation. This
>                       cannot be updated. This is an alpha feature enabled by the StartupProbe
>                       feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   stdin:
>                     description: Whether this container should allocate a buffer for
>                       stdin in the container runtime. If this is not set, reads from
>                       stdin in the container will always result in EOF. Default is
>                       false.
>                     type: boolean
>                   stdinOnce:
>                     description: Whether the container runtime should close the stdin
>                       channel after it has been opened by a single attach. When stdin
>                       is true the stdin stream will remain open across multiple attach
>                       sessions. If stdinOnce is set to true, stdin is opened on container
>                       start, is empty until the first client attaches to stdin, and
>                       then remains open and accepts data until the client disconnects,
>                       at which time stdin is closed and remains closed until the container
>                       is restarted. If this flag is false, a container processes that
>                       reads from stdin will never receive an EOF. Default is false
>                     type: boolean
>                   terminationMessagePath:
>                     description: 'Optional: Path at which the file to which the container''s
>                       termination message will be written is mounted into the container''s
>                       filesystem. Message written is intended to be brief final status,
>                       such as an assertion failure message. Will be truncated by the
>                       node if greater than 4096 bytes. The total message length across
>                       all containers will be limited to 12kb. Defaults to /dev/termination-log.
>                       Cannot be updated.'
>                     type: string
>                   terminationMessagePolicy:
>                     description: Indicate how the termination message should be populated.
>                       File will use the contents of terminationMessagePath to populate
>                       the container status message on both success and failure. FallbackToLogsOnError
>                       will use the last chunk of container log output if the termination
>                       message file is empty and the container exited with an error.
>                       The log output is limited to 2048 bytes or 80 lines, whichever
>                       is smaller. Defaults to File. Cannot be updated.
>                     type: string
>                   tty:
>                     description: Whether this container should allocate a TTY for
>                       itself, also requires 'stdin' to be true. Default is false.
>                     type: boolean
>                   volumeDevices:
>                     description: volumeDevices is the list of block devices to be
>                       used by the container. This is a beta feature.
>                     items:
>                       description: volumeDevice describes a mapping of a raw block
>                         device within a container.
>                       properties:
>                         devicePath:
>                           description: devicePath is the path inside of the container
>                             that the device will be mapped to.
>                           type: string
>                         name:
>                           description: name must match the name of a persistentVolumeClaim
>                             in the pod
>                           type: string
>                       required:
>                       - devicePath
>                       - name
>                       type: object
>                     type: array
>                   volumeMounts:
>                     description: Pod volumes to mount into the container's filesystem.
>                       Cannot be updated.
>                     items:
>                       description: VolumeMount describes a mounting of a Volume within
>                         a container.
>                       properties:
>                         mountPath:
>                           description: Path within the container at which the volume
>                             should be mounted.  Must not contain ':'.
>                           type: string
>                         mountPropagation:
>                           description: mountPropagation determines how mounts are
>                             propagated from the host to container and the other way
>                             around. When not set, MountPropagationNone is used. This
>                             field is beta in 1.10.
>                           type: string
>                         name:
>                           description: This must match the Name of a Volume.
>                           type: string
>                         readOnly:
>                           description: Mounted read-only if true, read-write otherwise
>                             (false or unspecified). Defaults to false.
>                           type: boolean
>                         subPath:
>                           description: Path within the volume from which the container's
>                             volume should be mounted. Defaults to "" (volume's root).
>                           type: string
>                         subPathExpr:
>                           description: Expanded path within the volume from which
>                             the container's volume should be mounted. Behaves similarly
>                             to SubPath but environment variable references $(VAR_NAME)
>                             are expanded using the container's environment. Defaults
>                             to "" (volume's root). SubPathExpr and SubPath are mutually
>                             exclusive. This field is beta in 1.15.
>                           type: string
>                       required:
>                       - mountPath
>                       - name
>                       type: object
>                     type: array
>                   workingDir:
>                     description: Container's working directory. If not specified,
>                       the container runtime's default will be used, which might be
>                       configured in the container image. Cannot be updated.
>                     type: string
>                 required:
>                 - name
>                 type: object
>               type: array
>             listenLocal:
>               description: ListenLocal makes the Alertmanager server listen on loopback,
>                 so that it does not bind against the Pod IP. Note this is only for
>                 the Alertmanager UI, not the gossip communication.
>               type: boolean
>             logFormat:
>               description: Log format for Alertmanager to be configured with.
>               type: string
>             logLevel:
>               description: Log level for Alertmanager to be configured with.
>               type: string
>             nodeSelector:
>               additionalProperties:
>                 type: string
>               description: Define which Nodes the Pods are scheduled on.
>               type: object
>             paused:
>               description: If set to true all actions on the underlaying managed objects
>                 are not goint to be performed, except for delete actions.
>               type: boolean
>             podMetadata:
>               description: 'Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
>                 Metadata Labels and Annotations gets propagated to the prometheus
>                 pods.'
>               type: object
>             portName:
>               description: Port name used for the pods and governing service. This
>                 defaults to web
>               type: string
>             priorityClassName:
>               description: Priority class assigned to the Pods
>               type: string
>             replicas:
>               description: Size is the expected size of the alertmanager cluster.
>                 The controller will eventually make the size of the running cluster
>                 equal to the expected size.
>               format: int32
>               type: integer
>             resources:
>               description: Define resources requests and limits for single Pods.
>               properties:
>                 limits:
>                   additionalProperties:
>                     type: string
>                   description: 'Limits describes the maximum amount of compute resources
>                     allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                   type: object
>                 requests:
>                   additionalProperties:
>                     type: string
>                   description: 'Requests describes the minimum amount of compute resources
>                     required. If Requests is omitted for a container, it defaults
>                     to Limits if that is explicitly specified, otherwise to an implementation-defined
>                     value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                   type: object
>               type: object
>             retention:
>               description: Time duration Alertmanager shall retain data for. Default
>                 is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)`
>                 (milliseconds seconds minutes hours).
>               type: string
>             routePrefix:
>               description: The route prefix Alertmanager registers HTTP handlers for.
>                 This is useful, if using ExternalURL and a proxy is rewriting HTTP
>                 routes of a request, and the actual ExternalURL is still true, but
>                 the server serves requests under a different route prefix. For example
>                 for use with `kubectl proxy`.
>               type: string
>             secrets:
>               description: Secrets is a list of Secrets in the same namespace as the
>                 Alertmanager object, which shall be mounted into the Alertmanager
>                 Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>.
>               items:
>                 type: string
>               type: array
>             securityContext:
>               description: SecurityContext holds pod-level security attributes and
>                 common container settings. This defaults to the default PodSecurityContext.
>               properties:
>                 fsGroup:
>                   description: "A special supplemental group that applies to all containers
>                     in a pod. Some volume types allow the Kubelet to change the ownership
>                     of that volume to be owned by the pod: \n 1. The owning GID will
>                     be the FSGroup 2. The setgid bit is set (new files created in
>                     the volume will be owned by FSGroup) 3. The permission bits are
>                     OR'd with rw-rw---- \n If unset, the Kubelet will not modify the
>                     ownership and permissions of any volume."
>                   format: int64
>                   type: integer
>                 runAsGroup:
>                   description: The GID to run the entrypoint of the container process.
>                     Uses runtime default if unset. May also be set in SecurityContext.  If
>                     set in both SecurityContext and PodSecurityContext, the value
>                     specified in SecurityContext takes precedence for that container.
>                   format: int64
>                   type: integer
>                 runAsNonRoot:
>                   description: Indicates that the container must run as a non-root
>                     user. If true, the Kubelet will validate the image at runtime
>                     to ensure that it does not run as UID 0 (root) and fail to start
>                     the container if it does. If unset or false, no such validation
>                     will be performed. May also be set in SecurityContext.  If set
>                     in both SecurityContext and PodSecurityContext, the value specified
>                     in SecurityContext takes precedence.
>                   type: boolean
>                 runAsUser:
>                   description: The UID to run the entrypoint of the container process.
>                     Defaults to user specified in image metadata if unspecified. May
>                     also be set in SecurityContext.  If set in both SecurityContext
>                     and PodSecurityContext, the value specified in SecurityContext
>                     takes precedence for that container.
>                   format: int64
>                   type: integer
>                 seLinuxOptions:
>                   description: The SELinux context to be applied to all containers.
>                     If unspecified, the container runtime will allocate a random SELinux
>                     context for each container.  May also be set in SecurityContext.  If
>                     set in both SecurityContext and PodSecurityContext, the value
>                     specified in SecurityContext takes precedence for that container.
>                   properties:
>                     level:
>                       description: Level is SELinux level label that applies to the
>                         container.
>                       type: string
>                     role:
>                       description: Role is a SELinux role label that applies to the
>                         container.
>                       type: string
>                     type:
>                       description: Type is a SELinux type label that applies to the
>                         container.
>                       type: string
>                     user:
>                       description: User is a SELinux user label that applies to the
>                         container.
>                       type: string
>                   type: object
>                 supplementalGroups:
>                   description: A list of groups applied to the first process run in
>                     each container, in addition to the container's primary GID.  If
>                     unspecified, no groups will be added to any container.
>                   items:
>                     format: int64
>                     type: integer
>                   type: array
>                 sysctls:
>                   description: Sysctls hold a list of namespaced sysctls used for
>                     the pod. Pods with unsupported sysctls (by the container runtime)
>                     might fail to launch.
>                   items:
>                     description: Sysctl defines a kernel parameter to be set
>                     properties:
>                       name:
>                         description: Name of a property to set
>                         type: string
>                       value:
>                         description: Value of a property to set
>                         type: string
>                     required:
>                     - name
>                     - value
>                     type: object
>                   type: array
>                 windowsOptions:
>                   description: The Windows specific settings applied to all containers.
>                     If unspecified, the options within a container's SecurityContext
>                     will be used. If set in both SecurityContext and PodSecurityContext,
>                     the value specified in SecurityContext takes precedence.
>                   properties:
>                     gmsaCredentialSpec:
>                       description: GMSACredentialSpec is where the GMSA admission
>                         webhook (https://github.com/kubernetes-sigs/windows-gmsa)
>                         inlines the contents of the GMSA credential spec named by
>                         the GMSACredentialSpecName field. This field is alpha-level
>                         and is only honored by servers that enable the WindowsGMSA
>                         feature flag.
>                       type: string
>                     gmsaCredentialSpecName:
>                       description: GMSACredentialSpecName is the name of the GMSA
>                         credential spec to use. This field is alpha-level and is only
>                         honored by servers that enable the WindowsGMSA feature flag.
>                       type: string
>                     runAsUserName:
>                       description: The UserName in Windows to run the entrypoint of
>                         the container process. Defaults to the user specified in image
>                         metadata if unspecified. May also be set in PodSecurityContext.
>                         If set in both SecurityContext and PodSecurityContext, the
>                         value specified in SecurityContext takes precedence. This
>                         field is alpha-level and it is only honored by servers that
>                         enable the WindowsRunAsUserName feature flag.
>                       type: string
>                   type: object
>               type: object
>             serviceAccountName:
>               description: ServiceAccountName is the name of the ServiceAccount to
>                 use to run the Prometheus Pods.
>               type: string
>             sha:
>               description: SHA of Alertmanager container image to be deployed. Defaults
>                 to the value of `version`. Similar to a tag, but the SHA explicitly
>                 deploys an immutable container image. Version and Tag are ignored
>                 if SHA is set.
>               type: string
>             storage:
>               description: Storage is the definition of how storage will be used by
>                 the Alertmanager instances.
>               properties:
>                 emptyDir:
>                   description: 'EmptyDirVolumeSource to be used by the Prometheus
>                     StatefulSets. If specified, used in place of any volumeClaimTemplate.
>                     More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
>                   properties:
>                     medium:
>                       description: 'What type of storage medium should back this directory.
>                         The default is "" which means to use the node''s default medium.
>                         Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
>                       type: string
>                     sizeLimit:
>                       description: 'Total amount of local storage required for this
>                         EmptyDir volume. The size limit is also applicable for memory
>                         medium. The maximum usage on memory medium EmptyDir would
>                         be the minimum value between the SizeLimit specified here
>                         and the sum of memory limits of all containers in a pod. The
>                         default is nil which means that the limit is undefined. More
>                         info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
>                       type: string
>                   type: object
>                 volumeClaimTemplate:
>                   description: A PVC spec to be used by the Prometheus StatefulSets.
>                   properties:
>                     apiVersion:
>                       description: 'APIVersion defines the versioned schema of this
>                         representation of an object. Servers should convert recognized
>                         schemas to the latest internal value, and may reject unrecognized
>                         values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
>                       type: string
>                     kind:
>                       description: 'Kind is a string value representing the REST resource
>                         this object represents. Servers may infer this from the endpoint
>                         the client submits requests to. Cannot be updated. In CamelCase.
>                         More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
>                       type: string
>                     metadata:
>                       description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
>                       type: object
>                     spec:
>                       description: 'Spec defines the desired characteristics of a
>                         volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                       properties:
>                         accessModes:
>                           description: 'AccessModes contains the desired access modes
>                             the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
>                           items:
>                             type: string
>                           type: array
>                         dataSource:
>                           description: This field requires the VolumeSnapshotDataSource
>                             alpha feature gate to be enabled and currently VolumeSnapshot
>                             is the only supported data source. If the provisioner
>                             can support VolumeSnapshot data source, it will create
>                             a new volume and data will be restored to the volume at
>                             the same time. If the provisioner does not support VolumeSnapshot
>                             data source, volume will not be created and the failure
>                             will be reported as an event. In the future, we plan to
>                             support more data source types and the behavior of the
>                             provisioner may change.
>                           properties:
>                             apiGroup:
>                               description: APIGroup is the group for the resource
>                                 being referenced. If APIGroup is not specified, the
>                                 specified Kind must be in the core API group. For
>                                 any other third-party types, APIGroup is required.
>                               type: string
>                             kind:
>                               description: Kind is the type of resource being referenced
>                               type: string
>                             name:
>                               description: Name is the name of resource being referenced
>                               type: string
>                           required:
>                           - kind
>                           - name
>                           type: object
>                         resources:
>                           description: 'Resources represents the minimum resources
>                             the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
>                           properties:
>                             limits:
>                               additionalProperties:
>                                 type: string
>                               description: 'Limits describes the maximum amount of
>                                 compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                               type: object
>                             requests:
>                               additionalProperties:
>                                 type: string
>                               description: 'Requests describes the minimum amount
>                                 of compute resources required. If Requests is omitted
>                                 for a container, it defaults to Limits if that is
>                                 explicitly specified, otherwise to an implementation-defined
>                                 value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                               type: object
>                           type: object
>                         selector:
>                           description: A label query over volumes to consider for
>                             binding.
>                           properties:
>                             matchExpressions:
>                               description: matchExpressions is a list of label selector
>                                 requirements. The requirements are ANDed.
>                               items:
>                                 description: A label selector requirement is a selector
>                                   that contains values, a key, and an operator that
>                                   relates the key and values.
>                                 properties:
>                                   key:
>                                     description: key is the label key that the selector
>                                       applies to.
>                                     type: string
>                                   operator:
>                                     description: operator represents a key's relationship
>                                       to a set of values. Valid operators are In,
>                                       NotIn, Exists and DoesNotExist.
>                                     type: string
>                                   values:
>                                     description: values is an array of string values.
>                                       If the operator is In or NotIn, the values array
>                                       must be non-empty. If the operator is Exists
>                                       or DoesNotExist, the values array must be empty.
>                                       This array is replaced during a strategic merge
>                                       patch.
>                                     items:
>                                       type: string
>                                     type: array
>                                 required:
>                                 - key
>                                 - operator
>                                 type: object
>                               type: array
>                             matchLabels:
>                               additionalProperties:
>                                 type: string
>                               description: matchLabels is a map of {key,value} pairs.
>                                 A single {key,value} in the matchLabels map is equivalent
>                                 to an element of matchExpressions, whose key field
>                                 is "key", the operator is "In", and the values array
>                                 contains only "value". The requirements are ANDed.
>                               type: object
>                           type: object
>                         storageClassName:
>                           description: 'Name of the StorageClass required by the claim.
>                             More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
>                           type: string
>                         volumeMode:
>                           description: volumeMode defines what type of volume is required
>                             by the claim. Value of Filesystem is implied when not
>                             included in claim spec. This is a beta feature.
>                           type: string
>                         volumeName:
>                           description: VolumeName is the binding reference to the
>                             PersistentVolume backing this claim.
>                           type: string
>                       type: object
>                     status:
>                       description: 'Status represents the current information/status
>                         of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                       properties:
>                         accessModes:
>                           description: 'AccessModes contains the actual access modes
>                             the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
>                           items:
>                             type: string
>                           type: array
>                         capacity:
>                           additionalProperties:
>                             type: string
>                           description: Represents the actual resources of the underlying
>                             volume.
>                           type: object
>                         conditions:
>                           description: Current Condition of persistent volume claim.
>                             If underlying persistent volume is being resized then
>                             the Condition will be set to 'ResizeStarted'.
>                           items:
>                             description: PersistentVolumeClaimCondition contails details
>                               about state of pvc
>                             properties:
>                               lastProbeTime:
>                                 description: Last time we probed the condition.
>                                 format: date-time
>                                 type: string
>                               lastTransitionTime:
>                                 description: Last time the condition transitioned
>                                   from one status to another.
>                                 format: date-time
>                                 type: string
>                               message:
>                                 description: Human-readable message indicating details
>                                   about last transition.
>                                 type: string
>                               reason:
>                                 description: Unique, this should be a short, machine
>                                   understandable string that gives the reason for
>                                   condition's last transition. If it reports "ResizeStarted"
>                                   that means the underlying persistent volume is being
>                                   resized.
>                                 type: string
>                               status:
>                                 type: string
>                               type:
>                                 description: PersistentVolumeClaimConditionType is
>                                   a valid value of PersistentVolumeClaimCondition.Type
>                                 type: string
>                             required:
>                             - status
>                             - type
>                             type: object
>                           type: array
>                         phase:
>                           description: Phase represents the current phase of PersistentVolumeClaim.
>                           type: string
>                       type: object
>                   type: object
>               type: object
>             tag:
>               description: Tag of Alertmanager container image to be deployed. Defaults
>                 to the value of `version`. Version is ignored if Tag is set.
>               type: string
>             tolerations:
>               description: If specified, the pod's tolerations.
>               items:
>                 description: The pod this Toleration is attached to tolerates any
>                   taint that matches the triple <key,value,effect> using the matching
>                   operator <operator>.
>                 properties:
>                   effect:
>                     description: Effect indicates the taint effect to match. Empty
>                       means match all taint effects. When specified, allowed values
>                       are NoSchedule, PreferNoSchedule and NoExecute.
>                     type: string
>                   key:
>                     description: Key is the taint key that the toleration applies
>                       to. Empty means match all taint keys. If the key is empty, operator
>                       must be Exists; this combination means to match all values and
>                       all keys.
>                     type: string
>                   operator:
>                     description: Operator represents a key's relationship to the value.
>                       Valid operators are Exists and Equal. Defaults to Equal. Exists
>                       is equivalent to wildcard for value, so that a pod can tolerate
>                       all taints of a particular category.
>                     type: string
>                   tolerationSeconds:
>                     description: TolerationSeconds represents the period of time the
>                       toleration (which must be of effect NoExecute, otherwise this
>                       field is ignored) tolerates the taint. By default, it is not
>                       set, which means tolerate the taint forever (do not evict).
>                       Zero and negative values will be treated as 0 (evict immediately)
>                       by the system.
>                     format: int64
>                     type: integer
>                   value:
>                     description: Value is the taint value the toleration matches to.
>                       If the operator is Exists, the value should be empty, otherwise
>                       just a regular string.
>                     type: string
>                 type: object
>               type: array
>             version:
>               description: Version the cluster should be on.
>               type: string
>             volumeMounts:
>               description: VolumeMounts allows configuration of additional VolumeMounts
>                 on the output StatefulSet definition. VolumeMounts specified will
>                 be appended to other VolumeMounts in the alertmanager container, that
>                 are generated as a result of StorageSpec objects.
>               items:
>                 description: VolumeMount describes a mounting of a Volume within a
>                   container.
>                 properties:
>                   mountPath:
>                     description: Path within the container at which the volume should
>                       be mounted.  Must not contain ':'.
>                     type: string
>                   mountPropagation:
>                     description: mountPropagation determines how mounts are propagated
>                       from the host to container and the other way around. When not
>                       set, MountPropagationNone is used. This field is beta in 1.10.
>                     type: string
>                   name:
>                     description: This must match the Name of a Volume.
>                     type: string
>                   readOnly:
>                     description: Mounted read-only if true, read-write otherwise (false
>                       or unspecified). Defaults to false.
>                     type: boolean
>                   subPath:
>                     description: Path within the volume from which the container's
>                       volume should be mounted. Defaults to "" (volume's root).
>                     type: string
>                   subPathExpr:
>                     description: Expanded path within the volume from which the container's
>                       volume should be mounted. Behaves similarly to SubPath but environment
>                       variable references $(VAR_NAME) are expanded using the container's
>                       environment. Defaults to "" (volume's root). SubPathExpr and
>                       SubPath are mutually exclusive. This field is beta in 1.15.
>                     type: string
>                 required:
>                 - mountPath
>                 - name
>                 type: object
>               type: array
>             volumes:
>               description: Volumes allows configuration of additional volumes on the
>                 output StatefulSet definition. Volumes specified will be appended
>                 to other volumes that are generated as a result of StorageSpec objects.
>               items:
>                 description: Volume represents a named volume in a pod that may be
>                   accessed by any container in the pod.
>                 properties:
>                   awsElasticBlockStore:
>                     description: 'AWSElasticBlockStore represents an AWS Disk resource
>                       that is attached to a kubelet''s host machine and then exposed
>                       to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       partition:
>                         description: 'The partition in the volume that you want to
>                           mount. If omitted, the default is to mount by volume name.
>                           Examples: For volume /dev/sda1, you specify the partition
>                           as "1". Similarly, the volume partition for /dev/sda is
>                           "0" (or you can leave the property empty).'
>                         format: int32
>                         type: integer
>                       readOnly:
>                         description: 'Specify "true" to force and set the ReadOnly
>                           property in VolumeMounts to "true". If omitted, the default
>                           is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
>                         type: boolean
>                       volumeID:
>                         description: 'Unique ID of the persistent disk resource in
>                           AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
>                         type: string
>                     required:
>                     - volumeID
>                     type: object
>                   azureDisk:
>                     description: AzureDisk represents an Azure Data Disk mount on
>                       the host and bind mount to the pod.
>                     properties:
>                       cachingMode:
>                         description: 'Host Caching mode: None, Read Only, Read Write.'
>                         type: string
>                       diskName:
>                         description: The Name of the data disk in the blob storage
>                         type: string
>                       diskURI:
>                         description: The URI the data disk in the blob storage
>                         type: string
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       kind:
>                         description: 'Expected values Shared: multiple blob disks
>                           per storage account  Dedicated: single blob disk per storage
>                           account  Managed: azure managed data disk (only in managed
>                           availability set). defaults to shared'
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                     required:
>                     - diskName
>                     - diskURI
>                     type: object
>                   azureFile:
>                     description: AzureFile represents an Azure File Service mount
>                       on the host and bind mount to the pod.
>                     properties:
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       secretName:
>                         description: the name of secret that contains Azure Storage
>                           Account Name and Key
>                         type: string
>                       shareName:
>                         description: Share Name
>                         type: string
>                     required:
>                     - secretName
>                     - shareName
>                     type: object
>                   cephfs:
>                     description: CephFS represents a Ceph FS mount on the host that
>                       shares a pod's lifetime
>                     properties:
>                       monitors:
>                         description: 'Required: Monitors is a collection of Ceph monitors
>                           More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         items:
>                           type: string
>                         type: array
>                       path:
>                         description: 'Optional: Used as the mounted root, rather than
>                           the full Ceph tree, default is /'
>                         type: string
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts. More
>                           info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         type: boolean
>                       secretFile:
>                         description: 'Optional: SecretFile is the path to key ring
>                           for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         type: string
>                       secretRef:
>                         description: 'Optional: SecretRef is reference to the authentication
>                           secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       user:
>                         description: 'Optional: User is the rados user name, default
>                           is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         type: string
>                     required:
>                     - monitors
>                     type: object
>                   cinder:
>                     description: 'Cinder represents a cinder volume attached and mounted
>                       on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Examples: "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                           More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                         type: string
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts. More
>                           info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                         type: boolean
>                       secretRef:
>                         description: 'Optional: points to a secret object containing
>                           parameters used to connect to OpenStack.'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       volumeID:
>                         description: 'volume id used to identify the volume in cinder.
>                           More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                         type: string
>                     required:
>                     - volumeID
>                     type: object
>                   configMap:
>                     description: ConfigMap represents a configMap that should populate
>                       this volume
>                     properties:
>                       defaultMode:
>                         description: 'Optional: mode bits to use on created files
>                           by default. Must be a value between 0 and 0777. Defaults
>                           to 0644. Directories within the path are not affected by
>                           this setting. This might be in conflict with other options
>                           that affect the file mode, like fsGroup, and the result
>                           can be other mode bits set.'
>                         format: int32
>                         type: integer
>                       items:
>                         description: If unspecified, each key-value pair in the Data
>                           field of the referenced ConfigMap will be projected into
>                           the volume as a file whose name is the key and content is
>                           the value. If specified, the listed keys will be projected
>                           into the specified paths, and unlisted keys will not be
>                           present. If a key is specified which is not present in the
>                           ConfigMap, the volume setup will error unless it is marked
>                           optional. Paths must be relative and may not contain the
>                           '..' path or start with '..'.
>                         items:
>                           description: Maps a string key to a path within a volume.
>                           properties:
>                             key:
>                               description: The key to project.
>                               type: string
>                             mode:
>                               description: 'Optional: mode bits to use on this file,
>                                 must be a value between 0 and 0777. If not specified,
>                                 the volume defaultMode will be used. This might be
>                                 in conflict with other options that affect the file
>                                 mode, like fsGroup, and the result can be other mode
>                                 bits set.'
>                               format: int32
>                               type: integer
>                             path:
>                               description: The relative path of the file to map the
>                                 key to. May not be an absolute path. May not contain
>                                 the path element '..'. May not start with the string
>                                 '..'.
>                               type: string
>                           required:
>                           - key
>                           - path
>                           type: object
>                         type: array
>                       name:
>                         description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                           TODO: Add other useful fields. apiVersion, kind, uid?'
>                         type: string
>                       optional:
>                         description: Specify whether the ConfigMap or its keys must
>                           be defined
>                         type: boolean
>                     type: object
>                   csi:
>                     description: CSI (Container Storage Interface) represents storage
>                       that is handled by an external CSI driver (Alpha feature).
>                     properties:
>                       driver:
>                         description: Driver is the name of the CSI driver that handles
>                           this volume. Consult with your admin for the correct name
>                           as registered in the cluster.
>                         type: string
>                       fsType:
>                         description: Filesystem type to mount. Ex. "ext4", "xfs",
>                           "ntfs". If not provided, the empty value is passed to the
>                           associated CSI driver which will determine the default filesystem
>                           to apply.
>                         type: string
>                       nodePublishSecretRef:
>                         description: NodePublishSecretRef is a reference to the secret
>                           object containing sensitive information to pass to the CSI
>                           driver to complete the CSI NodePublishVolume and NodeUnpublishVolume
>                           calls. This field is optional, and  may be empty if no secret
>                           is required. If the secret object contains more than one
>                           secret, all secret references are passed.
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       readOnly:
>                         description: Specifies a read-only configuration for the volume.
>                           Defaults to false (read/write).
>                         type: boolean
>                       volumeAttributes:
>                         additionalProperties:
>                           type: string
>                         description: VolumeAttributes stores driver-specific properties
>                           that are passed to the CSI driver. Consult your driver's
>                           documentation for supported values.
>                         type: object
>                     required:
>                     - driver
>                     type: object
>                   downwardAPI:
>                     description: DownwardAPI represents downward API about the pod
>                       that should populate this volume
>                     properties:
>                       defaultMode:
>                         description: 'Optional: mode bits to use on created files
>                           by default. Must be a value between 0 and 0777. Defaults
>                           to 0644. Directories within the path are not affected by
>                           this setting. This might be in conflict with other options
>                           that affect the file mode, like fsGroup, and the result
>                           can be other mode bits set.'
>                         format: int32
>                         type: integer
>                       items:
>                         description: Items is a list of downward API volume file
>                         items:
>                           description: DownwardAPIVolumeFile represents information
>                             to create the file containing the pod field
>                           properties:
>                             fieldRef:
>                               description: 'Required: Selects a field of the pod:
>                                 only annotations, labels, name and namespace are supported.'
>                               properties:
>                                 apiVersion:
>                                   description: Version of the schema the FieldPath
>                                     is written in terms of, defaults to "v1".
>                                   type: string
>                                 fieldPath:
>                                   description: Path of the field to select in the
>                                     specified API version.
>                                   type: string
>                               required:
>                               - fieldPath
>                               type: object
>                             mode:
>                               description: 'Optional: mode bits to use on this file,
>                                 must be a value between 0 and 0777. If not specified,
>                                 the volume defaultMode will be used. This might be
>                                 in conflict with other options that affect the file
>                                 mode, like fsGroup, and the result can be other mode
>                                 bits set.'
>                               format: int32
>                               type: integer
>                             path:
>                               description: 'Required: Path is  the relative path name
>                                 of the file to be created. Must not be absolute or
>                                 contain the ''..'' path. Must be utf-8 encoded. The
>                                 first item of the relative path must not start with
>                                 ''..'''
>                               type: string
>                             resourceFieldRef:
>                               description: 'Selects a resource of the container: only
>                                 resources limits and requests (limits.cpu, limits.memory,
>                                 requests.cpu and requests.memory) are currently supported.'
>                               properties:
>                                 containerName:
>                                   description: 'Container name: required for volumes,
>                                     optional for env vars'
>                                   type: string
>                                 divisor:
>                                   description: Specifies the output format of the
>                                     exposed resources, defaults to "1"
>                                   type: string
>                                 resource:
>                                   description: 'Required: resource to select'
>                                   type: string
>                               required:
>                               - resource
>                               type: object
>                           required:
>                           - path
>                           type: object
>                         type: array
>                     type: object
>                   emptyDir:
>                     description: 'EmptyDir represents a temporary directory that shares
>                       a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
>                     properties:
>                       medium:
>                         description: 'What type of storage medium should back this
>                           directory. The default is "" which means to use the node''s
>                           default medium. Must be an empty string (default) or Memory.
>                           More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
>                         type: string
>                       sizeLimit:
>                         description: 'Total amount of local storage required for this
>                           EmptyDir volume. The size limit is also applicable for memory
>                           medium. The maximum usage on memory medium EmptyDir would
>                           be the minimum value between the SizeLimit specified here
>                           and the sum of memory limits of all containers in a pod.
>                           The default is nil which means that the limit is undefined.
>                           More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
>                         type: string
>                     type: object
>                   fc:
>                     description: FC represents a Fibre Channel resource that is attached
>                       to a kubelet's host machine and then exposed to the pod.
>                     properties:
>                       fsType:
>                         description: 'Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       lun:
>                         description: 'Optional: FC target lun number'
>                         format: int32
>                         type: integer
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts.'
>                         type: boolean
>                       targetWWNs:
>                         description: 'Optional: FC target worldwide names (WWNs)'
>                         items:
>                           type: string
>                         type: array
>                       wwids:
>                         description: 'Optional: FC volume world wide identifiers (wwids)
>                           Either wwids or combination of targetWWNs and lun must be
>                           set, but not both simultaneously.'
>                         items:
>                           type: string
>                         type: array
>                     type: object
>                   flexVolume:
>                     description: FlexVolume represents a generic volume resource that
>                       is provisioned/attached using an exec based plugin.
>                     properties:
>                       driver:
>                         description: Driver is the name of the driver to use for this
>                           volume.
>                         type: string
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". The default filesystem depends on FlexVolume
>                           script.
>                         type: string
>                       options:
>                         additionalProperties:
>                           type: string
>                         description: 'Optional: Extra command options if any.'
>                         type: object
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts.'
>                         type: boolean
>                       secretRef:
>                         description: 'Optional: SecretRef is reference to the secret
>                           object containing sensitive information to pass to the plugin
>                           scripts. This may be empty if no secret object is specified.
>                           If the secret object contains more than one secret, all
>                           secrets are passed to the plugin scripts.'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                     required:
>                     - driver
>                     type: object
>                   flocker:
>                     description: Flocker represents a Flocker volume attached to a
>                       kubelet's host machine. This depends on the Flocker control
>                       service being running
>                     properties:
>                       datasetName:
>                         description: Name of the dataset stored as metadata -> name
>                           on the dataset for Flocker should be considered as deprecated
>                         type: string
>                       datasetUUID:
>                         description: UUID of the dataset. This is unique identifier
>                           of a Flocker dataset
>                         type: string
>                     type: object
>                   gcePersistentDisk:
>                     description: 'GCEPersistentDisk represents a GCE Disk resource
>                       that is attached to a kubelet''s host machine and then exposed
>                       to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       partition:
>                         description: 'The partition in the volume that you want to
>                           mount. If omitted, the default is to mount by volume name.
>                           Examples: For volume /dev/sda1, you specify the partition
>                           as "1". Similarly, the volume partition for /dev/sda is
>                           "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                         format: int32
>                         type: integer
>                       pdName:
>                         description: 'Unique name of the PD resource in GCE. Used
>                           to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the ReadOnly setting
>                           in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                         type: boolean
>                     required:
>                     - pdName
>                     type: object
>                   gitRepo:
>                     description: 'GitRepo represents a git repository at a particular
>                       revision. DEPRECATED: GitRepo is deprecated. To provision a
>                       container with a git repo, mount an EmptyDir into an InitContainer
>                       that clones the repo using git, then mount the EmptyDir into
>                       the Pod''s container.'
>                     properties:
>                       directory:
>                         description: Target directory name. Must not contain or start
>                           with '..'.  If '.' is supplied, the volume directory will
>                           be the git repository.  Otherwise, if specified, the volume
>                           will contain the git repository in the subdirectory with
>                           the given name.
>                         type: string
>                       repository:
>                         description: Repository URL
>                         type: string
>                       revision:
>                         description: Commit hash for the specified revision.
>                         type: string
>                     required:
>                     - repository
>                     type: object
>                   glusterfs:
>                     description: 'Glusterfs represents a Glusterfs mount on the host
>                       that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
>                     properties:
>                       endpoints:
>                         description: 'EndpointsName is the endpoint name that details
>                           Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
>                         type: string
>                       path:
>                         description: 'Path is the Glusterfs volume path. More info:
>                           https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the Glusterfs volume
>                           to be mounted with read-only permissions. Defaults to false.
>                           More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
>                         type: boolean
>                     required:
>                     - endpoints
>                     - path
>                     type: object
>                   hostPath:
>                     description: 'HostPath represents a pre-existing file or directory
>                       on the host machine that is directly exposed to the container.
>                       This is generally used for system agents or other privileged
>                       things that are allowed to see the host machine. Most containers
>                       will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
>                       --- TODO(jonesdl) We need to restrict who can use host directory
>                       mounts and who can/can not mount host directories as read/write.'
>                     properties:
>                       path:
>                         description: 'Path of the directory on the host. If the path
>                           is a symlink, it will follow the link to the real path.
>                           More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
>                         type: string
>                       type:
>                         description: 'Type for HostPath Volume Defaults to "" More
>                           info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
>                         type: string
>                     required:
>                     - path
>                     type: object
>                   iscsi:
>                     description: 'ISCSI represents an ISCSI Disk resource that is
>                       attached to a kubelet''s host machine and then exposed to the
>                       pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
>                     properties:
>                       chapAuthDiscovery:
>                         description: whether support iSCSI Discovery CHAP authentication
>                         type: boolean
>                       chapAuthSession:
>                         description: whether support iSCSI Session CHAP authentication
>                         type: boolean
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#iscsi
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       initiatorName:
>                         description: Custom iSCSI Initiator Name. If initiatorName
>                           is specified with iscsiInterface simultaneously, new iSCSI
>                           interface <target portal>:<volume name> will be created
>                           for the connection.
>                         type: string
>                       iqn:
>                         description: Target iSCSI Qualified Name.
>                         type: string
>                       iscsiInterface:
>                         description: iSCSI Interface Name that uses an iSCSI transport.
>                           Defaults to 'default' (tcp).
>                         type: string
>                       lun:
>                         description: iSCSI Target Lun number.
>                         format: int32
>                         type: integer
>                       portals:
>                         description: iSCSI Target Portal List. The portal is either
>                           an IP or ip_addr:port if the port is other than default
>                           (typically TCP ports 860 and 3260).
>                         items:
>                           type: string
>                         type: array
>                       readOnly:
>                         description: ReadOnly here will force the ReadOnly setting
>                           in VolumeMounts. Defaults to false.
>                         type: boolean
>                       secretRef:
>                         description: CHAP Secret for iSCSI target and initiator authentication
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       targetPortal:
>                         description: iSCSI Target Portal. The Portal is either an
>                           IP or ip_addr:port if the port is other than default (typically
>                           TCP ports 860 and 3260).
>                         type: string
>                     required:
>                     - iqn
>                     - lun
>                     - targetPortal
>                     type: object
>                   name:
>                     description: 'Volume''s name. Must be a DNS_LABEL and unique within
>                       the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
>                     type: string
>                   nfs:
>                     description: 'NFS represents an NFS mount on the host that shares
>                       a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                     properties:
>                       path:
>                         description: 'Path that is exported by the NFS server. More
>                           info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the NFS export to be
>                           mounted with read-only permissions. Defaults to false. More
>                           info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                         type: boolean
>                       server:
>                         description: 'Server is the hostname or IP address of the
>                           NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                         type: string
>                     required:
>                     - path
>                     - server
>                     type: object
>                   persistentVolumeClaim:
>                     description: 'PersistentVolumeClaimVolumeSource represents a reference
>                       to a PersistentVolumeClaim in the same namespace. More info:
>                       https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                     properties:
>                       claimName:
>                         description: 'ClaimName is the name of a PersistentVolumeClaim
>                           in the same namespace as the pod using this volume. More
>                           info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                         type: string
>                       readOnly:
>                         description: Will force the ReadOnly setting in VolumeMounts.
>                           Default false.
>                         type: boolean
>                     required:
>                     - claimName
>                     type: object
>                   photonPersistentDisk:
>                     description: PhotonPersistentDisk represents a PhotonController
>                       persistent disk attached and mounted on kubelets host machine
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       pdID:
>                         description: ID that identifies Photon Controller persistent
>                           disk
>                         type: string
>                     required:
>                     - pdID
>                     type: object
>                   portworxVolume:
>                     description: PortworxVolume represents a portworx volume attached
>                       and mounted on kubelets host machine
>                     properties:
>                       fsType:
>                         description: FSType represents the filesystem type to mount
>                           Must be a filesystem type supported by the host operating
>                           system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4"
>                           if unspecified.
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       volumeID:
>                         description: VolumeID uniquely identifies a Portworx volume
>                         type: string
>                     required:
>                     - volumeID
>                     type: object
>                   projected:
>                     description: Items for all in one resources secrets, configmaps,
>                       and downward API
>                     properties:
>                       defaultMode:
>                         description: Mode bits to use on created files by default.
>                           Must be a value between 0 and 0777. Directories within the
>                           path are not affected by this setting. This might be in
>                           conflict with other options that affect the file mode, like
>                           fsGroup, and the result can be other mode bits set.
>                         format: int32
>                         type: integer
>                       sources:
>                         description: list of volume projections
>                         items:
>                           description: Projection that may be projected along with
>                             other supported volume types
>                           properties:
>                             configMap:
>                               description: information about the configMap data to
>                                 project
>                               properties:
>                                 items:
>                                   description: If unspecified, each key-value pair
>                                     in the Data field of the referenced ConfigMap
>                                     will be projected into the volume as a file whose
>                                     name is the key and content is the value. If specified,
>                                     the listed keys will be projected into the specified
>                                     paths, and unlisted keys will not be present.
>                                     If a key is specified which is not present in
>                                     the ConfigMap, the volume setup will error unless
>                                     it is marked optional. Paths must be relative
>                                     and may not contain the '..' path or start with
>                                     '..'.
>                                   items:
>                                     description: Maps a string key to a path within
>                                       a volume.
>                                     properties:
>                                       key:
>                                         description: The key to project.
>                                         type: string
>                                       mode:
>                                         description: 'Optional: mode bits to use on
>                                           this file, must be a value between 0 and
>                                           0777. If not specified, the volume defaultMode
>                                           will be used. This might be in conflict
>                                           with other options that affect the file
>                                           mode, like fsGroup, and the result can be
>                                           other mode bits set.'
>                                         format: int32
>                                         type: integer
>                                       path:
>                                         description: The relative path of the file
>                                           to map the key to. May not be an absolute
>                                           path. May not contain the path element '..'.
>                                           May not start with the string '..'.
>                                         type: string
>                                     required:
>                                     - key
>                                     - path
>                                     type: object
>                                   type: array
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the ConfigMap or its
>                                     keys must be defined
>                                   type: boolean
>                               type: object
>                             downwardAPI:
>                               description: information about the downwardAPI data
>                                 to project
>                               properties:
>                                 items:
>                                   description: Items is a list of DownwardAPIVolume
>                                     file
>                                   items:
>                                     description: DownwardAPIVolumeFile represents
>                                       information to create the file containing the
>                                       pod field
>                                     properties:
>                                       fieldRef:
>                                         description: 'Required: Selects a field of
>                                           the pod: only annotations, labels, name
>                                           and namespace are supported.'
>                                         properties:
>                                           apiVersion:
>                                             description: Version of the schema the
>                                               FieldPath is written in terms of, defaults
>                                               to "v1".
>                                             type: string
>                                           fieldPath:
>                                             description: Path of the field to select
>                                               in the specified API version.
>                                             type: string
>                                         required:
>                                         - fieldPath
>                                         type: object
>                                       mode:
>                                         description: 'Optional: mode bits to use on
>                                           this file, must be a value between 0 and
>                                           0777. If not specified, the volume defaultMode
>                                           will be used. This might be in conflict
>                                           with other options that affect the file
>                                           mode, like fsGroup, and the result can be
>                                           other mode bits set.'
>                                         format: int32
>                                         type: integer
>                                       path:
>                                         description: 'Required: Path is  the relative
>                                           path name of the file to be created. Must
>                                           not be absolute or contain the ''..'' path.
>                                           Must be utf-8 encoded. The first item of
>                                           the relative path must not start with ''..'''
>                                         type: string
>                                       resourceFieldRef:
>                                         description: 'Selects a resource of the container:
>                                           only resources limits and requests (limits.cpu,
>                                           limits.memory, requests.cpu and requests.memory)
>                                           are currently supported.'
>                                         properties:
>                                           containerName:
>                                             description: 'Container name: required
>                                               for volumes, optional for env vars'
>                                             type: string
>                                           divisor:
>                                             description: Specifies the output format
>                                               of the exposed resources, defaults to
>                                               "1"
>                                             type: string
>                                           resource:
>                                             description: 'Required: resource to select'
>                                             type: string
>                                         required:
>                                         - resource
>                                         type: object
>                                     required:
>                                     - path
>                                     type: object
>                                   type: array
>                               type: object
>                             secret:
>                               description: information about the secret data to project
>                               properties:
>                                 items:
>                                   description: If unspecified, each key-value pair
>                                     in the Data field of the referenced Secret will
>                                     be projected into the volume as a file whose name
>                                     is the key and content is the value. If specified,
>                                     the listed keys will be projected into the specified
>                                     paths, and unlisted keys will not be present.
>                                     If a key is specified which is not present in
>                                     the Secret, the volume setup will error unless
>                                     it is marked optional. Paths must be relative
>                                     and may not contain the '..' path or start with
>                                     '..'.
>                                   items:
>                                     description: Maps a string key to a path within
>                                       a volume.
>                                     properties:
>                                       key:
>                                         description: The key to project.
>                                         type: string
>                                       mode:
>                                         description: 'Optional: mode bits to use on
>                                           this file, must be a value between 0 and
>                                           0777. If not specified, the volume defaultMode
>                                           will be used. This might be in conflict
>                                           with other options that affect the file
>                                           mode, like fsGroup, and the result can be
>                                           other mode bits set.'
>                                         format: int32
>                                         type: integer
>                                       path:
>                                         description: The relative path of the file
>                                           to map the key to. May not be an absolute
>                                           path. May not contain the path element '..'.
>                                           May not start with the string '..'.
>                                         type: string
>                                     required:
>                                     - key
>                                     - path
>                                     type: object
>                                   type: array
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the Secret or its key
>                                     must be defined
>                                   type: boolean
>                               type: object
>                             serviceAccountToken:
>                               description: information about the serviceAccountToken
>                                 data to project
>                               properties:
>                                 audience:
>                                   description: Audience is the intended audience of
>                                     the token. A recipient of a token must identify
>                                     itself with an identifier specified in the audience
>                                     of the token, and otherwise should reject the
>                                     token. The audience defaults to the identifier
>                                     of the apiserver.
>                                   type: string
>                                 expirationSeconds:
>                                   description: ExpirationSeconds is the requested
>                                     duration of validity of the service account token.
>                                     As the token approaches expiration, the kubelet
>                                     volume plugin will proactively rotate the service
>                                     account token. The kubelet will start trying to
>                                     rotate the token if the token is older than 80
>                                     percent of its time to live or if the token is
>                                     older than 24 hours.Defaults to 1 hour and must
>                                     be at least 10 minutes.
>                                   format: int64
>                                   type: integer
>                                 path:
>                                   description: Path is the path relative to the mount
>                                     point of the file to project the token into.
>                                   type: string
>                               required:
>                               - path
>                               type: object
>                           type: object
>                         type: array
>                     required:
>                     - sources
>                     type: object
>                   quobyte:
>                     description: Quobyte represents a Quobyte mount on the host that
>                       shares a pod's lifetime
>                     properties:
>                       group:
>                         description: Group to map volume access to Default is no group
>                         type: string
>                       readOnly:
>                         description: ReadOnly here will force the Quobyte volume to
>                           be mounted with read-only permissions. Defaults to false.
>                         type: boolean
>                       registry:
>                         description: Registry represents a single or multiple Quobyte
>                           Registry services specified as a string as host:port pair
>                           (multiple entries are separated with commas) which acts
>                           as the central registry for volumes
>                         type: string
>                       tenant:
>                         description: Tenant owning the given Quobyte volume in the
>                           Backend Used with dynamically provisioned Quobyte volumes,
>                           value is set by the plugin
>                         type: string
>                       user:
>                         description: User to map volume access to Defaults to serivceaccount
>                           user
>                         type: string
>                       volume:
>                         description: Volume is a string that references an already
>                           created Quobyte volume by name.
>                         type: string
>                     required:
>                     - registry
>                     - volume
>                     type: object
>                   rbd:
>                     description: 'RBD represents a Rados Block Device mount on the
>                       host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#rbd
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       image:
>                         description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                       keyring:
>                         description: 'Keyring is the path to key ring for RBDUser.
>                           Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                       monitors:
>                         description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         items:
>                           type: string
>                         type: array
>                       pool:
>                         description: 'The rados pool name. Default is rbd. More info:
>                           https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the ReadOnly setting
>                           in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: boolean
>                       secretRef:
>                         description: 'SecretRef is name of the authentication secret
>                           for RBDUser. If provided overrides keyring. Default is nil.
>                           More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       user:
>                         description: 'The rados user name. Default is admin. More
>                           info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                     required:
>                     - image
>                     - monitors
>                     type: object
>                   scaleIO:
>                     description: ScaleIO represents a ScaleIO persistent volume attached
>                       and mounted on Kubernetes nodes.
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Default is "xfs".
>                         type: string
>                       gateway:
>                         description: The host address of the ScaleIO API Gateway.
>                         type: string
>                       protectionDomain:
>                         description: The name of the ScaleIO Protection Domain for
>                           the configured storage.
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       secretRef:
>                         description: SecretRef references to the secret for ScaleIO
>                           user and other sensitive information. If this is not provided,
>                           Login operation will fail.
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       sslEnabled:
>                         description: Flag to enable/disable SSL communication with
>                           Gateway, default false
>                         type: boolean
>                       storageMode:
>                         description: Indicates whether the storage for a volume should
>                           be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
>                         type: string
>                       storagePool:
>                         description: The ScaleIO Storage Pool associated with the
>                           protection domain.
>                         type: string
>                       system:
>                         description: The name of the storage system as configured
>                           in ScaleIO.
>                         type: string
>                       volumeName:
>                         description: The name of a volume already created in the ScaleIO
>                           system that is associated with this volume source.
>                         type: string
>                     required:
>                     - gateway
>                     - secretRef
>                     - system
>                     type: object
>                   secret:
>                     description: 'Secret represents a secret that should populate
>                       this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
>                     properties:
>                       defaultMode:
>                         description: 'Optional: mode bits to use on created files
>                           by default. Must be a value between 0 and 0777. Defaults
>                           to 0644. Directories within the path are not affected by
>                           this setting. This might be in conflict with other options
>                           that affect the file mode, like fsGroup, and the result
>                           can be other mode bits set.'
>                         format: int32
>                         type: integer
>                       items:
>                         description: If unspecified, each key-value pair in the Data
>                           field of the referenced Secret will be projected into the
>                           volume as a file whose name is the key and content is the
>                           value. If specified, the listed keys will be projected into
>                           the specified paths, and unlisted keys will not be present.
>                           If a key is specified which is not present in the Secret,
>                           the volume setup will error unless it is marked optional.
>                           Paths must be relative and may not contain the '..' path
>                           or start with '..'.
>                         items:
>                           description: Maps a string key to a path within a volume.
>                           properties:
>                             key:
>                               description: The key to project.
>                               type: string
>                             mode:
>                               description: 'Optional: mode bits to use on this file,
>                                 must be a value between 0 and 0777. If not specified,
>                                 the volume defaultMode will be used. This might be
>                                 in conflict with other options that affect the file
>                                 mode, like fsGroup, and the result can be other mode
>                                 bits set.'
>                               format: int32
>                               type: integer
>                             path:
>                               description: The relative path of the file to map the
>                                 key to. May not be an absolute path. May not contain
>                                 the path element '..'. May not start with the string
>                                 '..'.
>                               type: string
>                           required:
>                           - key
>                           - path
>                           type: object
>                         type: array
>                       optional:
>                         description: Specify whether the Secret or its keys must be
>                           defined
>                         type: boolean
>                       secretName:
>                         description: 'Name of the secret in the pod''s namespace to
>                           use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
>                         type: string
>                     type: object
>                   storageos:
>                     description: StorageOS represents a StorageOS volume attached
>                       and mounted on Kubernetes nodes.
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       secretRef:
>                         description: SecretRef specifies the secret to use for obtaining
>                           the StorageOS API credentials.  If not specified, default
>                           values will be attempted.
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       volumeName:
>                         description: VolumeName is the human-readable name of the
>                           StorageOS volume.  Volume names are only unique within a
>                           namespace.
>                         type: string
>                       volumeNamespace:
>                         description: VolumeNamespace specifies the scope of the volume
>                           within StorageOS.  If no namespace is specified then the
>                           Pod's namespace will be used.  This allows the Kubernetes
>                           name scoping to be mirrored within StorageOS for tighter
>                           integration. Set VolumeName to any name to override the
>                           default behaviour. Set to "default" if you are not using
>                           namespaces within StorageOS. Namespaces that do not pre-exist
>                           within StorageOS will be created.
>                         type: string
>                     type: object
>                   vsphereVolume:
>                     description: VsphereVolume represents a vSphere volume attached
>                       and mounted on kubelets host machine
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       storagePolicyID:
>                         description: Storage Policy Based Management (SPBM) profile
>                           ID associated with the StoragePolicyName.
>                         type: string
>                       storagePolicyName:
>                         description: Storage Policy Based Management (SPBM) profile
>                           name.
>                         type: string
>                       volumePath:
>                         description: Path that identifies vSphere volume vmdk
>                         type: string
>                     required:
>                     - volumePath
>                     type: object
>                 required:
>                 - name
>                 type: object
>               type: array
>           type: object
>         status:
>           description: 'Most recent observed status of the Alertmanager cluster. Read-only.
>             Not included when requesting from the apiserver, only from the Prometheus
>             Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
>           properties:
>             availableReplicas:
>               description: Total number of available pods (ready for at least minReadySeconds)
>                 targeted by this Alertmanager cluster.
>               format: int32
>               type: integer
>             paused:
>               description: Represents whether any actions on the underlaying managed
>                 objects are being performed. Only delete actions will be performed.
>               type: boolean
>             replicas:
>               description: Total number of non-terminated pods targeted by this Alertmanager
>                 cluster (their labels match the selector).
>               format: int32
>               type: integer
>             unavailableReplicas:
>               description: Total number of unavailable pods targeted by this Alertmanager
>                 cluster.
>               format: int32
>               type: integer
>             updatedReplicas:
>               description: Total number of non-terminated pods targeted by this Alertmanager
>                 cluster that have the desired version spec.
>               format: int32
>               type: integer
>           required:
>           - availableReplicas
>           - paused
>           - replicas
>           - unavailableReplicas
>           - updatedReplicas
>           type: object
>       required:
>       - spec
>       type: object
>   version: v1
>   versions:
>   - name: v1
>     served: true
>     storage: true
> status:
>   acceptedNames:
>     kind: ""
>     plural: ""
>   conditions: []
>   storedVersions: []
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/crds/crd-podmonitor.yaml packages/monitoring/charts/crds/crd-podmonitor.yaml
0a1,268
> # https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.35/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
> apiVersion: apiextensions.k8s.io/v1beta1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.2.4
>     helm.sh/hook: crd-install
>   creationTimestamp: null
>   name: podmonitors.monitoring.coreos.com
> spec:
>   group: monitoring.coreos.com
>   names:
>     kind: PodMonitor
>     listKind: PodMonitorList
>     plural: podmonitors
>     singular: podmonitor
>   preserveUnknownFields: false
>   scope: Namespaced
>   validation:
>     openAPIV3Schema:
>       description: PodMonitor defines monitoring for a set of pods.
>       properties:
>         apiVersion:
>           description: 'APIVersion defines the versioned schema of this representation
>             of an object. Servers should convert recognized schemas to the latest
>             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
>           type: string
>         kind:
>           description: 'Kind is a string value representing the REST resource this
>             object represents. Servers may infer this from the endpoint the client
>             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
>           type: string
>         metadata:
>           type: object
>         spec:
>           description: Specification of desired Pod selection for target discovery
>             by Prometheus.
>           properties:
>             jobLabel:
>               description: The label to use to retrieve the job name from.
>               type: string
>             namespaceSelector:
>               description: Selector to select which namespaces the Endpoints objects
>                 are discovered from.
>               properties:
>                 any:
>                   description: Boolean describing whether all namespaces are selected
>                     in contrast to a list restricting them.
>                   type: boolean
>                 matchNames:
>                   description: List of namespace names.
>                   items:
>                     type: string
>                   type: array
>               type: object
>             podMetricsEndpoints:
>               description: A list of endpoints allowed as part of this PodMonitor.
>               items:
>                 description: PodMetricsEndpoint defines a scrapeable endpoint of a
>                   Kubernetes Pod serving Prometheus metrics.
>                 properties:
>                   honorLabels:
>                     description: HonorLabels chooses the metric's labels on collisions
>                       with target labels.
>                     type: boolean
>                   honorTimestamps:
>                     description: HonorTimestamps controls whether Prometheus respects
>                       the timestamps present in scraped data.
>                     type: boolean
>                   interval:
>                     description: Interval at which metrics should be scraped
>                     type: string
>                   metricRelabelings:
>                     description: MetricRelabelConfigs to apply to samples before ingestion.
>                     items:
>                       description: 'RelabelConfig allows dynamic rewriting of the
>                         label set, being applied to samples before ingestion. It defines
>                         `<metric_relabel_configs>`-section of Prometheus configuration.
>                         More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
>                       properties:
>                         action:
>                           description: Action to perform based on regex matching.
>                             Default is 'replace'
>                           type: string
>                         modulus:
>                           description: Modulus to take of the hash of the source label
>                             values.
>                           format: int64
>                           type: integer
>                         regex:
>                           description: Regular expression against which the extracted
>                             value is matched. Default is '(.*)'
>                           type: string
>                         replacement:
>                           description: Replacement value against which a regex replace
>                             is performed if the regular expression matches. Regex
>                             capture groups are available. Default is '$1'
>                           type: string
>                         separator:
>                           description: Separator placed between concatenated source
>                             label values. default is ';'.
>                           type: string
>                         sourceLabels:
>                           description: The source labels select values from existing
>                             labels. Their content is concatenated using the configured
>                             separator and matched against the configured regular expression
>                             for the replace, keep, and drop actions.
>                           items:
>                             type: string
>                           type: array
>                         targetLabel:
>                           description: Label to which the resulting value is written
>                             in a replace action. It is mandatory for replace actions.
>                             Regex capture groups are available.
>                           type: string
>                       type: object
>                     type: array
>                   params:
>                     additionalProperties:
>                       items:
>                         type: string
>                       type: array
>                     description: Optional HTTP URL parameters
>                     type: object
>                   path:
>                     description: HTTP path to scrape for metrics.
>                     type: string
>                   port:
>                     description: Name of the port this endpoint refers to. Mutually
>                       exclusive with targetPort.
>                     type: string
>                   proxyUrl:
>                     description: ProxyURL eg http://proxyserver:2195 Directs scrapes
>                       to proxy through this endpoint.
>                     type: string
>                   relabelings:
>                     description: 'RelabelConfigs to apply to samples before ingestion.
>                       More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
>                     items:
>                       description: 'RelabelConfig allows dynamic rewriting of the
>                         label set, being applied to samples before ingestion. It defines
>                         `<metric_relabel_configs>`-section of Prometheus configuration.
>                         More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
>                       properties:
>                         action:
>                           description: Action to perform based on regex matching.
>                             Default is 'replace'
>                           type: string
>                         modulus:
>                           description: Modulus to take of the hash of the source label
>                             values.
>                           format: int64
>                           type: integer
>                         regex:
>                           description: Regular expression against which the extracted
>                             value is matched. Default is '(.*)'
>                           type: string
>                         replacement:
>                           description: Replacement value against which a regex replace
>                             is performed if the regular expression matches. Regex
>                             capture groups are available. Default is '$1'
>                           type: string
>                         separator:
>                           description: Separator placed between concatenated source
>                             label values. default is ';'.
>                           type: string
>                         sourceLabels:
>                           description: The source labels select values from existing
>                             labels. Their content is concatenated using the configured
>                             separator and matched against the configured regular expression
>                             for the replace, keep, and drop actions.
>                           items:
>                             type: string
>                           type: array
>                         targetLabel:
>                           description: Label to which the resulting value is written
>                             in a replace action. It is mandatory for replace actions.
>                             Regex capture groups are available.
>                           type: string
>                       type: object
>                     type: array
>                   scheme:
>                     description: HTTP scheme to use for scraping.
>                     type: string
>                   scrapeTimeout:
>                     description: Timeout after which the scrape is ended
>                     type: string
>                   targetPort:
>                     anyOf:
>                     - type: integer
>                     - type: string
>                     description: Name or number of the target port of the endpoint.
>                       Mutually exclusive with port.
>                     x-kubernetes-int-or-string: true
>                 type: object
>               type: array
>             podTargetLabels:
>               description: PodTargetLabels transfers labels on the Kubernetes Pod
>                 onto the target.
>               items:
>                 type: string
>               type: array
>             sampleLimit:
>               description: SampleLimit defines per-scrape limit on number of scraped
>                 samples that will be accepted.
>               format: int64
>               type: integer
>             selector:
>               description: Selector to select Pod objects.
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>           required:
>           - podMetricsEndpoints
>           - selector
>           type: object
>       required:
>       - spec
>       type: object
>   version: v1
>   versions:
>   - name: v1
>     served: true
>     storage: true
> status:
>   acceptedNames:
>     kind: ""
>     plural: ""
>   conditions: []
>   storedVersions: []
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/crds/crd-prometheus.yaml packages/monitoring/charts/crds/crd-prometheus.yaml
0a1,5800
> # https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.35/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
> apiVersion: apiextensions.k8s.io/v1beta1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.2.4
>     helm.sh/hook: crd-install
>   creationTimestamp: null
>   name: prometheuses.monitoring.coreos.com
> spec:
>   group: monitoring.coreos.com
>   names:
>     kind: Prometheus
>     listKind: PrometheusList
>     plural: prometheuses
>     singular: prometheus
>   preserveUnknownFields: false
>   scope: Namespaced
>   validation:
>     openAPIV3Schema:
>       description: Prometheus defines a Prometheus deployment.
>       properties:
>         apiVersion:
>           description: 'APIVersion defines the versioned schema of this representation
>             of an object. Servers should convert recognized schemas to the latest
>             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
>           type: string
>         kind:
>           description: 'Kind is a string value representing the REST resource this
>             object represents. Servers may infer this from the endpoint the client
>             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
>           type: string
>         metadata:
>           type: object
>         spec:
>           description: 'Specification of the desired behavior of the Prometheus cluster.
>             More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
>           properties:
>             additionalAlertManagerConfigs:
>               description: 'AdditionalAlertManagerConfigs allows specifying a key
>                 of a Secret containing additional Prometheus AlertManager configurations.
>                 AlertManager configurations specified are appended to the configurations
>                 generated by the Prometheus Operator. Job configurations specified
>                 must have the form as specified in the official Prometheus documentation:
>                 https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config.
>                 As AlertManager configs are appended, the user is responsible to make
>                 sure it is valid. Note that using this feature may expose the possibility
>                 to break upgrades of Prometheus. It is advised to review Prometheus
>                 release notes to ensure that no incompatible AlertManager configs
>                 are going to break Prometheus after the upgrade.'
>               properties:
>                 key:
>                   description: The key of the secret to select from.  Must be a valid
>                     secret key.
>                   type: string
>                 name:
>                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                     TODO: Add other useful fields. apiVersion, kind, uid?'
>                   type: string
>                 optional:
>                   description: Specify whether the Secret or its key must be defined
>                   type: boolean
>               required:
>               - key
>               type: object
>             additionalAlertRelabelConfigs:
>               description: 'AdditionalAlertRelabelConfigs allows specifying a key
>                 of a Secret containing additional Prometheus alert relabel configurations.
>                 Alert relabel configurations specified are appended to the configurations
>                 generated by the Prometheus Operator. Alert relabel configurations
>                 specified must have the form as specified in the official Prometheus
>                 documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs.
>                 As alert relabel configs are appended, the user is responsible to
>                 make sure it is valid. Note that using this feature may expose the
>                 possibility to break upgrades of Prometheus. It is advised to review
>                 Prometheus release notes to ensure that no incompatible alert relabel
>                 configs are going to break Prometheus after the upgrade.'
>               properties:
>                 key:
>                   description: The key of the secret to select from.  Must be a valid
>                     secret key.
>                   type: string
>                 name:
>                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                     TODO: Add other useful fields. apiVersion, kind, uid?'
>                   type: string
>                 optional:
>                   description: Specify whether the Secret or its key must be defined
>                   type: boolean
>               required:
>               - key
>               type: object
>             additionalScrapeConfigs:
>               description: 'AdditionalScrapeConfigs allows specifying a key of a Secret
>                 containing additional Prometheus scrape configurations. Scrape configurations
>                 specified are appended to the configurations generated by the Prometheus
>                 Operator. Job configurations specified must have the form as specified
>                 in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config.
>                 As scrape configs are appended, the user is responsible to make sure
>                 it is valid. Note that using this feature may expose the possibility
>                 to break upgrades of Prometheus. It is advised to review Prometheus
>                 release notes to ensure that no incompatible scrape configs are going
>                 to break Prometheus after the upgrade.'
>               properties:
>                 key:
>                   description: The key of the secret to select from.  Must be a valid
>                     secret key.
>                   type: string
>                 name:
>                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                     TODO: Add other useful fields. apiVersion, kind, uid?'
>                   type: string
>                 optional:
>                   description: Specify whether the Secret or its key must be defined
>                   type: boolean
>               required:
>               - key
>               type: object
>             affinity:
>               description: If specified, the pod's scheduling constraints.
>               properties:
>                 nodeAffinity:
>                   description: Describes node affinity scheduling rules for the pod.
>                   properties:
>                     preferredDuringSchedulingIgnoredDuringExecution:
>                       description: The scheduler will prefer to schedule pods to nodes
>                         that satisfy the affinity expressions specified by this field,
>                         but it may choose a node that violates one or more of the
>                         expressions. The node that is most preferred is the one with
>                         the greatest sum of weights, i.e. for each node that meets
>                         all of the scheduling requirements (resource request, requiredDuringScheduling
>                         affinity expressions, etc.), compute a sum by iterating through
>                         the elements of this field and adding "weight" to the sum
>                         if the node matches the corresponding matchExpressions; the
>                         node(s) with the highest sum are the most preferred.
>                       items:
>                         description: An empty preferred scheduling term matches all
>                           objects with implicit weight 0 (i.e. it's a no-op). A null
>                           preferred scheduling term matches no objects (i.e. is also
>                           a no-op).
>                         properties:
>                           preference:
>                             description: A node selector term, associated with the
>                               corresponding weight.
>                             properties:
>                               matchExpressions:
>                                 description: A list of node selector requirements
>                                   by node's labels.
>                                 items:
>                                   description: A node selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: The label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: Represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists, DoesNotExist. Gt, and Lt.
>                                       type: string
>                                     values:
>                                       description: An array of string values. If the
>                                         operator is In or NotIn, the values array
>                                         must be non-empty. If the operator is Exists
>                                         or DoesNotExist, the values array must be
>                                         empty. If the operator is Gt or Lt, the values
>                                         array must have a single element, which will
>                                         be interpreted as an integer. This array is
>                                         replaced during a strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                               matchFields:
>                                 description: A list of node selector requirements
>                                   by node's fields.
>                                 items:
>                                   description: A node selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: The label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: Represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists, DoesNotExist. Gt, and Lt.
>                                       type: string
>                                     values:
>                                       description: An array of string values. If the
>                                         operator is In or NotIn, the values array
>                                         must be non-empty. If the operator is Exists
>                                         or DoesNotExist, the values array must be
>                                         empty. If the operator is Gt or Lt, the values
>                                         array must have a single element, which will
>                                         be interpreted as an integer. This array is
>                                         replaced during a strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                             type: object
>                           weight:
>                             description: Weight associated with matching the corresponding
>                               nodeSelectorTerm, in the range 1-100.
>                             format: int32
>                             type: integer
>                         required:
>                         - preference
>                         - weight
>                         type: object
>                       type: array
>                     requiredDuringSchedulingIgnoredDuringExecution:
>                       description: If the affinity requirements specified by this
>                         field are not met at scheduling time, the pod will not be
>                         scheduled onto the node. If the affinity requirements specified
>                         by this field cease to be met at some point during pod execution
>                         (e.g. due to an update), the system may or may not try to
>                         eventually evict the pod from its node.
>                       properties:
>                         nodeSelectorTerms:
>                           description: Required. A list of node selector terms. The
>                             terms are ORed.
>                           items:
>                             description: A null or empty node selector term matches
>                               no objects. The requirements of them are ANDed. The
>                               TopologySelectorTerm type implements a subset of the
>                               NodeSelectorTerm.
>                             properties:
>                               matchExpressions:
>                                 description: A list of node selector requirements
>                                   by node's labels.
>                                 items:
>                                   description: A node selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: The label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: Represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists, DoesNotExist. Gt, and Lt.
>                                       type: string
>                                     values:
>                                       description: An array of string values. If the
>                                         operator is In or NotIn, the values array
>                                         must be non-empty. If the operator is Exists
>                                         or DoesNotExist, the values array must be
>                                         empty. If the operator is Gt or Lt, the values
>                                         array must have a single element, which will
>                                         be interpreted as an integer. This array is
>                                         replaced during a strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                               matchFields:
>                                 description: A list of node selector requirements
>                                   by node's fields.
>                                 items:
>                                   description: A node selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: The label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: Represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists, DoesNotExist. Gt, and Lt.
>                                       type: string
>                                     values:
>                                       description: An array of string values. If the
>                                         operator is In or NotIn, the values array
>                                         must be non-empty. If the operator is Exists
>                                         or DoesNotExist, the values array must be
>                                         empty. If the operator is Gt or Lt, the values
>                                         array must have a single element, which will
>                                         be interpreted as an integer. This array is
>                                         replaced during a strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                             type: object
>                           type: array
>                       required:
>                       - nodeSelectorTerms
>                       type: object
>                   type: object
>                 podAffinity:
>                   description: Describes pod affinity scheduling rules (e.g. co-locate
>                     this pod in the same node, zone, etc. as some other pod(s)).
>                   properties:
>                     preferredDuringSchedulingIgnoredDuringExecution:
>                       description: The scheduler will prefer to schedule pods to nodes
>                         that satisfy the affinity expressions specified by this field,
>                         but it may choose a node that violates one or more of the
>                         expressions. The node that is most preferred is the one with
>                         the greatest sum of weights, i.e. for each node that meets
>                         all of the scheduling requirements (resource request, requiredDuringScheduling
>                         affinity expressions, etc.), compute a sum by iterating through
>                         the elements of this field and adding "weight" to the sum
>                         if the node has pods which matches the corresponding podAffinityTerm;
>                         the node(s) with the highest sum are the most preferred.
>                       items:
>                         description: The weights of all of the matched WeightedPodAffinityTerm
>                           fields are added per-node to find the most preferred node(s)
>                         properties:
>                           podAffinityTerm:
>                             description: Required. A pod affinity term, associated
>                               with the corresponding weight.
>                             properties:
>                               labelSelector:
>                                 description: A label query over a set of resources,
>                                   in this case pods.
>                                 properties:
>                                   matchExpressions:
>                                     description: matchExpressions is a list of label
>                                       selector requirements. The requirements are
>                                       ANDed.
>                                     items:
>                                       description: A label selector requirement is
>                                         a selector that contains values, a key, and
>                                         an operator that relates the key and values.
>                                       properties:
>                                         key:
>                                           description: key is the label key that the
>                                             selector applies to.
>                                           type: string
>                                         operator:
>                                           description: operator represents a key's
>                                             relationship to a set of values. Valid
>                                             operators are In, NotIn, Exists and DoesNotExist.
>                                           type: string
>                                         values:
>                                           description: values is an array of string
>                                             values. If the operator is In or NotIn,
>                                             the values array must be non-empty. If
>                                             the operator is Exists or DoesNotExist,
>                                             the values array must be empty. This array
>                                             is replaced during a strategic merge patch.
>                                           items:
>                                             type: string
>                                           type: array
>                                       required:
>                                       - key
>                                       - operator
>                                       type: object
>                                     type: array
>                                   matchLabels:
>                                     additionalProperties:
>                                       type: string
>                                     description: matchLabels is a map of {key,value}
>                                       pairs. A single {key,value} in the matchLabels
>                                       map is equivalent to an element of matchExpressions,
>                                       whose key field is "key", the operator is "In",
>                                       and the values array contains only "value".
>                                       The requirements are ANDed.
>                                     type: object
>                                 type: object
>                               namespaces:
>                                 description: namespaces specifies which namespaces
>                                   the labelSelector applies to (matches against);
>                                   null or empty list means "this pod's namespace"
>                                 items:
>                                   type: string
>                                 type: array
>                               topologyKey:
>                                 description: This pod should be co-located (affinity)
>                                   or not co-located (anti-affinity) with the pods
>                                   matching the labelSelector in the specified namespaces,
>                                   where co-located is defined as running on a node
>                                   whose value of the label with key topologyKey matches
>                                   that of any node on which any of the selected pods
>                                   is running. Empty topologyKey is not allowed.
>                                 type: string
>                             required:
>                             - topologyKey
>                             type: object
>                           weight:
>                             description: weight associated with matching the corresponding
>                               podAffinityTerm, in the range 1-100.
>                             format: int32
>                             type: integer
>                         required:
>                         - podAffinityTerm
>                         - weight
>                         type: object
>                       type: array
>                     requiredDuringSchedulingIgnoredDuringExecution:
>                       description: If the affinity requirements specified by this
>                         field are not met at scheduling time, the pod will not be
>                         scheduled onto the node. If the affinity requirements specified
>                         by this field cease to be met at some point during pod execution
>                         (e.g. due to a pod label update), the system may or may not
>                         try to eventually evict the pod from its node. When there
>                         are multiple elements, the lists of nodes corresponding to
>                         each podAffinityTerm are intersected, i.e. all terms must
>                         be satisfied.
>                       items:
>                         description: Defines a set of pods (namely those matching
>                           the labelSelector relative to the given namespace(s)) that
>                           this pod should be co-located (affinity) or not co-located
>                           (anti-affinity) with, where co-located is defined as running
>                           on a node whose value of the label with key <topologyKey>
>                           matches that of any node on which a pod of the set of pods
>                           is running
>                         properties:
>                           labelSelector:
>                             description: A label query over a set of resources, in
>                               this case pods.
>                             properties:
>                               matchExpressions:
>                                 description: matchExpressions is a list of label selector
>                                   requirements. The requirements are ANDed.
>                                 items:
>                                   description: A label selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: key is the label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: operator represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists and DoesNotExist.
>                                       type: string
>                                     values:
>                                       description: values is an array of string values.
>                                         If the operator is In or NotIn, the values
>                                         array must be non-empty. If the operator is
>                                         Exists or DoesNotExist, the values array must
>                                         be empty. This array is replaced during a
>                                         strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                               matchLabels:
>                                 additionalProperties:
>                                   type: string
>                                 description: matchLabels is a map of {key,value} pairs.
>                                   A single {key,value} in the matchLabels map is equivalent
>                                   to an element of matchExpressions, whose key field
>                                   is "key", the operator is "In", and the values array
>                                   contains only "value". The requirements are ANDed.
>                                 type: object
>                             type: object
>                           namespaces:
>                             description: namespaces specifies which namespaces the
>                               labelSelector applies to (matches against); null or
>                               empty list means "this pod's namespace"
>                             items:
>                               type: string
>                             type: array
>                           topologyKey:
>                             description: This pod should be co-located (affinity)
>                               or not co-located (anti-affinity) with the pods matching
>                               the labelSelector in the specified namespaces, where
>                               co-located is defined as running on a node whose value
>                               of the label with key topologyKey matches that of any
>                               node on which any of the selected pods is running. Empty
>                               topologyKey is not allowed.
>                             type: string
>                         required:
>                         - topologyKey
>                         type: object
>                       type: array
>                   type: object
>                 podAntiAffinity:
>                   description: Describes pod anti-affinity scheduling rules (e.g.
>                     avoid putting this pod in the same node, zone, etc. as some other
>                     pod(s)).
>                   properties:
>                     preferredDuringSchedulingIgnoredDuringExecution:
>                       description: The scheduler will prefer to schedule pods to nodes
>                         that satisfy the anti-affinity expressions specified by this
>                         field, but it may choose a node that violates one or more
>                         of the expressions. The node that is most preferred is the
>                         one with the greatest sum of weights, i.e. for each node that
>                         meets all of the scheduling requirements (resource request,
>                         requiredDuringScheduling anti-affinity expressions, etc.),
>                         compute a sum by iterating through the elements of this field
>                         and adding "weight" to the sum if the node has pods which
>                         matches the corresponding podAffinityTerm; the node(s) with
>                         the highest sum are the most preferred.
>                       items:
>                         description: The weights of all of the matched WeightedPodAffinityTerm
>                           fields are added per-node to find the most preferred node(s)
>                         properties:
>                           podAffinityTerm:
>                             description: Required. A pod affinity term, associated
>                               with the corresponding weight.
>                             properties:
>                               labelSelector:
>                                 description: A label query over a set of resources,
>                                   in this case pods.
>                                 properties:
>                                   matchExpressions:
>                                     description: matchExpressions is a list of label
>                                       selector requirements. The requirements are
>                                       ANDed.
>                                     items:
>                                       description: A label selector requirement is
>                                         a selector that contains values, a key, and
>                                         an operator that relates the key and values.
>                                       properties:
>                                         key:
>                                           description: key is the label key that the
>                                             selector applies to.
>                                           type: string
>                                         operator:
>                                           description: operator represents a key's
>                                             relationship to a set of values. Valid
>                                             operators are In, NotIn, Exists and DoesNotExist.
>                                           type: string
>                                         values:
>                                           description: values is an array of string
>                                             values. If the operator is In or NotIn,
>                                             the values array must be non-empty. If
>                                             the operator is Exists or DoesNotExist,
>                                             the values array must be empty. This array
>                                             is replaced during a strategic merge patch.
>                                           items:
>                                             type: string
>                                           type: array
>                                       required:
>                                       - key
>                                       - operator
>                                       type: object
>                                     type: array
>                                   matchLabels:
>                                     additionalProperties:
>                                       type: string
>                                     description: matchLabels is a map of {key,value}
>                                       pairs. A single {key,value} in the matchLabels
>                                       map is equivalent to an element of matchExpressions,
>                                       whose key field is "key", the operator is "In",
>                                       and the values array contains only "value".
>                                       The requirements are ANDed.
>                                     type: object
>                                 type: object
>                               namespaces:
>                                 description: namespaces specifies which namespaces
>                                   the labelSelector applies to (matches against);
>                                   null or empty list means "this pod's namespace"
>                                 items:
>                                   type: string
>                                 type: array
>                               topologyKey:
>                                 description: This pod should be co-located (affinity)
>                                   or not co-located (anti-affinity) with the pods
>                                   matching the labelSelector in the specified namespaces,
>                                   where co-located is defined as running on a node
>                                   whose value of the label with key topologyKey matches
>                                   that of any node on which any of the selected pods
>                                   is running. Empty topologyKey is not allowed.
>                                 type: string
>                             required:
>                             - topologyKey
>                             type: object
>                           weight:
>                             description: weight associated with matching the corresponding
>                               podAffinityTerm, in the range 1-100.
>                             format: int32
>                             type: integer
>                         required:
>                         - podAffinityTerm
>                         - weight
>                         type: object
>                       type: array
>                     requiredDuringSchedulingIgnoredDuringExecution:
>                       description: If the anti-affinity requirements specified by
>                         this field are not met at scheduling time, the pod will not
>                         be scheduled onto the node. If the anti-affinity requirements
>                         specified by this field cease to be met at some point during
>                         pod execution (e.g. due to a pod label update), the system
>                         may or may not try to eventually evict the pod from its node.
>                         When there are multiple elements, the lists of nodes corresponding
>                         to each podAffinityTerm are intersected, i.e. all terms must
>                         be satisfied.
>                       items:
>                         description: Defines a set of pods (namely those matching
>                           the labelSelector relative to the given namespace(s)) that
>                           this pod should be co-located (affinity) or not co-located
>                           (anti-affinity) with, where co-located is defined as running
>                           on a node whose value of the label with key <topologyKey>
>                           matches that of any node on which a pod of the set of pods
>                           is running
>                         properties:
>                           labelSelector:
>                             description: A label query over a set of resources, in
>                               this case pods.
>                             properties:
>                               matchExpressions:
>                                 description: matchExpressions is a list of label selector
>                                   requirements. The requirements are ANDed.
>                                 items:
>                                   description: A label selector requirement is a selector
>                                     that contains values, a key, and an operator that
>                                     relates the key and values.
>                                   properties:
>                                     key:
>                                       description: key is the label key that the selector
>                                         applies to.
>                                       type: string
>                                     operator:
>                                       description: operator represents a key's relationship
>                                         to a set of values. Valid operators are In,
>                                         NotIn, Exists and DoesNotExist.
>                                       type: string
>                                     values:
>                                       description: values is an array of string values.
>                                         If the operator is In or NotIn, the values
>                                         array must be non-empty. If the operator is
>                                         Exists or DoesNotExist, the values array must
>                                         be empty. This array is replaced during a
>                                         strategic merge patch.
>                                       items:
>                                         type: string
>                                       type: array
>                                   required:
>                                   - key
>                                   - operator
>                                   type: object
>                                 type: array
>                               matchLabels:
>                                 additionalProperties:
>                                   type: string
>                                 description: matchLabels is a map of {key,value} pairs.
>                                   A single {key,value} in the matchLabels map is equivalent
>                                   to an element of matchExpressions, whose key field
>                                   is "key", the operator is "In", and the values array
>                                   contains only "value". The requirements are ANDed.
>                                 type: object
>                             type: object
>                           namespaces:
>                             description: namespaces specifies which namespaces the
>                               labelSelector applies to (matches against); null or
>                               empty list means "this pod's namespace"
>                             items:
>                               type: string
>                             type: array
>                           topologyKey:
>                             description: This pod should be co-located (affinity)
>                               or not co-located (anti-affinity) with the pods matching
>                               the labelSelector in the specified namespaces, where
>                               co-located is defined as running on a node whose value
>                               of the label with key topologyKey matches that of any
>                               node on which any of the selected pods is running. Empty
>                               topologyKey is not allowed.
>                             type: string
>                         required:
>                         - topologyKey
>                         type: object
>                       type: array
>                   type: object
>               type: object
>             alerting:
>               description: Define details regarding alerting.
>               properties:
>                 alertmanagers:
>                   description: AlertmanagerEndpoints Prometheus should fire alerts
>                     against.
>                   items:
>                     description: AlertmanagerEndpoints defines a selection of a single
>                       Endpoints object containing alertmanager IPs to fire alerts
>                       against.
>                     properties:
>                       apiVersion:
>                         description: Version of the Alertmanager API that Prometheus
>                           uses to send alerts. It can be "v1" or "v2".
>                         type: string
>                       bearerTokenFile:
>                         description: BearerTokenFile to read from filesystem to use
>                           when authenticating to Alertmanager.
>                         type: string
>                       name:
>                         description: Name of Endpoints object in Namespace.
>                         type: string
>                       namespace:
>                         description: Namespace of Endpoints object.
>                         type: string
>                       pathPrefix:
>                         description: Prefix for the HTTP path alerts are pushed to.
>                         type: string
>                       port:
>                         anyOf:
>                         - type: integer
>                         - type: string
>                         description: Port the Alertmanager API is exposed on.
>                         x-kubernetes-int-or-string: true
>                       scheme:
>                         description: Scheme to use when firing alerts.
>                         type: string
>                       tlsConfig:
>                         description: TLS Config to use for alertmanager connection.
>                         properties:
>                           ca:
>                             description: Stuct containing the CA cert to use for the
>                               targets.
>                             properties:
>                               configMap:
>                                 description: ConfigMap containing data to use for
>                                   the targets.
>                                 properties:
>                                   key:
>                                     description: The key to select.
>                                     type: string
>                                   name:
>                                     description: 'Name of the referent. More info:
>                                       https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                       TODO: Add other useful fields. apiVersion, kind,
>                                       uid?'
>                                     type: string
>                                   optional:
>                                     description: Specify whether the ConfigMap or
>                                       its key must be defined
>                                     type: boolean
>                                 required:
>                                 - key
>                                 type: object
>                               secret:
>                                 description: Secret containing data to use for the
>                                   targets.
>                                 properties:
>                                   key:
>                                     description: The key of the secret to select from.  Must
>                                       be a valid secret key.
>                                     type: string
>                                   name:
>                                     description: 'Name of the referent. More info:
>                                       https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                       TODO: Add other useful fields. apiVersion, kind,
>                                       uid?'
>                                     type: string
>                                   optional:
>                                     description: Specify whether the Secret or its
>                                       key must be defined
>                                     type: boolean
>                                 required:
>                                 - key
>                                 type: object
>                             type: object
>                           caFile:
>                             description: Path to the CA cert in the Prometheus container
>                               to use for the targets.
>                             type: string
>                           cert:
>                             description: Struct containing the client cert file for
>                               the targets.
>                             properties:
>                               configMap:
>                                 description: ConfigMap containing data to use for
>                                   the targets.
>                                 properties:
>                                   key:
>                                     description: The key to select.
>                                     type: string
>                                   name:
>                                     description: 'Name of the referent. More info:
>                                       https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                       TODO: Add other useful fields. apiVersion, kind,
>                                       uid?'
>                                     type: string
>                                   optional:
>                                     description: Specify whether the ConfigMap or
>                                       its key must be defined
>                                     type: boolean
>                                 required:
>                                 - key
>                                 type: object
>                               secret:
>                                 description: Secret containing data to use for the
>                                   targets.
>                                 properties:
>                                   key:
>                                     description: The key of the secret to select from.  Must
>                                       be a valid secret key.
>                                     type: string
>                                   name:
>                                     description: 'Name of the referent. More info:
>                                       https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                       TODO: Add other useful fields. apiVersion, kind,
>                                       uid?'
>                                     type: string
>                                   optional:
>                                     description: Specify whether the Secret or its
>                                       key must be defined
>                                     type: boolean
>                                 required:
>                                 - key
>                                 type: object
>                             type: object
>                           certFile:
>                             description: Path to the client cert file in the Prometheus
>                               container for the targets.
>                             type: string
>                           insecureSkipVerify:
>                             description: Disable target certificate validation.
>                             type: boolean
>                           keyFile:
>                             description: Path to the client key file in the Prometheus
>                               container for the targets.
>                             type: string
>                           keySecret:
>                             description: Secret containing the client key file for
>                               the targets.
>                             properties:
>                               key:
>                                 description: The key of the secret to select from.  Must
>                                   be a valid secret key.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the Secret or its key
>                                   must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                           serverName:
>                             description: Used to verify the hostname for the targets.
>                             type: string
>                         type: object
>                     required:
>                     - name
>                     - namespace
>                     - port
>                     type: object
>                   type: array
>               required:
>               - alertmanagers
>               type: object
>             apiserverConfig:
>               description: APIServerConfig allows specifying a host and auth methods
>                 to access apiserver. If left empty, Prometheus is assumed to run inside
>                 of the cluster and will discover API servers automatically and use
>                 the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.
>               properties:
>                 basicAuth:
>                   description: BasicAuth allow an endpoint to authenticate over basic
>                     authentication
>                   properties:
>                     password:
>                       description: The secret in the service monitor namespace that
>                         contains the password for authentication.
>                       properties:
>                         key:
>                           description: The key of the secret to select from.  Must
>                             be a valid secret key.
>                           type: string
>                         name:
>                           description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                             TODO: Add other useful fields. apiVersion, kind, uid?'
>                           type: string
>                         optional:
>                           description: Specify whether the Secret or its key must
>                             be defined
>                           type: boolean
>                       required:
>                       - key
>                       type: object
>                     username:
>                       description: The secret in the service monitor namespace that
>                         contains the username for authentication.
>                       properties:
>                         key:
>                           description: The key of the secret to select from.  Must
>                             be a valid secret key.
>                           type: string
>                         name:
>                           description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                             TODO: Add other useful fields. apiVersion, kind, uid?'
>                           type: string
>                         optional:
>                           description: Specify whether the Secret or its key must
>                             be defined
>                           type: boolean
>                       required:
>                       - key
>                       type: object
>                   type: object
>                 bearerToken:
>                   description: Bearer token for accessing apiserver.
>                   type: string
>                 bearerTokenFile:
>                   description: File to read bearer token for accessing apiserver.
>                   type: string
>                 host:
>                   description: Host of apiserver. A valid string consisting of a hostname
>                     or IP followed by an optional port number
>                   type: string
>                 tlsConfig:
>                   description: TLS Config to use for accessing apiserver.
>                   properties:
>                     ca:
>                       description: Stuct containing the CA cert to use for the targets.
>                       properties:
>                         configMap:
>                           description: ConfigMap containing data to use for the targets.
>                           properties:
>                             key:
>                               description: The key to select.
>                               type: string
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the ConfigMap or its key
>                                 must be defined
>                               type: boolean
>                           required:
>                           - key
>                           type: object
>                         secret:
>                           description: Secret containing data to use for the targets.
>                           properties:
>                             key:
>                               description: The key of the secret to select from.  Must
>                                 be a valid secret key.
>                               type: string
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the Secret or its key must
>                                 be defined
>                               type: boolean
>                           required:
>                           - key
>                           type: object
>                       type: object
>                     caFile:
>                       description: Path to the CA cert in the Prometheus container
>                         to use for the targets.
>                       type: string
>                     cert:
>                       description: Struct containing the client cert file for the
>                         targets.
>                       properties:
>                         configMap:
>                           description: ConfigMap containing data to use for the targets.
>                           properties:
>                             key:
>                               description: The key to select.
>                               type: string
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the ConfigMap or its key
>                                 must be defined
>                               type: boolean
>                           required:
>                           - key
>                           type: object
>                         secret:
>                           description: Secret containing data to use for the targets.
>                           properties:
>                             key:
>                               description: The key of the secret to select from.  Must
>                                 be a valid secret key.
>                               type: string
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the Secret or its key must
>                                 be defined
>                               type: boolean
>                           required:
>                           - key
>                           type: object
>                       type: object
>                     certFile:
>                       description: Path to the client cert file in the Prometheus
>                         container for the targets.
>                       type: string
>                     insecureSkipVerify:
>                       description: Disable target certificate validation.
>                       type: boolean
>                     keyFile:
>                       description: Path to the client key file in the Prometheus container
>                         for the targets.
>                       type: string
>                     keySecret:
>                       description: Secret containing the client key file for the targets.
>                       properties:
>                         key:
>                           description: The key of the secret to select from.  Must
>                             be a valid secret key.
>                           type: string
>                         name:
>                           description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                             TODO: Add other useful fields. apiVersion, kind, uid?'
>                           type: string
>                         optional:
>                           description: Specify whether the Secret or its key must
>                             be defined
>                           type: boolean
>                       required:
>                       - key
>                       type: object
>                     serverName:
>                       description: Used to verify the hostname for the targets.
>                       type: string
>                   type: object
>               required:
>               - host
>               type: object
>             arbitraryFSAccessThroughSMs:
>               description: ArbitraryFSAccessThroughSMs configures whether configuration
>                 based on a service monitor can access arbitrary files on the file
>                 system of the Prometheus container e.g. bearer token files.
>               properties:
>                 deny:
>                   type: boolean
>               type: object
>             baseImage:
>               description: Base image to use for a Prometheus deployment.
>               type: string
>             configMaps:
>               description: ConfigMaps is a list of ConfigMaps in the same namespace
>                 as the Prometheus object, which shall be mounted into the Prometheus
>                 Pods. The ConfigMaps are mounted into /etc/prometheus/configmaps/<configmap-name>.
>               items:
>                 type: string
>               type: array
>             containers:
>               description: 'Containers allows injecting additional containers or modifying
>                 operator generated containers. This can be used to allow adding an
>                 authentication proxy to a Prometheus pod or to change the behavior
>                 of an operator generated container. Containers described here modify
>                 an operator generated container if they share the same name and modifications
>                 are done via a strategic merge patch. The current container names
>                 are: `prometheus`, `prometheus-config-reloader`, `rules-configmap-reloader`,
>                 and `thanos-sidecar`. Overriding containers is entirely outside the
>                 scope of what the maintainers will support and by doing so, you accept
>                 that this behaviour may break at any time without notice.'
>               items:
>                 description: A single application container that you want to run within
>                   a pod.
>                 properties:
>                   args:
>                     description: 'Arguments to the entrypoint. The docker image''s
>                       CMD is used if this is not provided. Variable references $(VAR_NAME)
>                       are expanded using the container''s environment. If a variable
>                       cannot be resolved, the reference in the input string will be
>                       unchanged. The $(VAR_NAME) syntax can be escaped with a double
>                       $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
>                       regardless of whether the variable exists or not. Cannot be
>                       updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   command:
>                     description: 'Entrypoint array. Not executed within a shell. The
>                       docker image''s ENTRYPOINT is used if this is not provided.
>                       Variable references $(VAR_NAME) are expanded using the container''s
>                       environment. If a variable cannot be resolved, the reference
>                       in the input string will be unchanged. The $(VAR_NAME) syntax
>                       can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                       will never be expanded, regardless of whether the variable exists
>                       or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   env:
>                     description: List of environment variables to set in the container.
>                       Cannot be updated.
>                     items:
>                       description: EnvVar represents an environment variable present
>                         in a Container.
>                       properties:
>                         name:
>                           description: Name of the environment variable. Must be a
>                             C_IDENTIFIER.
>                           type: string
>                         value:
>                           description: 'Variable references $(VAR_NAME) are expanded
>                             using the previous defined environment variables in the
>                             container and any service environment variables. If a
>                             variable cannot be resolved, the reference in the input
>                             string will be unchanged. The $(VAR_NAME) syntax can be
>                             escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                             will never be expanded, regardless of whether the variable
>                             exists or not. Defaults to "".'
>                           type: string
>                         valueFrom:
>                           description: Source for the environment variable's value.
>                             Cannot be used if value is not empty.
>                           properties:
>                             configMapKeyRef:
>                               description: Selects a key of a ConfigMap.
>                               properties:
>                                 key:
>                                   description: The key to select.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the ConfigMap or its
>                                     key must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                             fieldRef:
>                               description: 'Selects a field of the pod: supports metadata.name,
>                                 metadata.namespace, metadata.labels, metadata.annotations,
>                                 spec.nodeName, spec.serviceAccountName, status.hostIP,
>                                 status.podIP.'
>                               properties:
>                                 apiVersion:
>                                   description: Version of the schema the FieldPath
>                                     is written in terms of, defaults to "v1".
>                                   type: string
>                                 fieldPath:
>                                   description: Path of the field to select in the
>                                     specified API version.
>                                   type: string
>                               required:
>                               - fieldPath
>                               type: object
>                             resourceFieldRef:
>                               description: 'Selects a resource of the container: only
>                                 resources limits and requests (limits.cpu, limits.memory,
>                                 limits.ephemeral-storage, requests.cpu, requests.memory
>                                 and requests.ephemeral-storage) are currently supported.'
>                               properties:
>                                 containerName:
>                                   description: 'Container name: required for volumes,
>                                     optional for env vars'
>                                   type: string
>                                 divisor:
>                                   description: Specifies the output format of the
>                                     exposed resources, defaults to "1"
>                                   type: string
>                                 resource:
>                                   description: 'Required: resource to select'
>                                   type: string
>                               required:
>                               - resource
>                               type: object
>                             secretKeyRef:
>                               description: Selects a key of a secret in the pod's
>                                 namespace
>                               properties:
>                                 key:
>                                   description: The key of the secret to select from.  Must
>                                     be a valid secret key.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the Secret or its key
>                                     must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                           type: object
>                       required:
>                       - name
>                       type: object
>                     type: array
>                   envFrom:
>                     description: List of sources to populate environment variables
>                       in the container. The keys defined within a source must be a
>                       C_IDENTIFIER. All invalid keys will be reported as an event
>                       when the container is starting. When a key exists in multiple
>                       sources, the value associated with the last source will take
>                       precedence. Values defined by an Env with a duplicate key will
>                       take precedence. Cannot be updated.
>                     items:
>                       description: EnvFromSource represents the source of a set of
>                         ConfigMaps
>                       properties:
>                         configMapRef:
>                           description: The ConfigMap to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the ConfigMap must be defined
>                               type: boolean
>                           type: object
>                         prefix:
>                           description: An optional identifier to prepend to each key
>                             in the ConfigMap. Must be a C_IDENTIFIER.
>                           type: string
>                         secretRef:
>                           description: The Secret to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the Secret must be defined
>                               type: boolean
>                           type: object
>                       type: object
>                     type: array
>                   image:
>                     description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
>                       This field is optional to allow higher level config management
>                       to default or override container images in workload controllers
>                       like Deployments and StatefulSets.'
>                     type: string
>                   imagePullPolicy:
>                     description: 'Image pull policy. One of Always, Never, IfNotPresent.
>                       Defaults to Always if :latest tag is specified, or IfNotPresent
>                       otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
>                     type: string
>                   lifecycle:
>                     description: Actions that the management system should take in
>                       response to container lifecycle events. Cannot be updated.
>                     properties:
>                       postStart:
>                         description: 'PostStart is called immediately after a container
>                           is created. If the handler fails, the container is terminated
>                           and restarted according to its restart policy. Other management
>                           of the container blocks until the hook completes. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                       preStop:
>                         description: 'PreStop is called immediately before a container
>                           is terminated due to an API request or management event
>                           such as liveness/startup probe failure, preemption, resource
>                           contention, etc. The handler is not called if the container
>                           crashes or exits. The reason for termination is passed to
>                           the handler. The Pod''s termination grace period countdown
>                           begins before the PreStop hooked is executed. Regardless
>                           of the outcome of the handler, the container will eventually
>                           terminate within the Pod''s termination grace period. Other
>                           management of the container blocks until the hook completes
>                           or until the termination grace period is reached. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                     type: object
>                   livenessProbe:
>                     description: 'Periodic probe of container liveness. Container
>                       will be restarted if the probe fails. Cannot be updated. More
>                       info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   name:
>                     description: Name of the container specified as a DNS_LABEL. Each
>                       container in a pod must have a unique name (DNS_LABEL). Cannot
>                       be updated.
>                     type: string
>                   ports:
>                     description: List of ports to expose from the container. Exposing
>                       a port here gives the system additional information about the
>                       network connections a container uses, but is primarily informational.
>                       Not specifying a port here DOES NOT prevent that port from being
>                       exposed. Any port which is listening on the default "0.0.0.0"
>                       address inside a container will be accessible from the network.
>                       Cannot be updated.
>                     items:
>                       description: ContainerPort represents a network port in a single
>                         container.
>                       properties:
>                         containerPort:
>                           description: Number of port to expose on the pod's IP address.
>                             This must be a valid port number, 0 < x < 65536.
>                           format: int32
>                           type: integer
>                         hostIP:
>                           description: What host IP to bind the external port to.
>                           type: string
>                         hostPort:
>                           description: Number of port to expose on the host. If specified,
>                             this must be a valid port number, 0 < x < 65536. If HostNetwork
>                             is specified, this must match ContainerPort. Most containers
>                             do not need this.
>                           format: int32
>                           type: integer
>                         name:
>                           description: If specified, this must be an IANA_SVC_NAME
>                             and unique within the pod. Each named port in a pod must
>                             have a unique name. Name for the port that can be referred
>                             to by services.
>                           type: string
>                         protocol:
>                           description: Protocol for port. Must be UDP, TCP, or SCTP.
>                             Defaults to "TCP".
>                           type: string
>                       required:
>                       - containerPort
>                       type: object
>                     type: array
>                   readinessProbe:
>                     description: 'Periodic probe of container service readiness. Container
>                       will be removed from service endpoints if the probe fails. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   resources:
>                     description: 'Compute Resources required by this container. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                     properties:
>                       limits:
>                         additionalProperties:
>                           type: string
>                         description: 'Limits describes the maximum amount of compute
>                           resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                       requests:
>                         additionalProperties:
>                           type: string
>                         description: 'Requests describes the minimum amount of compute
>                           resources required. If Requests is omitted for a container,
>                           it defaults to Limits if that is explicitly specified, otherwise
>                           to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                     type: object
>                   securityContext:
>                     description: 'Security options the pod should run with. More info:
>                       https://kubernetes.io/docs/concepts/policy/security-context/
>                       More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
>                     properties:
>                       allowPrivilegeEscalation:
>                         description: 'AllowPrivilegeEscalation controls whether a
>                           process can gain more privileges than its parent process.
>                           This bool directly controls if the no_new_privs flag will
>                           be set on the container process. AllowPrivilegeEscalation
>                           is true always when the container is: 1) run as Privileged
>                           2) has CAP_SYS_ADMIN'
>                         type: boolean
>                       capabilities:
>                         description: The capabilities to add/drop when running containers.
>                           Defaults to the default set of capabilities granted by the
>                           container runtime.
>                         properties:
>                           add:
>                             description: Added capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                           drop:
>                             description: Removed capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                         type: object
>                       privileged:
>                         description: Run container in privileged mode. Processes in
>                           privileged containers are essentially equivalent to root
>                           on the host. Defaults to false.
>                         type: boolean
>                       procMount:
>                         description: procMount denotes the type of proc mount to use
>                           for the containers. The default is DefaultProcMount which
>                           uses the container runtime defaults for readonly paths and
>                           masked paths. This requires the ProcMountType feature flag
>                           to be enabled.
>                         type: string
>                       readOnlyRootFilesystem:
>                         description: Whether this container has a read-only root filesystem.
>                           Default is false.
>                         type: boolean
>                       runAsGroup:
>                         description: The GID to run the entrypoint of the container
>                           process. Uses runtime default if unset. May also be set
>                           in PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         format: int64
>                         type: integer
>                       runAsNonRoot:
>                         description: Indicates that the container must run as a non-root
>                           user. If true, the Kubelet will validate the image at runtime
>                           to ensure that it does not run as UID 0 (root) and fail
>                           to start the container if it does. If unset or false, no
>                           such validation will be performed. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         type: boolean
>                       runAsUser:
>                         description: The UID to run the entrypoint of the container
>                           process. Defaults to user specified in image metadata if
>                           unspecified. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         format: int64
>                         type: integer
>                       seLinuxOptions:
>                         description: The SELinux context to be applied to the container.
>                           If unspecified, the container runtime will allocate a random
>                           SELinux context for each container.  May also be set in
>                           PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         properties:
>                           level:
>                             description: Level is SELinux level label that applies
>                               to the container.
>                             type: string
>                           role:
>                             description: Role is a SELinux role label that applies
>                               to the container.
>                             type: string
>                           type:
>                             description: Type is a SELinux type label that applies
>                               to the container.
>                             type: string
>                           user:
>                             description: User is a SELinux user label that applies
>                               to the container.
>                             type: string
>                         type: object
>                       windowsOptions:
>                         description: The Windows specific settings applied to all
>                           containers. If unspecified, the options from the PodSecurityContext
>                           will be used. If set in both SecurityContext and PodSecurityContext,
>                           the value specified in SecurityContext takes precedence.
>                         properties:
>                           gmsaCredentialSpec:
>                             description: GMSACredentialSpec is where the GMSA admission
>                               webhook (https://github.com/kubernetes-sigs/windows-gmsa)
>                               inlines the contents of the GMSA credential spec named
>                               by the GMSACredentialSpecName field. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           gmsaCredentialSpecName:
>                             description: GMSACredentialSpecName is the name of the
>                               GMSA credential spec to use. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           runAsUserName:
>                             description: The UserName in Windows to run the entrypoint
>                               of the container process. Defaults to the user specified
>                               in image metadata if unspecified. May also be set in
>                               PodSecurityContext. If set in both SecurityContext and
>                               PodSecurityContext, the value specified in SecurityContext
>                               takes precedence. This field is alpha-level and it is
>                               only honored by servers that enable the WindowsRunAsUserName
>                               feature flag.
>                             type: string
>                         type: object
>                     type: object
>                   startupProbe:
>                     description: 'StartupProbe indicates that the Pod has successfully
>                       initialized. If specified, no other probes are executed until
>                       this completes successfully. If this probe fails, the Pod will
>                       be restarted, just as if the livenessProbe failed. This can
>                       be used to provide different probe parameters at the beginning
>                       of a Pod''s lifecycle, when it might take a long time to load
>                       data or warm a cache, than during steady-state operation. This
>                       cannot be updated. This is an alpha feature enabled by the StartupProbe
>                       feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   stdin:
>                     description: Whether this container should allocate a buffer for
>                       stdin in the container runtime. If this is not set, reads from
>                       stdin in the container will always result in EOF. Default is
>                       false.
>                     type: boolean
>                   stdinOnce:
>                     description: Whether the container runtime should close the stdin
>                       channel after it has been opened by a single attach. When stdin
>                       is true the stdin stream will remain open across multiple attach
>                       sessions. If stdinOnce is set to true, stdin is opened on container
>                       start, is empty until the first client attaches to stdin, and
>                       then remains open and accepts data until the client disconnects,
>                       at which time stdin is closed and remains closed until the container
>                       is restarted. If this flag is false, a container processes that
>                       reads from stdin will never receive an EOF. Default is false
>                     type: boolean
>                   terminationMessagePath:
>                     description: 'Optional: Path at which the file to which the container''s
>                       termination message will be written is mounted into the container''s
>                       filesystem. Message written is intended to be brief final status,
>                       such as an assertion failure message. Will be truncated by the
>                       node if greater than 4096 bytes. The total message length across
>                       all containers will be limited to 12kb. Defaults to /dev/termination-log.
>                       Cannot be updated.'
>                     type: string
>                   terminationMessagePolicy:
>                     description: Indicate how the termination message should be populated.
>                       File will use the contents of terminationMessagePath to populate
>                       the container status message on both success and failure. FallbackToLogsOnError
>                       will use the last chunk of container log output if the termination
>                       message file is empty and the container exited with an error.
>                       The log output is limited to 2048 bytes or 80 lines, whichever
>                       is smaller. Defaults to File. Cannot be updated.
>                     type: string
>                   tty:
>                     description: Whether this container should allocate a TTY for
>                       itself, also requires 'stdin' to be true. Default is false.
>                     type: boolean
>                   volumeDevices:
>                     description: volumeDevices is the list of block devices to be
>                       used by the container. This is a beta feature.
>                     items:
>                       description: volumeDevice describes a mapping of a raw block
>                         device within a container.
>                       properties:
>                         devicePath:
>                           description: devicePath is the path inside of the container
>                             that the device will be mapped to.
>                           type: string
>                         name:
>                           description: name must match the name of a persistentVolumeClaim
>                             in the pod
>                           type: string
>                       required:
>                       - devicePath
>                       - name
>                       type: object
>                     type: array
>                   volumeMounts:
>                     description: Pod volumes to mount into the container's filesystem.
>                       Cannot be updated.
>                     items:
>                       description: VolumeMount describes a mounting of a Volume within
>                         a container.
>                       properties:
>                         mountPath:
>                           description: Path within the container at which the volume
>                             should be mounted.  Must not contain ':'.
>                           type: string
>                         mountPropagation:
>                           description: mountPropagation determines how mounts are
>                             propagated from the host to container and the other way
>                             around. When not set, MountPropagationNone is used. This
>                             field is beta in 1.10.
>                           type: string
>                         name:
>                           description: This must match the Name of a Volume.
>                           type: string
>                         readOnly:
>                           description: Mounted read-only if true, read-write otherwise
>                             (false or unspecified). Defaults to false.
>                           type: boolean
>                         subPath:
>                           description: Path within the volume from which the container's
>                             volume should be mounted. Defaults to "" (volume's root).
>                           type: string
>                         subPathExpr:
>                           description: Expanded path within the volume from which
>                             the container's volume should be mounted. Behaves similarly
>                             to SubPath but environment variable references $(VAR_NAME)
>                             are expanded using the container's environment. Defaults
>                             to "" (volume's root). SubPathExpr and SubPath are mutually
>                             exclusive. This field is beta in 1.15.
>                           type: string
>                       required:
>                       - mountPath
>                       - name
>                       type: object
>                     type: array
>                   workingDir:
>                     description: Container's working directory. If not specified,
>                       the container runtime's default will be used, which might be
>                       configured in the container image. Cannot be updated.
>                     type: string
>                 required:
>                 - name
>                 type: object
>               type: array
>             disableCompaction:
>               description: Disable prometheus compaction.
>               type: boolean
>             enableAdminAPI:
>               description: 'Enable access to prometheus web admin API. Defaults to
>                 the value of `false`. WARNING: Enabling the admin APIs enables mutating
>                 endpoints, to delete data, shutdown Prometheus, and more. Enabling
>                 this should be done with care and the user is advised to add additional
>                 authentication authorization via a proxy to ensure only clients authorized
>                 to perform these actions can do so. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis'
>               type: boolean
>             enforcedNamespaceLabel:
>               description: EnforcedNamespaceLabel enforces adding a namespace label
>                 of origin for each alert and metric that is user created. The label
>                 value will always be the namespace of the object that is being created.
>               type: string
>             evaluationInterval:
>               description: Interval between consecutive evaluations.
>               type: string
>             externalLabels:
>               additionalProperties:
>                 type: string
>               description: The labels to add to any time series or alerts when communicating
>                 with external systems (federation, remote storage, Alertmanager).
>               type: object
>             externalUrl:
>               description: The external URL the Prometheus instances will be available
>                 under. This is necessary to generate correct URLs. This is necessary
>                 if Prometheus is not served from root of a DNS name.
>               type: string
>             ignoreNamespaceSelectors:
>               description: IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector
>                 settings from the podmonitor and servicemonitor configs, and they
>                 will only discover endpoints within their current namespace.  Defaults
>                 to false.
>               type: boolean
>             image:
>               description: Image if specified has precedence over baseImage, tag and
>                 sha combinations. Specifying the version is still necessary to ensure
>                 the Prometheus Operator knows what version of Prometheus is being
>                 configured.
>               type: string
>             imagePullSecrets:
>               description: An optional list of references to secrets in the same namespace
>                 to use for pulling prometheus and alertmanager images from registries
>                 see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
>               items:
>                 description: LocalObjectReference contains enough information to let
>                   you locate the referenced object inside the same namespace.
>                 properties:
>                   name:
>                     description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                       TODO: Add other useful fields. apiVersion, kind, uid?'
>                     type: string
>                 type: object
>               type: array
>             initContainers:
>               description: 'InitContainers allows adding initContainers to the pod
>                 definition. Those can be used to e.g. fetch secrets for injection
>                 into the Prometheus configuration from external sources. Any errors
>                 during the execution of an initContainer will lead to a restart of
>                 the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
>                 Using initContainers for any use case other then secret fetching is
>                 entirely outside the scope of what the maintainers will support and
>                 by doing so, you accept that this behaviour may break at any time
>                 without notice.'
>               items:
>                 description: A single application container that you want to run within
>                   a pod.
>                 properties:
>                   args:
>                     description: 'Arguments to the entrypoint. The docker image''s
>                       CMD is used if this is not provided. Variable references $(VAR_NAME)
>                       are expanded using the container''s environment. If a variable
>                       cannot be resolved, the reference in the input string will be
>                       unchanged. The $(VAR_NAME) syntax can be escaped with a double
>                       $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
>                       regardless of whether the variable exists or not. Cannot be
>                       updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   command:
>                     description: 'Entrypoint array. Not executed within a shell. The
>                       docker image''s ENTRYPOINT is used if this is not provided.
>                       Variable references $(VAR_NAME) are expanded using the container''s
>                       environment. If a variable cannot be resolved, the reference
>                       in the input string will be unchanged. The $(VAR_NAME) syntax
>                       can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                       will never be expanded, regardless of whether the variable exists
>                       or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   env:
>                     description: List of environment variables to set in the container.
>                       Cannot be updated.
>                     items:
>                       description: EnvVar represents an environment variable present
>                         in a Container.
>                       properties:
>                         name:
>                           description: Name of the environment variable. Must be a
>                             C_IDENTIFIER.
>                           type: string
>                         value:
>                           description: 'Variable references $(VAR_NAME) are expanded
>                             using the previous defined environment variables in the
>                             container and any service environment variables. If a
>                             variable cannot be resolved, the reference in the input
>                             string will be unchanged. The $(VAR_NAME) syntax can be
>                             escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                             will never be expanded, regardless of whether the variable
>                             exists or not. Defaults to "".'
>                           type: string
>                         valueFrom:
>                           description: Source for the environment variable's value.
>                             Cannot be used if value is not empty.
>                           properties:
>                             configMapKeyRef:
>                               description: Selects a key of a ConfigMap.
>                               properties:
>                                 key:
>                                   description: The key to select.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the ConfigMap or its
>                                     key must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                             fieldRef:
>                               description: 'Selects a field of the pod: supports metadata.name,
>                                 metadata.namespace, metadata.labels, metadata.annotations,
>                                 spec.nodeName, spec.serviceAccountName, status.hostIP,
>                                 status.podIP.'
>                               properties:
>                                 apiVersion:
>                                   description: Version of the schema the FieldPath
>                                     is written in terms of, defaults to "v1".
>                                   type: string
>                                 fieldPath:
>                                   description: Path of the field to select in the
>                                     specified API version.
>                                   type: string
>                               required:
>                               - fieldPath
>                               type: object
>                             resourceFieldRef:
>                               description: 'Selects a resource of the container: only
>                                 resources limits and requests (limits.cpu, limits.memory,
>                                 limits.ephemeral-storage, requests.cpu, requests.memory
>                                 and requests.ephemeral-storage) are currently supported.'
>                               properties:
>                                 containerName:
>                                   description: 'Container name: required for volumes,
>                                     optional for env vars'
>                                   type: string
>                                 divisor:
>                                   description: Specifies the output format of the
>                                     exposed resources, defaults to "1"
>                                   type: string
>                                 resource:
>                                   description: 'Required: resource to select'
>                                   type: string
>                               required:
>                               - resource
>                               type: object
>                             secretKeyRef:
>                               description: Selects a key of a secret in the pod's
>                                 namespace
>                               properties:
>                                 key:
>                                   description: The key of the secret to select from.  Must
>                                     be a valid secret key.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the Secret or its key
>                                     must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                           type: object
>                       required:
>                       - name
>                       type: object
>                     type: array
>                   envFrom:
>                     description: List of sources to populate environment variables
>                       in the container. The keys defined within a source must be a
>                       C_IDENTIFIER. All invalid keys will be reported as an event
>                       when the container is starting. When a key exists in multiple
>                       sources, the value associated with the last source will take
>                       precedence. Values defined by an Env with a duplicate key will
>                       take precedence. Cannot be updated.
>                     items:
>                       description: EnvFromSource represents the source of a set of
>                         ConfigMaps
>                       properties:
>                         configMapRef:
>                           description: The ConfigMap to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the ConfigMap must be defined
>                               type: boolean
>                           type: object
>                         prefix:
>                           description: An optional identifier to prepend to each key
>                             in the ConfigMap. Must be a C_IDENTIFIER.
>                           type: string
>                         secretRef:
>                           description: The Secret to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the Secret must be defined
>                               type: boolean
>                           type: object
>                       type: object
>                     type: array
>                   image:
>                     description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
>                       This field is optional to allow higher level config management
>                       to default or override container images in workload controllers
>                       like Deployments and StatefulSets.'
>                     type: string
>                   imagePullPolicy:
>                     description: 'Image pull policy. One of Always, Never, IfNotPresent.
>                       Defaults to Always if :latest tag is specified, or IfNotPresent
>                       otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
>                     type: string
>                   lifecycle:
>                     description: Actions that the management system should take in
>                       response to container lifecycle events. Cannot be updated.
>                     properties:
>                       postStart:
>                         description: 'PostStart is called immediately after a container
>                           is created. If the handler fails, the container is terminated
>                           and restarted according to its restart policy. Other management
>                           of the container blocks until the hook completes. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                       preStop:
>                         description: 'PreStop is called immediately before a container
>                           is terminated due to an API request or management event
>                           such as liveness/startup probe failure, preemption, resource
>                           contention, etc. The handler is not called if the container
>                           crashes or exits. The reason for termination is passed to
>                           the handler. The Pod''s termination grace period countdown
>                           begins before the PreStop hooked is executed. Regardless
>                           of the outcome of the handler, the container will eventually
>                           terminate within the Pod''s termination grace period. Other
>                           management of the container blocks until the hook completes
>                           or until the termination grace period is reached. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                     type: object
>                   livenessProbe:
>                     description: 'Periodic probe of container liveness. Container
>                       will be restarted if the probe fails. Cannot be updated. More
>                       info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   name:
>                     description: Name of the container specified as a DNS_LABEL. Each
>                       container in a pod must have a unique name (DNS_LABEL). Cannot
>                       be updated.
>                     type: string
>                   ports:
>                     description: List of ports to expose from the container. Exposing
>                       a port here gives the system additional information about the
>                       network connections a container uses, but is primarily informational.
>                       Not specifying a port here DOES NOT prevent that port from being
>                       exposed. Any port which is listening on the default "0.0.0.0"
>                       address inside a container will be accessible from the network.
>                       Cannot be updated.
>                     items:
>                       description: ContainerPort represents a network port in a single
>                         container.
>                       properties:
>                         containerPort:
>                           description: Number of port to expose on the pod's IP address.
>                             This must be a valid port number, 0 < x < 65536.
>                           format: int32
>                           type: integer
>                         hostIP:
>                           description: What host IP to bind the external port to.
>                           type: string
>                         hostPort:
>                           description: Number of port to expose on the host. If specified,
>                             this must be a valid port number, 0 < x < 65536. If HostNetwork
>                             is specified, this must match ContainerPort. Most containers
>                             do not need this.
>                           format: int32
>                           type: integer
>                         name:
>                           description: If specified, this must be an IANA_SVC_NAME
>                             and unique within the pod. Each named port in a pod must
>                             have a unique name. Name for the port that can be referred
>                             to by services.
>                           type: string
>                         protocol:
>                           description: Protocol for port. Must be UDP, TCP, or SCTP.
>                             Defaults to "TCP".
>                           type: string
>                       required:
>                       - containerPort
>                       type: object
>                     type: array
>                   readinessProbe:
>                     description: 'Periodic probe of container service readiness. Container
>                       will be removed from service endpoints if the probe fails. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   resources:
>                     description: 'Compute Resources required by this container. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                     properties:
>                       limits:
>                         additionalProperties:
>                           type: string
>                         description: 'Limits describes the maximum amount of compute
>                           resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                       requests:
>                         additionalProperties:
>                           type: string
>                         description: 'Requests describes the minimum amount of compute
>                           resources required. If Requests is omitted for a container,
>                           it defaults to Limits if that is explicitly specified, otherwise
>                           to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                     type: object
>                   securityContext:
>                     description: 'Security options the pod should run with. More info:
>                       https://kubernetes.io/docs/concepts/policy/security-context/
>                       More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
>                     properties:
>                       allowPrivilegeEscalation:
>                         description: 'AllowPrivilegeEscalation controls whether a
>                           process can gain more privileges than its parent process.
>                           This bool directly controls if the no_new_privs flag will
>                           be set on the container process. AllowPrivilegeEscalation
>                           is true always when the container is: 1) run as Privileged
>                           2) has CAP_SYS_ADMIN'
>                         type: boolean
>                       capabilities:
>                         description: The capabilities to add/drop when running containers.
>                           Defaults to the default set of capabilities granted by the
>                           container runtime.
>                         properties:
>                           add:
>                             description: Added capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                           drop:
>                             description: Removed capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                         type: object
>                       privileged:
>                         description: Run container in privileged mode. Processes in
>                           privileged containers are essentially equivalent to root
>                           on the host. Defaults to false.
>                         type: boolean
>                       procMount:
>                         description: procMount denotes the type of proc mount to use
>                           for the containers. The default is DefaultProcMount which
>                           uses the container runtime defaults for readonly paths and
>                           masked paths. This requires the ProcMountType feature flag
>                           to be enabled.
>                         type: string
>                       readOnlyRootFilesystem:
>                         description: Whether this container has a read-only root filesystem.
>                           Default is false.
>                         type: boolean
>                       runAsGroup:
>                         description: The GID to run the entrypoint of the container
>                           process. Uses runtime default if unset. May also be set
>                           in PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         format: int64
>                         type: integer
>                       runAsNonRoot:
>                         description: Indicates that the container must run as a non-root
>                           user. If true, the Kubelet will validate the image at runtime
>                           to ensure that it does not run as UID 0 (root) and fail
>                           to start the container if it does. If unset or false, no
>                           such validation will be performed. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         type: boolean
>                       runAsUser:
>                         description: The UID to run the entrypoint of the container
>                           process. Defaults to user specified in image metadata if
>                           unspecified. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         format: int64
>                         type: integer
>                       seLinuxOptions:
>                         description: The SELinux context to be applied to the container.
>                           If unspecified, the container runtime will allocate a random
>                           SELinux context for each container.  May also be set in
>                           PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         properties:
>                           level:
>                             description: Level is SELinux level label that applies
>                               to the container.
>                             type: string
>                           role:
>                             description: Role is a SELinux role label that applies
>                               to the container.
>                             type: string
>                           type:
>                             description: Type is a SELinux type label that applies
>                               to the container.
>                             type: string
>                           user:
>                             description: User is a SELinux user label that applies
>                               to the container.
>                             type: string
>                         type: object
>                       windowsOptions:
>                         description: The Windows specific settings applied to all
>                           containers. If unspecified, the options from the PodSecurityContext
>                           will be used. If set in both SecurityContext and PodSecurityContext,
>                           the value specified in SecurityContext takes precedence.
>                         properties:
>                           gmsaCredentialSpec:
>                             description: GMSACredentialSpec is where the GMSA admission
>                               webhook (https://github.com/kubernetes-sigs/windows-gmsa)
>                               inlines the contents of the GMSA credential spec named
>                               by the GMSACredentialSpecName field. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           gmsaCredentialSpecName:
>                             description: GMSACredentialSpecName is the name of the
>                               GMSA credential spec to use. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           runAsUserName:
>                             description: The UserName in Windows to run the entrypoint
>                               of the container process. Defaults to the user specified
>                               in image metadata if unspecified. May also be set in
>                               PodSecurityContext. If set in both SecurityContext and
>                               PodSecurityContext, the value specified in SecurityContext
>                               takes precedence. This field is alpha-level and it is
>                               only honored by servers that enable the WindowsRunAsUserName
>                               feature flag.
>                             type: string
>                         type: object
>                     type: object
>                   startupProbe:
>                     description: 'StartupProbe indicates that the Pod has successfully
>                       initialized. If specified, no other probes are executed until
>                       this completes successfully. If this probe fails, the Pod will
>                       be restarted, just as if the livenessProbe failed. This can
>                       be used to provide different probe parameters at the beginning
>                       of a Pod''s lifecycle, when it might take a long time to load
>                       data or warm a cache, than during steady-state operation. This
>                       cannot be updated. This is an alpha feature enabled by the StartupProbe
>                       feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   stdin:
>                     description: Whether this container should allocate a buffer for
>                       stdin in the container runtime. If this is not set, reads from
>                       stdin in the container will always result in EOF. Default is
>                       false.
>                     type: boolean
>                   stdinOnce:
>                     description: Whether the container runtime should close the stdin
>                       channel after it has been opened by a single attach. When stdin
>                       is true the stdin stream will remain open across multiple attach
>                       sessions. If stdinOnce is set to true, stdin is opened on container
>                       start, is empty until the first client attaches to stdin, and
>                       then remains open and accepts data until the client disconnects,
>                       at which time stdin is closed and remains closed until the container
>                       is restarted. If this flag is false, a container processes that
>                       reads from stdin will never receive an EOF. Default is false
>                     type: boolean
>                   terminationMessagePath:
>                     description: 'Optional: Path at which the file to which the container''s
>                       termination message will be written is mounted into the container''s
>                       filesystem. Message written is intended to be brief final status,
>                       such as an assertion failure message. Will be truncated by the
>                       node if greater than 4096 bytes. The total message length across
>                       all containers will be limited to 12kb. Defaults to /dev/termination-log.
>                       Cannot be updated.'
>                     type: string
>                   terminationMessagePolicy:
>                     description: Indicate how the termination message should be populated.
>                       File will use the contents of terminationMessagePath to populate
>                       the container status message on both success and failure. FallbackToLogsOnError
>                       will use the last chunk of container log output if the termination
>                       message file is empty and the container exited with an error.
>                       The log output is limited to 2048 bytes or 80 lines, whichever
>                       is smaller. Defaults to File. Cannot be updated.
>                     type: string
>                   tty:
>                     description: Whether this container should allocate a TTY for
>                       itself, also requires 'stdin' to be true. Default is false.
>                     type: boolean
>                   volumeDevices:
>                     description: volumeDevices is the list of block devices to be
>                       used by the container. This is a beta feature.
>                     items:
>                       description: volumeDevice describes a mapping of a raw block
>                         device within a container.
>                       properties:
>                         devicePath:
>                           description: devicePath is the path inside of the container
>                             that the device will be mapped to.
>                           type: string
>                         name:
>                           description: name must match the name of a persistentVolumeClaim
>                             in the pod
>                           type: string
>                       required:
>                       - devicePath
>                       - name
>                       type: object
>                     type: array
>                   volumeMounts:
>                     description: Pod volumes to mount into the container's filesystem.
>                       Cannot be updated.
>                     items:
>                       description: VolumeMount describes a mounting of a Volume within
>                         a container.
>                       properties:
>                         mountPath:
>                           description: Path within the container at which the volume
>                             should be mounted.  Must not contain ':'.
>                           type: string
>                         mountPropagation:
>                           description: mountPropagation determines how mounts are
>                             propagated from the host to container and the other way
>                             around. When not set, MountPropagationNone is used. This
>                             field is beta in 1.10.
>                           type: string
>                         name:
>                           description: This must match the Name of a Volume.
>                           type: string
>                         readOnly:
>                           description: Mounted read-only if true, read-write otherwise
>                             (false or unspecified). Defaults to false.
>                           type: boolean
>                         subPath:
>                           description: Path within the volume from which the container's
>                             volume should be mounted. Defaults to "" (volume's root).
>                           type: string
>                         subPathExpr:
>                           description: Expanded path within the volume from which
>                             the container's volume should be mounted. Behaves similarly
>                             to SubPath but environment variable references $(VAR_NAME)
>                             are expanded using the container's environment. Defaults
>                             to "" (volume's root). SubPathExpr and SubPath are mutually
>                             exclusive. This field is beta in 1.15.
>                           type: string
>                       required:
>                       - mountPath
>                       - name
>                       type: object
>                     type: array
>                   workingDir:
>                     description: Container's working directory. If not specified,
>                       the container runtime's default will be used, which might be
>                       configured in the container image. Cannot be updated.
>                     type: string
>                 required:
>                 - name
>                 type: object
>               type: array
>             listenLocal:
>               description: ListenLocal makes the Prometheus server listen on loopback,
>                 so that it does not bind against the Pod IP.
>               type: boolean
>             logFormat:
>               description: Log format for Prometheus to be configured with.
>               type: string
>             logLevel:
>               description: Log level for Prometheus to be configured with.
>               type: string
>             nodeSelector:
>               additionalProperties:
>                 type: string
>               description: Define which Nodes the Pods are scheduled on.
>               type: object
>             overrideHonorLabels:
>               description: OverrideHonorLabels if set to true overrides all user configured
>                 honor_labels. If HonorLabels is set in ServiceMonitor or PodMonitor
>                 to true, this overrides honor_labels to false.
>               type: boolean
>             overrideHonorTimestamps:
>               description: OverrideHonorTimestamps allows to globally enforce honoring
>                 timestamps in all scrape configs.
>               type: boolean
>             paused:
>               description: When a Prometheus deployment is paused, no actions except
>                 for deletion will be performed on the underlying objects.
>               type: boolean
>             podMetadata:
>               description: 'Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
>                 Metadata Labels and Annotations gets propagated to the prometheus
>                 pods.'
>               type: object
>             podMonitorNamespaceSelector:
>               description: Namespaces to be selected for PodMonitor discovery. If
>                 nil, only check own namespace.
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>             podMonitorSelector:
>               description: '*Experimental* PodMonitors to be selected for target discovery.'
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>             portName:
>               description: Port name used for the pods and governing service. This
>                 defaults to web
>               type: string
>             priorityClassName:
>               description: Priority class assigned to the Pods
>               type: string
>             prometheusExternalLabelName:
>               description: Name of Prometheus external label used to denote Prometheus
>                 instance name. Defaults to the value of `prometheus`. External label
>                 will _not_ be added when value is set to empty string (`""`).
>               type: string
>             query:
>               description: QuerySpec defines the query command line flags when starting
>                 Prometheus.
>               properties:
>                 lookbackDelta:
>                   description: The delta difference allowed for retrieving metrics
>                     during expression evaluations.
>                   type: string
>                 maxConcurrency:
>                   description: Number of concurrent queries that can be run at once.
>                   format: int32
>                   type: integer
>                 maxSamples:
>                   description: Maximum number of samples a single query can load into
>                     memory. Note that queries will fail if they would load more samples
>                     than this into memory, so this also limits the number of samples
>                     a query can return.
>                   format: int32
>                   type: integer
>                 timeout:
>                   description: Maximum time a query may take before being aborted.
>                   type: string
>               type: object
>             remoteRead:
>               description: If specified, the remote_read spec. This is an experimental
>                 feature, it may change in any upcoming release in a breaking way.
>               items:
>                 description: RemoteReadSpec defines the remote_read configuration
>                   for prometheus.
>                 properties:
>                   basicAuth:
>                     description: BasicAuth for the URL.
>                     properties:
>                       password:
>                         description: The secret in the service monitor namespace that
>                           contains the password for authentication.
>                         properties:
>                           key:
>                             description: The key of the secret to select from.  Must
>                               be a valid secret key.
>                             type: string
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                           optional:
>                             description: Specify whether the Secret or its key must
>                               be defined
>                             type: boolean
>                         required:
>                         - key
>                         type: object
>                       username:
>                         description: The secret in the service monitor namespace that
>                           contains the username for authentication.
>                         properties:
>                           key:
>                             description: The key of the secret to select from.  Must
>                               be a valid secret key.
>                             type: string
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                           optional:
>                             description: Specify whether the Secret or its key must
>                               be defined
>                             type: boolean
>                         required:
>                         - key
>                         type: object
>                     type: object
>                   bearerToken:
>                     description: bearer token for remote read.
>                     type: string
>                   bearerTokenFile:
>                     description: File to read bearer token for remote read.
>                     type: string
>                   proxyUrl:
>                     description: Optional ProxyURL
>                     type: string
>                   readRecent:
>                     description: Whether reads should be made for queries for time
>                       ranges that the local storage should have complete data for.
>                     type: boolean
>                   remoteTimeout:
>                     description: Timeout for requests to the remote read endpoint.
>                     type: string
>                   requiredMatchers:
>                     additionalProperties:
>                       type: string
>                     description: An optional list of equality matchers which have
>                       to be present in a selector to query the remote read endpoint.
>                     type: object
>                   tlsConfig:
>                     description: TLS Config to use for remote read.
>                     properties:
>                       ca:
>                         description: Stuct containing the CA cert to use for the targets.
>                         properties:
>                           configMap:
>                             description: ConfigMap containing data to use for the
>                               targets.
>                             properties:
>                               key:
>                                 description: The key to select.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the ConfigMap or its
>                                   key must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                           secret:
>                             description: Secret containing data to use for the targets.
>                             properties:
>                               key:
>                                 description: The key of the secret to select from.  Must
>                                   be a valid secret key.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the Secret or its key
>                                   must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                         type: object
>                       caFile:
>                         description: Path to the CA cert in the Prometheus container
>                           to use for the targets.
>                         type: string
>                       cert:
>                         description: Struct containing the client cert file for the
>                           targets.
>                         properties:
>                           configMap:
>                             description: ConfigMap containing data to use for the
>                               targets.
>                             properties:
>                               key:
>                                 description: The key to select.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the ConfigMap or its
>                                   key must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                           secret:
>                             description: Secret containing data to use for the targets.
>                             properties:
>                               key:
>                                 description: The key of the secret to select from.  Must
>                                   be a valid secret key.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the Secret or its key
>                                   must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                         type: object
>                       certFile:
>                         description: Path to the client cert file in the Prometheus
>                           container for the targets.
>                         type: string
>                       insecureSkipVerify:
>                         description: Disable target certificate validation.
>                         type: boolean
>                       keyFile:
>                         description: Path to the client key file in the Prometheus
>                           container for the targets.
>                         type: string
>                       keySecret:
>                         description: Secret containing the client key file for the
>                           targets.
>                         properties:
>                           key:
>                             description: The key of the secret to select from.  Must
>                               be a valid secret key.
>                             type: string
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                           optional:
>                             description: Specify whether the Secret or its key must
>                               be defined
>                             type: boolean
>                         required:
>                         - key
>                         type: object
>                       serverName:
>                         description: Used to verify the hostname for the targets.
>                         type: string
>                     type: object
>                   url:
>                     description: The URL of the endpoint to send samples to.
>                     type: string
>                 required:
>                 - url
>                 type: object
>               type: array
>             remoteWrite:
>               description: If specified, the remote_write spec. This is an experimental
>                 feature, it may change in any upcoming release in a breaking way.
>               items:
>                 description: RemoteWriteSpec defines the remote_write configuration
>                   for prometheus.
>                 properties:
>                   basicAuth:
>                     description: BasicAuth for the URL.
>                     properties:
>                       password:
>                         description: The secret in the service monitor namespace that
>                           contains the password for authentication.
>                         properties:
>                           key:
>                             description: The key of the secret to select from.  Must
>                               be a valid secret key.
>                             type: string
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                           optional:
>                             description: Specify whether the Secret or its key must
>                               be defined
>                             type: boolean
>                         required:
>                         - key
>                         type: object
>                       username:
>                         description: The secret in the service monitor namespace that
>                           contains the username for authentication.
>                         properties:
>                           key:
>                             description: The key of the secret to select from.  Must
>                               be a valid secret key.
>                             type: string
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                           optional:
>                             description: Specify whether the Secret or its key must
>                               be defined
>                             type: boolean
>                         required:
>                         - key
>                         type: object
>                     type: object
>                   bearerToken:
>                     description: File to read bearer token for remote write.
>                     type: string
>                   bearerTokenFile:
>                     description: File to read bearer token for remote write.
>                     type: string
>                   proxyUrl:
>                     description: Optional ProxyURL
>                     type: string
>                   queueConfig:
>                     description: QueueConfig allows tuning of the remote write queue
>                       parameters.
>                     properties:
>                       batchSendDeadline:
>                         description: BatchSendDeadline is the maximum time a sample
>                           will wait in buffer.
>                         type: string
>                       capacity:
>                         description: Capacity is the number of samples to buffer per
>                           shard before we start dropping them.
>                         type: integer
>                       maxBackoff:
>                         description: MaxBackoff is the maximum retry delay.
>                         type: string
>                       maxRetries:
>                         description: MaxRetries is the maximum number of times to
>                           retry a batch on recoverable errors.
>                         type: integer
>                       maxSamplesPerSend:
>                         description: MaxSamplesPerSend is the maximum number of samples
>                           per send.
>                         type: integer
>                       maxShards:
>                         description: MaxShards is the maximum number of shards, i.e.
>                           amount of concurrency.
>                         type: integer
>                       minBackoff:
>                         description: MinBackoff is the initial retry delay. Gets doubled
>                           for every retry.
>                         type: string
>                       minShards:
>                         description: MinShards is the minimum number of shards, i.e.
>                           amount of concurrency.
>                         type: integer
>                     type: object
>                   remoteTimeout:
>                     description: Timeout for requests to the remote write endpoint.
>                     type: string
>                   tlsConfig:
>                     description: TLS Config to use for remote write.
>                     properties:
>                       ca:
>                         description: Stuct containing the CA cert to use for the targets.
>                         properties:
>                           configMap:
>                             description: ConfigMap containing data to use for the
>                               targets.
>                             properties:
>                               key:
>                                 description: The key to select.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the ConfigMap or its
>                                   key must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                           secret:
>                             description: Secret containing data to use for the targets.
>                             properties:
>                               key:
>                                 description: The key of the secret to select from.  Must
>                                   be a valid secret key.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the Secret or its key
>                                   must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                         type: object
>                       caFile:
>                         description: Path to the CA cert in the Prometheus container
>                           to use for the targets.
>                         type: string
>                       cert:
>                         description: Struct containing the client cert file for the
>                           targets.
>                         properties:
>                           configMap:
>                             description: ConfigMap containing data to use for the
>                               targets.
>                             properties:
>                               key:
>                                 description: The key to select.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the ConfigMap or its
>                                   key must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                           secret:
>                             description: Secret containing data to use for the targets.
>                             properties:
>                               key:
>                                 description: The key of the secret to select from.  Must
>                                   be a valid secret key.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the Secret or its key
>                                   must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                         type: object
>                       certFile:
>                         description: Path to the client cert file in the Prometheus
>                           container for the targets.
>                         type: string
>                       insecureSkipVerify:
>                         description: Disable target certificate validation.
>                         type: boolean
>                       keyFile:
>                         description: Path to the client key file in the Prometheus
>                           container for the targets.
>                         type: string
>                       keySecret:
>                         description: Secret containing the client key file for the
>                           targets.
>                         properties:
>                           key:
>                             description: The key of the secret to select from.  Must
>                               be a valid secret key.
>                             type: string
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                           optional:
>                             description: Specify whether the Secret or its key must
>                               be defined
>                             type: boolean
>                         required:
>                         - key
>                         type: object
>                       serverName:
>                         description: Used to verify the hostname for the targets.
>                         type: string
>                     type: object
>                   url:
>                     description: The URL of the endpoint to send samples to.
>                     type: string
>                   writeRelabelConfigs:
>                     description: The list of remote write relabel configurations.
>                     items:
>                       description: 'RelabelConfig allows dynamic rewriting of the
>                         label set, being applied to samples before ingestion. It defines
>                         `<metric_relabel_configs>`-section of Prometheus configuration.
>                         More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
>                       properties:
>                         action:
>                           description: Action to perform based on regex matching.
>                             Default is 'replace'
>                           type: string
>                         modulus:
>                           description: Modulus to take of the hash of the source label
>                             values.
>                           format: int64
>                           type: integer
>                         regex:
>                           description: Regular expression against which the extracted
>                             value is matched. Default is '(.*)'
>                           type: string
>                         replacement:
>                           description: Replacement value against which a regex replace
>                             is performed if the regular expression matches. Regex
>                             capture groups are available. Default is '$1'
>                           type: string
>                         separator:
>                           description: Separator placed between concatenated source
>                             label values. default is ';'.
>                           type: string
>                         sourceLabels:
>                           description: The source labels select values from existing
>                             labels. Their content is concatenated using the configured
>                             separator and matched against the configured regular expression
>                             for the replace, keep, and drop actions.
>                           items:
>                             type: string
>                           type: array
>                         targetLabel:
>                           description: Label to which the resulting value is written
>                             in a replace action. It is mandatory for replace actions.
>                             Regex capture groups are available.
>                           type: string
>                       type: object
>                     type: array
>                 required:
>                 - url
>                 type: object
>               type: array
>             replicaExternalLabelName:
>               description: Name of Prometheus external label used to denote replica
>                 name. Defaults to the value of `prometheus_replica`. External label
>                 will _not_ be added when value is set to empty string (`""`).
>               type: string
>             replicas:
>               description: Number of instances to deploy for a Prometheus deployment.
>               format: int32
>               type: integer
>             resources:
>               description: Define resources requests and limits for single Pods.
>               properties:
>                 limits:
>                   additionalProperties:
>                     type: string
>                   description: 'Limits describes the maximum amount of compute resources
>                     allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                   type: object
>                 requests:
>                   additionalProperties:
>                     type: string
>                   description: 'Requests describes the minimum amount of compute resources
>                     required. If Requests is omitted for a container, it defaults
>                     to Limits if that is explicitly specified, otherwise to an implementation-defined
>                     value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                   type: object
>               type: object
>             retention:
>               description: Time duration Prometheus shall retain data for. Default
>                 is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)`
>                 (milliseconds seconds minutes hours days weeks years).
>               type: string
>             retentionSize:
>               description: Maximum amount of disk space used by blocks.
>               type: string
>             routePrefix:
>               description: The route prefix Prometheus registers HTTP handlers for.
>                 This is useful, if using ExternalURL and a proxy is rewriting HTTP
>                 routes of a request, and the actual ExternalURL is still true, but
>                 the server serves requests under a different route prefix. For example
>                 for use with `kubectl proxy`.
>               type: string
>             ruleNamespaceSelector:
>               description: Namespaces to be selected for PrometheusRules discovery.
>                 If unspecified, only the same namespace as the Prometheus object is
>                 in is used.
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>             ruleSelector:
>               description: A selector to select which PrometheusRules to mount for
>                 loading alerting rules from. Until (excluding) Prometheus Operator
>                 v0.24.0 Prometheus Operator will migrate any legacy rule ConfigMaps
>                 to PrometheusRule custom resources selected by RuleSelector. Make
>                 sure it does not match any config maps that you do not want to be
>                 migrated.
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>             rules:
>               description: /--rules.*/ command-line arguments.
>               properties:
>                 alert:
>                   description: /--rules.alert.*/ command-line arguments
>                   properties:
>                     forGracePeriod:
>                       description: Minimum duration between alert and restored 'for'
>                         state. This is maintained only for alerts with configured
>                         'for' time greater than grace period.
>                       type: string
>                     forOutageTolerance:
>                       description: Max time to tolerate prometheus outage for restoring
>                         'for' state of alert.
>                       type: string
>                     resendDelay:
>                       description: Minimum amount of time to wait before resending
>                         an alert to Alertmanager.
>                       type: string
>                   type: object
>               type: object
>             scrapeInterval:
>               description: Interval between consecutive scrapes.
>               type: string
>             secrets:
>               description: Secrets is a list of Secrets in the same namespace as the
>                 Prometheus object, which shall be mounted into the Prometheus Pods.
>                 The Secrets are mounted into /etc/prometheus/secrets/<secret-name>.
>               items:
>                 type: string
>               type: array
>             securityContext:
>               description: SecurityContext holds pod-level security attributes and
>                 common container settings. This defaults to the default PodSecurityContext.
>               properties:
>                 fsGroup:
>                   description: "A special supplemental group that applies to all containers
>                     in a pod. Some volume types allow the Kubelet to change the ownership
>                     of that volume to be owned by the pod: \n 1. The owning GID will
>                     be the FSGroup 2. The setgid bit is set (new files created in
>                     the volume will be owned by FSGroup) 3. The permission bits are
>                     OR'd with rw-rw---- \n If unset, the Kubelet will not modify the
>                     ownership and permissions of any volume."
>                   format: int64
>                   type: integer
>                 runAsGroup:
>                   description: The GID to run the entrypoint of the container process.
>                     Uses runtime default if unset. May also be set in SecurityContext.  If
>                     set in both SecurityContext and PodSecurityContext, the value
>                     specified in SecurityContext takes precedence for that container.
>                   format: int64
>                   type: integer
>                 runAsNonRoot:
>                   description: Indicates that the container must run as a non-root
>                     user. If true, the Kubelet will validate the image at runtime
>                     to ensure that it does not run as UID 0 (root) and fail to start
>                     the container if it does. If unset or false, no such validation
>                     will be performed. May also be set in SecurityContext.  If set
>                     in both SecurityContext and PodSecurityContext, the value specified
>                     in SecurityContext takes precedence.
>                   type: boolean
>                 runAsUser:
>                   description: The UID to run the entrypoint of the container process.
>                     Defaults to user specified in image metadata if unspecified. May
>                     also be set in SecurityContext.  If set in both SecurityContext
>                     and PodSecurityContext, the value specified in SecurityContext
>                     takes precedence for that container.
>                   format: int64
>                   type: integer
>                 seLinuxOptions:
>                   description: The SELinux context to be applied to all containers.
>                     If unspecified, the container runtime will allocate a random SELinux
>                     context for each container.  May also be set in SecurityContext.  If
>                     set in both SecurityContext and PodSecurityContext, the value
>                     specified in SecurityContext takes precedence for that container.
>                   properties:
>                     level:
>                       description: Level is SELinux level label that applies to the
>                         container.
>                       type: string
>                     role:
>                       description: Role is a SELinux role label that applies to the
>                         container.
>                       type: string
>                     type:
>                       description: Type is a SELinux type label that applies to the
>                         container.
>                       type: string
>                     user:
>                       description: User is a SELinux user label that applies to the
>                         container.
>                       type: string
>                   type: object
>                 supplementalGroups:
>                   description: A list of groups applied to the first process run in
>                     each container, in addition to the container's primary GID.  If
>                     unspecified, no groups will be added to any container.
>                   items:
>                     format: int64
>                     type: integer
>                   type: array
>                 sysctls:
>                   description: Sysctls hold a list of namespaced sysctls used for
>                     the pod. Pods with unsupported sysctls (by the container runtime)
>                     might fail to launch.
>                   items:
>                     description: Sysctl defines a kernel parameter to be set
>                     properties:
>                       name:
>                         description: Name of a property to set
>                         type: string
>                       value:
>                         description: Value of a property to set
>                         type: string
>                     required:
>                     - name
>                     - value
>                     type: object
>                   type: array
>                 windowsOptions:
>                   description: The Windows specific settings applied to all containers.
>                     If unspecified, the options within a container's SecurityContext
>                     will be used. If set in both SecurityContext and PodSecurityContext,
>                     the value specified in SecurityContext takes precedence.
>                   properties:
>                     gmsaCredentialSpec:
>                       description: GMSACredentialSpec is where the GMSA admission
>                         webhook (https://github.com/kubernetes-sigs/windows-gmsa)
>                         inlines the contents of the GMSA credential spec named by
>                         the GMSACredentialSpecName field. This field is alpha-level
>                         and is only honored by servers that enable the WindowsGMSA
>                         feature flag.
>                       type: string
>                     gmsaCredentialSpecName:
>                       description: GMSACredentialSpecName is the name of the GMSA
>                         credential spec to use. This field is alpha-level and is only
>                         honored by servers that enable the WindowsGMSA feature flag.
>                       type: string
>                     runAsUserName:
>                       description: The UserName in Windows to run the entrypoint of
>                         the container process. Defaults to the user specified in image
>                         metadata if unspecified. May also be set in PodSecurityContext.
>                         If set in both SecurityContext and PodSecurityContext, the
>                         value specified in SecurityContext takes precedence. This
>                         field is alpha-level and it is only honored by servers that
>                         enable the WindowsRunAsUserName feature flag.
>                       type: string
>                   type: object
>               type: object
>             serviceAccountName:
>               description: ServiceAccountName is the name of the ServiceAccount to
>                 use to run the Prometheus Pods.
>               type: string
>             serviceMonitorNamespaceSelector:
>               description: Namespaces to be selected for ServiceMonitor discovery.
>                 If nil, only check own namespace.
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>             serviceMonitorSelector:
>               description: ServiceMonitors to be selected for target discovery.
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>             sha:
>               description: SHA of Prometheus container image to be deployed. Defaults
>                 to the value of `version`. Similar to a tag, but the SHA explicitly
>                 deploys an immutable container image. Version and Tag are ignored
>                 if SHA is set.
>               type: string
>             storage:
>               description: Storage spec to specify how storage shall be used.
>               properties:
>                 emptyDir:
>                   description: 'EmptyDirVolumeSource to be used by the Prometheus
>                     StatefulSets. If specified, used in place of any volumeClaimTemplate.
>                     More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
>                   properties:
>                     medium:
>                       description: 'What type of storage medium should back this directory.
>                         The default is "" which means to use the node''s default medium.
>                         Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
>                       type: string
>                     sizeLimit:
>                       description: 'Total amount of local storage required for this
>                         EmptyDir volume. The size limit is also applicable for memory
>                         medium. The maximum usage on memory medium EmptyDir would
>                         be the minimum value between the SizeLimit specified here
>                         and the sum of memory limits of all containers in a pod. The
>                         default is nil which means that the limit is undefined. More
>                         info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
>                       type: string
>                   type: object
>                 volumeClaimTemplate:
>                   description: A PVC spec to be used by the Prometheus StatefulSets.
>                   properties:
>                     apiVersion:
>                       description: 'APIVersion defines the versioned schema of this
>                         representation of an object. Servers should convert recognized
>                         schemas to the latest internal value, and may reject unrecognized
>                         values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
>                       type: string
>                     kind:
>                       description: 'Kind is a string value representing the REST resource
>                         this object represents. Servers may infer this from the endpoint
>                         the client submits requests to. Cannot be updated. In CamelCase.
>                         More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
>                       type: string
>                     metadata:
>                       description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
>                       type: object
>                     spec:
>                       description: 'Spec defines the desired characteristics of a
>                         volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                       properties:
>                         accessModes:
>                           description: 'AccessModes contains the desired access modes
>                             the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
>                           items:
>                             type: string
>                           type: array
>                         dataSource:
>                           description: This field requires the VolumeSnapshotDataSource
>                             alpha feature gate to be enabled and currently VolumeSnapshot
>                             is the only supported data source. If the provisioner
>                             can support VolumeSnapshot data source, it will create
>                             a new volume and data will be restored to the volume at
>                             the same time. If the provisioner does not support VolumeSnapshot
>                             data source, volume will not be created and the failure
>                             will be reported as an event. In the future, we plan to
>                             support more data source types and the behavior of the
>                             provisioner may change.
>                           properties:
>                             apiGroup:
>                               description: APIGroup is the group for the resource
>                                 being referenced. If APIGroup is not specified, the
>                                 specified Kind must be in the core API group. For
>                                 any other third-party types, APIGroup is required.
>                               type: string
>                             kind:
>                               description: Kind is the type of resource being referenced
>                               type: string
>                             name:
>                               description: Name is the name of resource being referenced
>                               type: string
>                           required:
>                           - kind
>                           - name
>                           type: object
>                         resources:
>                           description: 'Resources represents the minimum resources
>                             the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
>                           properties:
>                             limits:
>                               additionalProperties:
>                                 type: string
>                               description: 'Limits describes the maximum amount of
>                                 compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                               type: object
>                             requests:
>                               additionalProperties:
>                                 type: string
>                               description: 'Requests describes the minimum amount
>                                 of compute resources required. If Requests is omitted
>                                 for a container, it defaults to Limits if that is
>                                 explicitly specified, otherwise to an implementation-defined
>                                 value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                               type: object
>                           type: object
>                         selector:
>                           description: A label query over volumes to consider for
>                             binding.
>                           properties:
>                             matchExpressions:
>                               description: matchExpressions is a list of label selector
>                                 requirements. The requirements are ANDed.
>                               items:
>                                 description: A label selector requirement is a selector
>                                   that contains values, a key, and an operator that
>                                   relates the key and values.
>                                 properties:
>                                   key:
>                                     description: key is the label key that the selector
>                                       applies to.
>                                     type: string
>                                   operator:
>                                     description: operator represents a key's relationship
>                                       to a set of values. Valid operators are In,
>                                       NotIn, Exists and DoesNotExist.
>                                     type: string
>                                   values:
>                                     description: values is an array of string values.
>                                       If the operator is In or NotIn, the values array
>                                       must be non-empty. If the operator is Exists
>                                       or DoesNotExist, the values array must be empty.
>                                       This array is replaced during a strategic merge
>                                       patch.
>                                     items:
>                                       type: string
>                                     type: array
>                                 required:
>                                 - key
>                                 - operator
>                                 type: object
>                               type: array
>                             matchLabels:
>                               additionalProperties:
>                                 type: string
>                               description: matchLabels is a map of {key,value} pairs.
>                                 A single {key,value} in the matchLabels map is equivalent
>                                 to an element of matchExpressions, whose key field
>                                 is "key", the operator is "In", and the values array
>                                 contains only "value". The requirements are ANDed.
>                               type: object
>                           type: object
>                         storageClassName:
>                           description: 'Name of the StorageClass required by the claim.
>                             More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
>                           type: string
>                         volumeMode:
>                           description: volumeMode defines what type of volume is required
>                             by the claim. Value of Filesystem is implied when not
>                             included in claim spec. This is a beta feature.
>                           type: string
>                         volumeName:
>                           description: VolumeName is the binding reference to the
>                             PersistentVolume backing this claim.
>                           type: string
>                       type: object
>                     status:
>                       description: 'Status represents the current information/status
>                         of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                       properties:
>                         accessModes:
>                           description: 'AccessModes contains the actual access modes
>                             the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
>                           items:
>                             type: string
>                           type: array
>                         capacity:
>                           additionalProperties:
>                             type: string
>                           description: Represents the actual resources of the underlying
>                             volume.
>                           type: object
>                         conditions:
>                           description: Current Condition of persistent volume claim.
>                             If underlying persistent volume is being resized then
>                             the Condition will be set to 'ResizeStarted'.
>                           items:
>                             description: PersistentVolumeClaimCondition contails details
>                               about state of pvc
>                             properties:
>                               lastProbeTime:
>                                 description: Last time we probed the condition.
>                                 format: date-time
>                                 type: string
>                               lastTransitionTime:
>                                 description: Last time the condition transitioned
>                                   from one status to another.
>                                 format: date-time
>                                 type: string
>                               message:
>                                 description: Human-readable message indicating details
>                                   about last transition.
>                                 type: string
>                               reason:
>                                 description: Unique, this should be a short, machine
>                                   understandable string that gives the reason for
>                                   condition's last transition. If it reports "ResizeStarted"
>                                   that means the underlying persistent volume is being
>                                   resized.
>                                 type: string
>                               status:
>                                 type: string
>                               type:
>                                 description: PersistentVolumeClaimConditionType is
>                                   a valid value of PersistentVolumeClaimCondition.Type
>                                 type: string
>                             required:
>                             - status
>                             - type
>                             type: object
>                           type: array
>                         phase:
>                           description: Phase represents the current phase of PersistentVolumeClaim.
>                           type: string
>                       type: object
>                   type: object
>               type: object
>             tag:
>               description: Tag of Prometheus container image to be deployed. Defaults
>                 to the value of `version`. Version is ignored if Tag is set.
>               type: string
>             thanos:
>               description: "Thanos configuration allows configuring various aspects
>                 of a Prometheus server in a Thanos environment. \n This section is
>                 experimental, it may change significantly without deprecation notice
>                 in any release. \n This is experimental and may change significantly
>                 without backward compatibility in any release."
>               properties:
>                 baseImage:
>                   description: Thanos base image if other than default.
>                   type: string
>                 image:
>                   description: Image if specified has precedence over baseImage, tag
>                     and sha combinations. Specifying the version is still necessary
>                     to ensure the Prometheus Operator knows what version of Thanos
>                     is being configured.
>                   type: string
>                 listenLocal:
>                   description: ListenLocal makes the Thanos sidecar listen on loopback,
>                     so that it does not bind against the Pod IP.
>                   type: boolean
>                 objectStorageConfig:
>                   description: ObjectStorageConfig configures object storage in Thanos.
>                   properties:
>                     key:
>                       description: The key of the secret to select from.  Must be
>                         a valid secret key.
>                       type: string
>                     name:
>                       description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                         TODO: Add other useful fields. apiVersion, kind, uid?'
>                       type: string
>                     optional:
>                       description: Specify whether the Secret or its key must be defined
>                       type: boolean
>                   required:
>                   - key
>                   type: object
>                 resources:
>                   description: Resources defines the resource requirements for the
>                     Thanos sidecar. If not provided, no requests/limits will be set
>                   properties:
>                     limits:
>                       additionalProperties:
>                         type: string
>                       description: 'Limits describes the maximum amount of compute
>                         resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                       type: object
>                     requests:
>                       additionalProperties:
>                         type: string
>                       description: 'Requests describes the minimum amount of compute
>                         resources required. If Requests is omitted for a container,
>                         it defaults to Limits if that is explicitly specified, otherwise
>                         to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                       type: object
>                   type: object
>                 sha:
>                   description: SHA of Thanos container image to be deployed. Defaults
>                     to the value of `version`. Similar to a tag, but the SHA explicitly
>                     deploys an immutable container image. Version and Tag are ignored
>                     if SHA is set.
>                   type: string
>                 tag:
>                   description: Tag of Thanos sidecar container image to be deployed.
>                     Defaults to the value of `version`. Version is ignored if Tag
>                     is set.
>                   type: string
>                 version:
>                   description: Version describes the version of Thanos to use.
>                   type: string
>               type: object
>             tolerations:
>               description: If specified, the pod's tolerations.
>               items:
>                 description: The pod this Toleration is attached to tolerates any
>                   taint that matches the triple <key,value,effect> using the matching
>                   operator <operator>.
>                 properties:
>                   effect:
>                     description: Effect indicates the taint effect to match. Empty
>                       means match all taint effects. When specified, allowed values
>                       are NoSchedule, PreferNoSchedule and NoExecute.
>                     type: string
>                   key:
>                     description: Key is the taint key that the toleration applies
>                       to. Empty means match all taint keys. If the key is empty, operator
>                       must be Exists; this combination means to match all values and
>                       all keys.
>                     type: string
>                   operator:
>                     description: Operator represents a key's relationship to the value.
>                       Valid operators are Exists and Equal. Defaults to Equal. Exists
>                       is equivalent to wildcard for value, so that a pod can tolerate
>                       all taints of a particular category.
>                     type: string
>                   tolerationSeconds:
>                     description: TolerationSeconds represents the period of time the
>                       toleration (which must be of effect NoExecute, otherwise this
>                       field is ignored) tolerates the taint. By default, it is not
>                       set, which means tolerate the taint forever (do not evict).
>                       Zero and negative values will be treated as 0 (evict immediately)
>                       by the system.
>                     format: int64
>                     type: integer
>                   value:
>                     description: Value is the taint value the toleration matches to.
>                       If the operator is Exists, the value should be empty, otherwise
>                       just a regular string.
>                     type: string
>                 type: object
>               type: array
>             version:
>               description: Version of Prometheus to be deployed.
>               type: string
>             volumes:
>               description: Volumes allows configuration of additional volumes on the
>                 output StatefulSet definition. Volumes specified will be appended
>                 to other volumes that are generated as a result of StorageSpec objects.
>               items:
>                 description: Volume represents a named volume in a pod that may be
>                   accessed by any container in the pod.
>                 properties:
>                   awsElasticBlockStore:
>                     description: 'AWSElasticBlockStore represents an AWS Disk resource
>                       that is attached to a kubelet''s host machine and then exposed
>                       to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       partition:
>                         description: 'The partition in the volume that you want to
>                           mount. If omitted, the default is to mount by volume name.
>                           Examples: For volume /dev/sda1, you specify the partition
>                           as "1". Similarly, the volume partition for /dev/sda is
>                           "0" (or you can leave the property empty).'
>                         format: int32
>                         type: integer
>                       readOnly:
>                         description: 'Specify "true" to force and set the ReadOnly
>                           property in VolumeMounts to "true". If omitted, the default
>                           is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
>                         type: boolean
>                       volumeID:
>                         description: 'Unique ID of the persistent disk resource in
>                           AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
>                         type: string
>                     required:
>                     - volumeID
>                     type: object
>                   azureDisk:
>                     description: AzureDisk represents an Azure Data Disk mount on
>                       the host and bind mount to the pod.
>                     properties:
>                       cachingMode:
>                         description: 'Host Caching mode: None, Read Only, Read Write.'
>                         type: string
>                       diskName:
>                         description: The Name of the data disk in the blob storage
>                         type: string
>                       diskURI:
>                         description: The URI the data disk in the blob storage
>                         type: string
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       kind:
>                         description: 'Expected values Shared: multiple blob disks
>                           per storage account  Dedicated: single blob disk per storage
>                           account  Managed: azure managed data disk (only in managed
>                           availability set). defaults to shared'
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                     required:
>                     - diskName
>                     - diskURI
>                     type: object
>                   azureFile:
>                     description: AzureFile represents an Azure File Service mount
>                       on the host and bind mount to the pod.
>                     properties:
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       secretName:
>                         description: the name of secret that contains Azure Storage
>                           Account Name and Key
>                         type: string
>                       shareName:
>                         description: Share Name
>                         type: string
>                     required:
>                     - secretName
>                     - shareName
>                     type: object
>                   cephfs:
>                     description: CephFS represents a Ceph FS mount on the host that
>                       shares a pod's lifetime
>                     properties:
>                       monitors:
>                         description: 'Required: Monitors is a collection of Ceph monitors
>                           More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         items:
>                           type: string
>                         type: array
>                       path:
>                         description: 'Optional: Used as the mounted root, rather than
>                           the full Ceph tree, default is /'
>                         type: string
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts. More
>                           info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         type: boolean
>                       secretFile:
>                         description: 'Optional: SecretFile is the path to key ring
>                           for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         type: string
>                       secretRef:
>                         description: 'Optional: SecretRef is reference to the authentication
>                           secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       user:
>                         description: 'Optional: User is the rados user name, default
>                           is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         type: string
>                     required:
>                     - monitors
>                     type: object
>                   cinder:
>                     description: 'Cinder represents a cinder volume attached and mounted
>                       on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Examples: "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                           More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                         type: string
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts. More
>                           info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                         type: boolean
>                       secretRef:
>                         description: 'Optional: points to a secret object containing
>                           parameters used to connect to OpenStack.'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       volumeID:
>                         description: 'volume id used to identify the volume in cinder.
>                           More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                         type: string
>                     required:
>                     - volumeID
>                     type: object
>                   configMap:
>                     description: ConfigMap represents a configMap that should populate
>                       this volume
>                     properties:
>                       defaultMode:
>                         description: 'Optional: mode bits to use on created files
>                           by default. Must be a value between 0 and 0777. Defaults
>                           to 0644. Directories within the path are not affected by
>                           this setting. This might be in conflict with other options
>                           that affect the file mode, like fsGroup, and the result
>                           can be other mode bits set.'
>                         format: int32
>                         type: integer
>                       items:
>                         description: If unspecified, each key-value pair in the Data
>                           field of the referenced ConfigMap will be projected into
>                           the volume as a file whose name is the key and content is
>                           the value. If specified, the listed keys will be projected
>                           into the specified paths, and unlisted keys will not be
>                           present. If a key is specified which is not present in the
>                           ConfigMap, the volume setup will error unless it is marked
>                           optional. Paths must be relative and may not contain the
>                           '..' path or start with '..'.
>                         items:
>                           description: Maps a string key to a path within a volume.
>                           properties:
>                             key:
>                               description: The key to project.
>                               type: string
>                             mode:
>                               description: 'Optional: mode bits to use on this file,
>                                 must be a value between 0 and 0777. If not specified,
>                                 the volume defaultMode will be used. This might be
>                                 in conflict with other options that affect the file
>                                 mode, like fsGroup, and the result can be other mode
>                                 bits set.'
>                               format: int32
>                               type: integer
>                             path:
>                               description: The relative path of the file to map the
>                                 key to. May not be an absolute path. May not contain
>                                 the path element '..'. May not start with the string
>                                 '..'.
>                               type: string
>                           required:
>                           - key
>                           - path
>                           type: object
>                         type: array
>                       name:
>                         description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                           TODO: Add other useful fields. apiVersion, kind, uid?'
>                         type: string
>                       optional:
>                         description: Specify whether the ConfigMap or its keys must
>                           be defined
>                         type: boolean
>                     type: object
>                   csi:
>                     description: CSI (Container Storage Interface) represents storage
>                       that is handled by an external CSI driver (Alpha feature).
>                     properties:
>                       driver:
>                         description: Driver is the name of the CSI driver that handles
>                           this volume. Consult with your admin for the correct name
>                           as registered in the cluster.
>                         type: string
>                       fsType:
>                         description: Filesystem type to mount. Ex. "ext4", "xfs",
>                           "ntfs". If not provided, the empty value is passed to the
>                           associated CSI driver which will determine the default filesystem
>                           to apply.
>                         type: string
>                       nodePublishSecretRef:
>                         description: NodePublishSecretRef is a reference to the secret
>                           object containing sensitive information to pass to the CSI
>                           driver to complete the CSI NodePublishVolume and NodeUnpublishVolume
>                           calls. This field is optional, and  may be empty if no secret
>                           is required. If the secret object contains more than one
>                           secret, all secret references are passed.
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       readOnly:
>                         description: Specifies a read-only configuration for the volume.
>                           Defaults to false (read/write).
>                         type: boolean
>                       volumeAttributes:
>                         additionalProperties:
>                           type: string
>                         description: VolumeAttributes stores driver-specific properties
>                           that are passed to the CSI driver. Consult your driver's
>                           documentation for supported values.
>                         type: object
>                     required:
>                     - driver
>                     type: object
>                   downwardAPI:
>                     description: DownwardAPI represents downward API about the pod
>                       that should populate this volume
>                     properties:
>                       defaultMode:
>                         description: 'Optional: mode bits to use on created files
>                           by default. Must be a value between 0 and 0777. Defaults
>                           to 0644. Directories within the path are not affected by
>                           this setting. This might be in conflict with other options
>                           that affect the file mode, like fsGroup, and the result
>                           can be other mode bits set.'
>                         format: int32
>                         type: integer
>                       items:
>                         description: Items is a list of downward API volume file
>                         items:
>                           description: DownwardAPIVolumeFile represents information
>                             to create the file containing the pod field
>                           properties:
>                             fieldRef:
>                               description: 'Required: Selects a field of the pod:
>                                 only annotations, labels, name and namespace are supported.'
>                               properties:
>                                 apiVersion:
>                                   description: Version of the schema the FieldPath
>                                     is written in terms of, defaults to "v1".
>                                   type: string
>                                 fieldPath:
>                                   description: Path of the field to select in the
>                                     specified API version.
>                                   type: string
>                               required:
>                               - fieldPath
>                               type: object
>                             mode:
>                               description: 'Optional: mode bits to use on this file,
>                                 must be a value between 0 and 0777. If not specified,
>                                 the volume defaultMode will be used. This might be
>                                 in conflict with other options that affect the file
>                                 mode, like fsGroup, and the result can be other mode
>                                 bits set.'
>                               format: int32
>                               type: integer
>                             path:
>                               description: 'Required: Path is  the relative path name
>                                 of the file to be created. Must not be absolute or
>                                 contain the ''..'' path. Must be utf-8 encoded. The
>                                 first item of the relative path must not start with
>                                 ''..'''
>                               type: string
>                             resourceFieldRef:
>                               description: 'Selects a resource of the container: only
>                                 resources limits and requests (limits.cpu, limits.memory,
>                                 requests.cpu and requests.memory) are currently supported.'
>                               properties:
>                                 containerName:
>                                   description: 'Container name: required for volumes,
>                                     optional for env vars'
>                                   type: string
>                                 divisor:
>                                   description: Specifies the output format of the
>                                     exposed resources, defaults to "1"
>                                   type: string
>                                 resource:
>                                   description: 'Required: resource to select'
>                                   type: string
>                               required:
>                               - resource
>                               type: object
>                           required:
>                           - path
>                           type: object
>                         type: array
>                     type: object
>                   emptyDir:
>                     description: 'EmptyDir represents a temporary directory that shares
>                       a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
>                     properties:
>                       medium:
>                         description: 'What type of storage medium should back this
>                           directory. The default is "" which means to use the node''s
>                           default medium. Must be an empty string (default) or Memory.
>                           More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
>                         type: string
>                       sizeLimit:
>                         description: 'Total amount of local storage required for this
>                           EmptyDir volume. The size limit is also applicable for memory
>                           medium. The maximum usage on memory medium EmptyDir would
>                           be the minimum value between the SizeLimit specified here
>                           and the sum of memory limits of all containers in a pod.
>                           The default is nil which means that the limit is undefined.
>                           More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
>                         type: string
>                     type: object
>                   fc:
>                     description: FC represents a Fibre Channel resource that is attached
>                       to a kubelet's host machine and then exposed to the pod.
>                     properties:
>                       fsType:
>                         description: 'Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       lun:
>                         description: 'Optional: FC target lun number'
>                         format: int32
>                         type: integer
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts.'
>                         type: boolean
>                       targetWWNs:
>                         description: 'Optional: FC target worldwide names (WWNs)'
>                         items:
>                           type: string
>                         type: array
>                       wwids:
>                         description: 'Optional: FC volume world wide identifiers (wwids)
>                           Either wwids or combination of targetWWNs and lun must be
>                           set, but not both simultaneously.'
>                         items:
>                           type: string
>                         type: array
>                     type: object
>                   flexVolume:
>                     description: FlexVolume represents a generic volume resource that
>                       is provisioned/attached using an exec based plugin.
>                     properties:
>                       driver:
>                         description: Driver is the name of the driver to use for this
>                           volume.
>                         type: string
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". The default filesystem depends on FlexVolume
>                           script.
>                         type: string
>                       options:
>                         additionalProperties:
>                           type: string
>                         description: 'Optional: Extra command options if any.'
>                         type: object
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts.'
>                         type: boolean
>                       secretRef:
>                         description: 'Optional: SecretRef is reference to the secret
>                           object containing sensitive information to pass to the plugin
>                           scripts. This may be empty if no secret object is specified.
>                           If the secret object contains more than one secret, all
>                           secrets are passed to the plugin scripts.'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                     required:
>                     - driver
>                     type: object
>                   flocker:
>                     description: Flocker represents a Flocker volume attached to a
>                       kubelet's host machine. This depends on the Flocker control
>                       service being running
>                     properties:
>                       datasetName:
>                         description: Name of the dataset stored as metadata -> name
>                           on the dataset for Flocker should be considered as deprecated
>                         type: string
>                       datasetUUID:
>                         description: UUID of the dataset. This is unique identifier
>                           of a Flocker dataset
>                         type: string
>                     type: object
>                   gcePersistentDisk:
>                     description: 'GCEPersistentDisk represents a GCE Disk resource
>                       that is attached to a kubelet''s host machine and then exposed
>                       to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       partition:
>                         description: 'The partition in the volume that you want to
>                           mount. If omitted, the default is to mount by volume name.
>                           Examples: For volume /dev/sda1, you specify the partition
>                           as "1". Similarly, the volume partition for /dev/sda is
>                           "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                         format: int32
>                         type: integer
>                       pdName:
>                         description: 'Unique name of the PD resource in GCE. Used
>                           to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the ReadOnly setting
>                           in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                         type: boolean
>                     required:
>                     - pdName
>                     type: object
>                   gitRepo:
>                     description: 'GitRepo represents a git repository at a particular
>                       revision. DEPRECATED: GitRepo is deprecated. To provision a
>                       container with a git repo, mount an EmptyDir into an InitContainer
>                       that clones the repo using git, then mount the EmptyDir into
>                       the Pod''s container.'
>                     properties:
>                       directory:
>                         description: Target directory name. Must not contain or start
>                           with '..'.  If '.' is supplied, the volume directory will
>                           be the git repository.  Otherwise, if specified, the volume
>                           will contain the git repository in the subdirectory with
>                           the given name.
>                         type: string
>                       repository:
>                         description: Repository URL
>                         type: string
>                       revision:
>                         description: Commit hash for the specified revision.
>                         type: string
>                     required:
>                     - repository
>                     type: object
>                   glusterfs:
>                     description: 'Glusterfs represents a Glusterfs mount on the host
>                       that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
>                     properties:
>                       endpoints:
>                         description: 'EndpointsName is the endpoint name that details
>                           Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
>                         type: string
>                       path:
>                         description: 'Path is the Glusterfs volume path. More info:
>                           https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the Glusterfs volume
>                           to be mounted with read-only permissions. Defaults to false.
>                           More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
>                         type: boolean
>                     required:
>                     - endpoints
>                     - path
>                     type: object
>                   hostPath:
>                     description: 'HostPath represents a pre-existing file or directory
>                       on the host machine that is directly exposed to the container.
>                       This is generally used for system agents or other privileged
>                       things that are allowed to see the host machine. Most containers
>                       will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
>                       --- TODO(jonesdl) We need to restrict who can use host directory
>                       mounts and who can/can not mount host directories as read/write.'
>                     properties:
>                       path:
>                         description: 'Path of the directory on the host. If the path
>                           is a symlink, it will follow the link to the real path.
>                           More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
>                         type: string
>                       type:
>                         description: 'Type for HostPath Volume Defaults to "" More
>                           info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
>                         type: string
>                     required:
>                     - path
>                     type: object
>                   iscsi:
>                     description: 'ISCSI represents an ISCSI Disk resource that is
>                       attached to a kubelet''s host machine and then exposed to the
>                       pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
>                     properties:
>                       chapAuthDiscovery:
>                         description: whether support iSCSI Discovery CHAP authentication
>                         type: boolean
>                       chapAuthSession:
>                         description: whether support iSCSI Session CHAP authentication
>                         type: boolean
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#iscsi
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       initiatorName:
>                         description: Custom iSCSI Initiator Name. If initiatorName
>                           is specified with iscsiInterface simultaneously, new iSCSI
>                           interface <target portal>:<volume name> will be created
>                           for the connection.
>                         type: string
>                       iqn:
>                         description: Target iSCSI Qualified Name.
>                         type: string
>                       iscsiInterface:
>                         description: iSCSI Interface Name that uses an iSCSI transport.
>                           Defaults to 'default' (tcp).
>                         type: string
>                       lun:
>                         description: iSCSI Target Lun number.
>                         format: int32
>                         type: integer
>                       portals:
>                         description: iSCSI Target Portal List. The portal is either
>                           an IP or ip_addr:port if the port is other than default
>                           (typically TCP ports 860 and 3260).
>                         items:
>                           type: string
>                         type: array
>                       readOnly:
>                         description: ReadOnly here will force the ReadOnly setting
>                           in VolumeMounts. Defaults to false.
>                         type: boolean
>                       secretRef:
>                         description: CHAP Secret for iSCSI target and initiator authentication
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       targetPortal:
>                         description: iSCSI Target Portal. The Portal is either an
>                           IP or ip_addr:port if the port is other than default (typically
>                           TCP ports 860 and 3260).
>                         type: string
>                     required:
>                     - iqn
>                     - lun
>                     - targetPortal
>                     type: object
>                   name:
>                     description: 'Volume''s name. Must be a DNS_LABEL and unique within
>                       the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
>                     type: string
>                   nfs:
>                     description: 'NFS represents an NFS mount on the host that shares
>                       a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                     properties:
>                       path:
>                         description: 'Path that is exported by the NFS server. More
>                           info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the NFS export to be
>                           mounted with read-only permissions. Defaults to false. More
>                           info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                         type: boolean
>                       server:
>                         description: 'Server is the hostname or IP address of the
>                           NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                         type: string
>                     required:
>                     - path
>                     - server
>                     type: object
>                   persistentVolumeClaim:
>                     description: 'PersistentVolumeClaimVolumeSource represents a reference
>                       to a PersistentVolumeClaim in the same namespace. More info:
>                       https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                     properties:
>                       claimName:
>                         description: 'ClaimName is the name of a PersistentVolumeClaim
>                           in the same namespace as the pod using this volume. More
>                           info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                         type: string
>                       readOnly:
>                         description: Will force the ReadOnly setting in VolumeMounts.
>                           Default false.
>                         type: boolean
>                     required:
>                     - claimName
>                     type: object
>                   photonPersistentDisk:
>                     description: PhotonPersistentDisk represents a PhotonController
>                       persistent disk attached and mounted on kubelets host machine
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       pdID:
>                         description: ID that identifies Photon Controller persistent
>                           disk
>                         type: string
>                     required:
>                     - pdID
>                     type: object
>                   portworxVolume:
>                     description: PortworxVolume represents a portworx volume attached
>                       and mounted on kubelets host machine
>                     properties:
>                       fsType:
>                         description: FSType represents the filesystem type to mount
>                           Must be a filesystem type supported by the host operating
>                           system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4"
>                           if unspecified.
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       volumeID:
>                         description: VolumeID uniquely identifies a Portworx volume
>                         type: string
>                     required:
>                     - volumeID
>                     type: object
>                   projected:
>                     description: Items for all in one resources secrets, configmaps,
>                       and downward API
>                     properties:
>                       defaultMode:
>                         description: Mode bits to use on created files by default.
>                           Must be a value between 0 and 0777. Directories within the
>                           path are not affected by this setting. This might be in
>                           conflict with other options that affect the file mode, like
>                           fsGroup, and the result can be other mode bits set.
>                         format: int32
>                         type: integer
>                       sources:
>                         description: list of volume projections
>                         items:
>                           description: Projection that may be projected along with
>                             other supported volume types
>                           properties:
>                             configMap:
>                               description: information about the configMap data to
>                                 project
>                               properties:
>                                 items:
>                                   description: If unspecified, each key-value pair
>                                     in the Data field of the referenced ConfigMap
>                                     will be projected into the volume as a file whose
>                                     name is the key and content is the value. If specified,
>                                     the listed keys will be projected into the specified
>                                     paths, and unlisted keys will not be present.
>                                     If a key is specified which is not present in
>                                     the ConfigMap, the volume setup will error unless
>                                     it is marked optional. Paths must be relative
>                                     and may not contain the '..' path or start with
>                                     '..'.
>                                   items:
>                                     description: Maps a string key to a path within
>                                       a volume.
>                                     properties:
>                                       key:
>                                         description: The key to project.
>                                         type: string
>                                       mode:
>                                         description: 'Optional: mode bits to use on
>                                           this file, must be a value between 0 and
>                                           0777. If not specified, the volume defaultMode
>                                           will be used. This might be in conflict
>                                           with other options that affect the file
>                                           mode, like fsGroup, and the result can be
>                                           other mode bits set.'
>                                         format: int32
>                                         type: integer
>                                       path:
>                                         description: The relative path of the file
>                                           to map the key to. May not be an absolute
>                                           path. May not contain the path element '..'.
>                                           May not start with the string '..'.
>                                         type: string
>                                     required:
>                                     - key
>                                     - path
>                                     type: object
>                                   type: array
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the ConfigMap or its
>                                     keys must be defined
>                                   type: boolean
>                               type: object
>                             downwardAPI:
>                               description: information about the downwardAPI data
>                                 to project
>                               properties:
>                                 items:
>                                   description: Items is a list of DownwardAPIVolume
>                                     file
>                                   items:
>                                     description: DownwardAPIVolumeFile represents
>                                       information to create the file containing the
>                                       pod field
>                                     properties:
>                                       fieldRef:
>                                         description: 'Required: Selects a field of
>                                           the pod: only annotations, labels, name
>                                           and namespace are supported.'
>                                         properties:
>                                           apiVersion:
>                                             description: Version of the schema the
>                                               FieldPath is written in terms of, defaults
>                                               to "v1".
>                                             type: string
>                                           fieldPath:
>                                             description: Path of the field to select
>                                               in the specified API version.
>                                             type: string
>                                         required:
>                                         - fieldPath
>                                         type: object
>                                       mode:
>                                         description: 'Optional: mode bits to use on
>                                           this file, must be a value between 0 and
>                                           0777. If not specified, the volume defaultMode
>                                           will be used. This might be in conflict
>                                           with other options that affect the file
>                                           mode, like fsGroup, and the result can be
>                                           other mode bits set.'
>                                         format: int32
>                                         type: integer
>                                       path:
>                                         description: 'Required: Path is  the relative
>                                           path name of the file to be created. Must
>                                           not be absolute or contain the ''..'' path.
>                                           Must be utf-8 encoded. The first item of
>                                           the relative path must not start with ''..'''
>                                         type: string
>                                       resourceFieldRef:
>                                         description: 'Selects a resource of the container:
>                                           only resources limits and requests (limits.cpu,
>                                           limits.memory, requests.cpu and requests.memory)
>                                           are currently supported.'
>                                         properties:
>                                           containerName:
>                                             description: 'Container name: required
>                                               for volumes, optional for env vars'
>                                             type: string
>                                           divisor:
>                                             description: Specifies the output format
>                                               of the exposed resources, defaults to
>                                               "1"
>                                             type: string
>                                           resource:
>                                             description: 'Required: resource to select'
>                                             type: string
>                                         required:
>                                         - resource
>                                         type: object
>                                     required:
>                                     - path
>                                     type: object
>                                   type: array
>                               type: object
>                             secret:
>                               description: information about the secret data to project
>                               properties:
>                                 items:
>                                   description: If unspecified, each key-value pair
>                                     in the Data field of the referenced Secret will
>                                     be projected into the volume as a file whose name
>                                     is the key and content is the value. If specified,
>                                     the listed keys will be projected into the specified
>                                     paths, and unlisted keys will not be present.
>                                     If a key is specified which is not present in
>                                     the Secret, the volume setup will error unless
>                                     it is marked optional. Paths must be relative
>                                     and may not contain the '..' path or start with
>                                     '..'.
>                                   items:
>                                     description: Maps a string key to a path within
>                                       a volume.
>                                     properties:
>                                       key:
>                                         description: The key to project.
>                                         type: string
>                                       mode:
>                                         description: 'Optional: mode bits to use on
>                                           this file, must be a value between 0 and
>                                           0777. If not specified, the volume defaultMode
>                                           will be used. This might be in conflict
>                                           with other options that affect the file
>                                           mode, like fsGroup, and the result can be
>                                           other mode bits set.'
>                                         format: int32
>                                         type: integer
>                                       path:
>                                         description: The relative path of the file
>                                           to map the key to. May not be an absolute
>                                           path. May not contain the path element '..'.
>                                           May not start with the string '..'.
>                                         type: string
>                                     required:
>                                     - key
>                                     - path
>                                     type: object
>                                   type: array
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the Secret or its key
>                                     must be defined
>                                   type: boolean
>                               type: object
>                             serviceAccountToken:
>                               description: information about the serviceAccountToken
>                                 data to project
>                               properties:
>                                 audience:
>                                   description: Audience is the intended audience of
>                                     the token. A recipient of a token must identify
>                                     itself with an identifier specified in the audience
>                                     of the token, and otherwise should reject the
>                                     token. The audience defaults to the identifier
>                                     of the apiserver.
>                                   type: string
>                                 expirationSeconds:
>                                   description: ExpirationSeconds is the requested
>                                     duration of validity of the service account token.
>                                     As the token approaches expiration, the kubelet
>                                     volume plugin will proactively rotate the service
>                                     account token. The kubelet will start trying to
>                                     rotate the token if the token is older than 80
>                                     percent of its time to live or if the token is
>                                     older than 24 hours.Defaults to 1 hour and must
>                                     be at least 10 minutes.
>                                   format: int64
>                                   type: integer
>                                 path:
>                                   description: Path is the path relative to the mount
>                                     point of the file to project the token into.
>                                   type: string
>                               required:
>                               - path
>                               type: object
>                           type: object
>                         type: array
>                     required:
>                     - sources
>                     type: object
>                   quobyte:
>                     description: Quobyte represents a Quobyte mount on the host that
>                       shares a pod's lifetime
>                     properties:
>                       group:
>                         description: Group to map volume access to Default is no group
>                         type: string
>                       readOnly:
>                         description: ReadOnly here will force the Quobyte volume to
>                           be mounted with read-only permissions. Defaults to false.
>                         type: boolean
>                       registry:
>                         description: Registry represents a single or multiple Quobyte
>                           Registry services specified as a string as host:port pair
>                           (multiple entries are separated with commas) which acts
>                           as the central registry for volumes
>                         type: string
>                       tenant:
>                         description: Tenant owning the given Quobyte volume in the
>                           Backend Used with dynamically provisioned Quobyte volumes,
>                           value is set by the plugin
>                         type: string
>                       user:
>                         description: User to map volume access to Defaults to serivceaccount
>                           user
>                         type: string
>                       volume:
>                         description: Volume is a string that references an already
>                           created Quobyte volume by name.
>                         type: string
>                     required:
>                     - registry
>                     - volume
>                     type: object
>                   rbd:
>                     description: 'RBD represents a Rados Block Device mount on the
>                       host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#rbd
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       image:
>                         description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                       keyring:
>                         description: 'Keyring is the path to key ring for RBDUser.
>                           Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                       monitors:
>                         description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         items:
>                           type: string
>                         type: array
>                       pool:
>                         description: 'The rados pool name. Default is rbd. More info:
>                           https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the ReadOnly setting
>                           in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: boolean
>                       secretRef:
>                         description: 'SecretRef is name of the authentication secret
>                           for RBDUser. If provided overrides keyring. Default is nil.
>                           More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       user:
>                         description: 'The rados user name. Default is admin. More
>                           info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                     required:
>                     - image
>                     - monitors
>                     type: object
>                   scaleIO:
>                     description: ScaleIO represents a ScaleIO persistent volume attached
>                       and mounted on Kubernetes nodes.
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Default is "xfs".
>                         type: string
>                       gateway:
>                         description: The host address of the ScaleIO API Gateway.
>                         type: string
>                       protectionDomain:
>                         description: The name of the ScaleIO Protection Domain for
>                           the configured storage.
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       secretRef:
>                         description: SecretRef references to the secret for ScaleIO
>                           user and other sensitive information. If this is not provided,
>                           Login operation will fail.
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       sslEnabled:
>                         description: Flag to enable/disable SSL communication with
>                           Gateway, default false
>                         type: boolean
>                       storageMode:
>                         description: Indicates whether the storage for a volume should
>                           be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
>                         type: string
>                       storagePool:
>                         description: The ScaleIO Storage Pool associated with the
>                           protection domain.
>                         type: string
>                       system:
>                         description: The name of the storage system as configured
>                           in ScaleIO.
>                         type: string
>                       volumeName:
>                         description: The name of a volume already created in the ScaleIO
>                           system that is associated with this volume source.
>                         type: string
>                     required:
>                     - gateway
>                     - secretRef
>                     - system
>                     type: object
>                   secret:
>                     description: 'Secret represents a secret that should populate
>                       this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
>                     properties:
>                       defaultMode:
>                         description: 'Optional: mode bits to use on created files
>                           by default. Must be a value between 0 and 0777. Defaults
>                           to 0644. Directories within the path are not affected by
>                           this setting. This might be in conflict with other options
>                           that affect the file mode, like fsGroup, and the result
>                           can be other mode bits set.'
>                         format: int32
>                         type: integer
>                       items:
>                         description: If unspecified, each key-value pair in the Data
>                           field of the referenced Secret will be projected into the
>                           volume as a file whose name is the key and content is the
>                           value. If specified, the listed keys will be projected into
>                           the specified paths, and unlisted keys will not be present.
>                           If a key is specified which is not present in the Secret,
>                           the volume setup will error unless it is marked optional.
>                           Paths must be relative and may not contain the '..' path
>                           or start with '..'.
>                         items:
>                           description: Maps a string key to a path within a volume.
>                           properties:
>                             key:
>                               description: The key to project.
>                               type: string
>                             mode:
>                               description: 'Optional: mode bits to use on this file,
>                                 must be a value between 0 and 0777. If not specified,
>                                 the volume defaultMode will be used. This might be
>                                 in conflict with other options that affect the file
>                                 mode, like fsGroup, and the result can be other mode
>                                 bits set.'
>                               format: int32
>                               type: integer
>                             path:
>                               description: The relative path of the file to map the
>                                 key to. May not be an absolute path. May not contain
>                                 the path element '..'. May not start with the string
>                                 '..'.
>                               type: string
>                           required:
>                           - key
>                           - path
>                           type: object
>                         type: array
>                       optional:
>                         description: Specify whether the Secret or its keys must be
>                           defined
>                         type: boolean
>                       secretName:
>                         description: 'Name of the secret in the pod''s namespace to
>                           use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
>                         type: string
>                     type: object
>                   storageos:
>                     description: StorageOS represents a StorageOS volume attached
>                       and mounted on Kubernetes nodes.
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       secretRef:
>                         description: SecretRef specifies the secret to use for obtaining
>                           the StorageOS API credentials.  If not specified, default
>                           values will be attempted.
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       volumeName:
>                         description: VolumeName is the human-readable name of the
>                           StorageOS volume.  Volume names are only unique within a
>                           namespace.
>                         type: string
>                       volumeNamespace:
>                         description: VolumeNamespace specifies the scope of the volume
>                           within StorageOS.  If no namespace is specified then the
>                           Pod's namespace will be used.  This allows the Kubernetes
>                           name scoping to be mirrored within StorageOS for tighter
>                           integration. Set VolumeName to any name to override the
>                           default behaviour. Set to "default" if you are not using
>                           namespaces within StorageOS. Namespaces that do not pre-exist
>                           within StorageOS will be created.
>                         type: string
>                     type: object
>                   vsphereVolume:
>                     description: VsphereVolume represents a vSphere volume attached
>                       and mounted on kubelets host machine
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       storagePolicyID:
>                         description: Storage Policy Based Management (SPBM) profile
>                           ID associated with the StoragePolicyName.
>                         type: string
>                       storagePolicyName:
>                         description: Storage Policy Based Management (SPBM) profile
>                           name.
>                         type: string
>                       volumePath:
>                         description: Path that identifies vSphere volume vmdk
>                         type: string
>                     required:
>                     - volumePath
>                     type: object
>                 required:
>                 - name
>                 type: object
>               type: array
>             walCompression:
>               description: Enable compression of the write-ahead log using Snappy.
>                 This flag is only available in versions of Prometheus >= 2.11.0.
>               type: boolean
>           type: object
>         status:
>           description: 'Most recent observed status of the Prometheus cluster. Read-only.
>             Not included when requesting from the apiserver, only from the Prometheus
>             Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
>           properties:
>             availableReplicas:
>               description: Total number of available pods (ready for at least minReadySeconds)
>                 targeted by this Prometheus deployment.
>               format: int32
>               type: integer
>             paused:
>               description: Represents whether any actions on the underlaying managed
>                 objects are being performed. Only delete actions will be performed.
>               type: boolean
>             replicas:
>               description: Total number of non-terminated pods targeted by this Prometheus
>                 deployment (their labels match the selector).
>               format: int32
>               type: integer
>             unavailableReplicas:
>               description: Total number of unavailable pods targeted by this Prometheus
>                 deployment.
>               format: int32
>               type: integer
>             updatedReplicas:
>               description: Total number of non-terminated pods targeted by this Prometheus
>                 deployment that have the desired version spec.
>               format: int32
>               type: integer
>           required:
>           - availableReplicas
>           - paused
>           - replicas
>           - unavailableReplicas
>           - updatedReplicas
>           type: object
>       required:
>       - spec
>       type: object
>   version: v1
>   versions:
>   - name: v1
>     served: true
>     storage: true
> status:
>   acceptedNames:
>     kind: ""
>     plural: ""
>   conditions: []
>   storedVersions: []
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/crds/crd-prometheusrules.yaml packages/monitoring/charts/crds/crd-prometheusrules.yaml
0a1,94
> # https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.35/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
> apiVersion: apiextensions.k8s.io/v1beta1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.2.4
>     helm.sh/hook: crd-install
>   creationTimestamp: null
>   name: prometheusrules.monitoring.coreos.com
> spec:
>   group: monitoring.coreos.com
>   names:
>     kind: PrometheusRule
>     listKind: PrometheusRuleList
>     plural: prometheusrules
>     singular: prometheusrule
>   preserveUnknownFields: false
>   scope: Namespaced
>   validation:
>     openAPIV3Schema:
>       description: PrometheusRule defines alerting rules for a Prometheus instance
>       properties:
>         apiVersion:
>           description: 'APIVersion defines the versioned schema of this representation
>             of an object. Servers should convert recognized schemas to the latest
>             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
>           type: string
>         kind:
>           description: 'Kind is a string value representing the REST resource this
>             object represents. Servers may infer this from the endpoint the client
>             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
>           type: string
>         metadata:
>           type: object
>         spec:
>           description: Specification of desired alerting rule definitions for Prometheus.
>           properties:
>             groups:
>               description: Content of Prometheus rule file
>               items:
>                 description: RuleGroup is a list of sequentially evaluated recording
>                   and alerting rules.
>                 properties:
>                   interval:
>                     type: string
>                   name:
>                     type: string
>                   rules:
>                     items:
>                       description: Rule describes an alerting or recording rule.
>                       properties:
>                         alert:
>                           type: string
>                         annotations:
>                           additionalProperties:
>                             type: string
>                           type: object
>                         expr:
>                           anyOf:
>                           - type: integer
>                           - type: string
>                           x-kubernetes-int-or-string: true
>                         for:
>                           type: string
>                         labels:
>                           additionalProperties:
>                             type: string
>                           type: object
>                         record:
>                           type: string
>                       required:
>                       - expr
>                       type: object
>                     type: array
>                 required:
>                 - name
>                 - rules
>                 type: object
>               type: array
>           type: object
>       required:
>       - spec
>       type: object
>   version: v1
>   versions:
>   - name: v1
>     served: true
>     storage: true
> status:
>   acceptedNames:
>     kind: ""
>     plural: ""
>   conditions: []
>   storedVersions: []
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/crds/crd-servicemonitor.yaml packages/monitoring/charts/crds/crd-servicemonitor.yaml
0a1,466
> # https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.35/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
> apiVersion: apiextensions.k8s.io/v1beta1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.2.4
>     helm.sh/hook: crd-install
>   creationTimestamp: null
>   name: servicemonitors.monitoring.coreos.com
> spec:
>   group: monitoring.coreos.com
>   names:
>     kind: ServiceMonitor
>     listKind: ServiceMonitorList
>     plural: servicemonitors
>     singular: servicemonitor
>   preserveUnknownFields: false
>   scope: Namespaced
>   validation:
>     openAPIV3Schema:
>       description: ServiceMonitor defines monitoring for a set of services.
>       properties:
>         apiVersion:
>           description: 'APIVersion defines the versioned schema of this representation
>             of an object. Servers should convert recognized schemas to the latest
>             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
>           type: string
>         kind:
>           description: 'Kind is a string value representing the REST resource this
>             object represents. Servers may infer this from the endpoint the client
>             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
>           type: string
>         metadata:
>           type: object
>         spec:
>           description: Specification of desired Service selection for target discovery
>             by Prometheus.
>           properties:
>             endpoints:
>               description: A list of endpoints allowed as part of this ServiceMonitor.
>               items:
>                 description: Endpoint defines a scrapeable endpoint serving Prometheus
>                   metrics.
>                 properties:
>                   basicAuth:
>                     description: 'BasicAuth allow an endpoint to authenticate over
>                       basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
>                     properties:
>                       password:
>                         description: The secret in the service monitor namespace that
>                           contains the password for authentication.
>                         properties:
>                           key:
>                             description: The key of the secret to select from.  Must
>                               be a valid secret key.
>                             type: string
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                           optional:
>                             description: Specify whether the Secret or its key must
>                               be defined
>                             type: boolean
>                         required:
>                         - key
>                         type: object
>                       username:
>                         description: The secret in the service monitor namespace that
>                           contains the username for authentication.
>                         properties:
>                           key:
>                             description: The key of the secret to select from.  Must
>                               be a valid secret key.
>                             type: string
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                           optional:
>                             description: Specify whether the Secret or its key must
>                               be defined
>                             type: boolean
>                         required:
>                         - key
>                         type: object
>                     type: object
>                   bearerTokenFile:
>                     description: File to read bearer token for scraping targets.
>                     type: string
>                   bearerTokenSecret:
>                     description: Secret to mount to read bearer token for scraping
>                       targets. The secret needs to be in the same namespace as the
>                       service monitor and accessible by the Prometheus Operator.
>                     properties:
>                       key:
>                         description: The key of the secret to select from.  Must be
>                           a valid secret key.
>                         type: string
>                       name:
>                         description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                           TODO: Add other useful fields. apiVersion, kind, uid?'
>                         type: string
>                       optional:
>                         description: Specify whether the Secret or its key must be
>                           defined
>                         type: boolean
>                     required:
>                     - key
>                     type: object
>                   honorLabels:
>                     description: HonorLabels chooses the metric's labels on collisions
>                       with target labels.
>                     type: boolean
>                   honorTimestamps:
>                     description: HonorTimestamps controls whether Prometheus respects
>                       the timestamps present in scraped data.
>                     type: boolean
>                   interval:
>                     description: Interval at which metrics should be scraped
>                     type: string
>                   metricRelabelings:
>                     description: MetricRelabelConfigs to apply to samples before ingestion.
>                     items:
>                       description: 'RelabelConfig allows dynamic rewriting of the
>                         label set, being applied to samples before ingestion. It defines
>                         `<metric_relabel_configs>`-section of Prometheus configuration.
>                         More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
>                       properties:
>                         action:
>                           description: Action to perform based on regex matching.
>                             Default is 'replace'
>                           type: string
>                         modulus:
>                           description: Modulus to take of the hash of the source label
>                             values.
>                           format: int64
>                           type: integer
>                         regex:
>                           description: Regular expression against which the extracted
>                             value is matched. Default is '(.*)'
>                           type: string
>                         replacement:
>                           description: Replacement value against which a regex replace
>                             is performed if the regular expression matches. Regex
>                             capture groups are available. Default is '$1'
>                           type: string
>                         separator:
>                           description: Separator placed between concatenated source
>                             label values. default is ';'.
>                           type: string
>                         sourceLabels:
>                           description: The source labels select values from existing
>                             labels. Their content is concatenated using the configured
>                             separator and matched against the configured regular expression
>                             for the replace, keep, and drop actions.
>                           items:
>                             type: string
>                           type: array
>                         targetLabel:
>                           description: Label to which the resulting value is written
>                             in a replace action. It is mandatory for replace actions.
>                             Regex capture groups are available.
>                           type: string
>                       type: object
>                     type: array
>                   params:
>                     additionalProperties:
>                       items:
>                         type: string
>                       type: array
>                     description: Optional HTTP URL parameters
>                     type: object
>                   path:
>                     description: HTTP path to scrape for metrics.
>                     type: string
>                   port:
>                     description: Name of the service port this endpoint refers to.
>                       Mutually exclusive with targetPort.
>                     type: string
>                   proxyUrl:
>                     description: ProxyURL eg http://proxyserver:2195 Directs scrapes
>                       to proxy through this endpoint.
>                     type: string
>                   relabelings:
>                     description: 'RelabelConfigs to apply to samples before scraping.
>                       More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
>                     items:
>                       description: 'RelabelConfig allows dynamic rewriting of the
>                         label set, being applied to samples before ingestion. It defines
>                         `<metric_relabel_configs>`-section of Prometheus configuration.
>                         More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
>                       properties:
>                         action:
>                           description: Action to perform based on regex matching.
>                             Default is 'replace'
>                           type: string
>                         modulus:
>                           description: Modulus to take of the hash of the source label
>                             values.
>                           format: int64
>                           type: integer
>                         regex:
>                           description: Regular expression against which the extracted
>                             value is matched. Default is '(.*)'
>                           type: string
>                         replacement:
>                           description: Replacement value against which a regex replace
>                             is performed if the regular expression matches. Regex
>                             capture groups are available. Default is '$1'
>                           type: string
>                         separator:
>                           description: Separator placed between concatenated source
>                             label values. default is ';'.
>                           type: string
>                         sourceLabels:
>                           description: The source labels select values from existing
>                             labels. Their content is concatenated using the configured
>                             separator and matched against the configured regular expression
>                             for the replace, keep, and drop actions.
>                           items:
>                             type: string
>                           type: array
>                         targetLabel:
>                           description: Label to which the resulting value is written
>                             in a replace action. It is mandatory for replace actions.
>                             Regex capture groups are available.
>                           type: string
>                       type: object
>                     type: array
>                   scheme:
>                     description: HTTP scheme to use for scraping.
>                     type: string
>                   scrapeTimeout:
>                     description: Timeout after which the scrape is ended
>                     type: string
>                   targetPort:
>                     anyOf:
>                     - type: integer
>                     - type: string
>                     description: Name or number of the target port of the endpoint.
>                       Mutually exclusive with port.
>                     x-kubernetes-int-or-string: true
>                   tlsConfig:
>                     description: TLS configuration to use when scraping the endpoint
>                     properties:
>                       ca:
>                         description: Stuct containing the CA cert to use for the targets.
>                         properties:
>                           configMap:
>                             description: ConfigMap containing data to use for the
>                               targets.
>                             properties:
>                               key:
>                                 description: The key to select.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the ConfigMap or its
>                                   key must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                           secret:
>                             description: Secret containing data to use for the targets.
>                             properties:
>                               key:
>                                 description: The key of the secret to select from.  Must
>                                   be a valid secret key.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the Secret or its key
>                                   must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                         type: object
>                       caFile:
>                         description: Path to the CA cert in the Prometheus container
>                           to use for the targets.
>                         type: string
>                       cert:
>                         description: Struct containing the client cert file for the
>                           targets.
>                         properties:
>                           configMap:
>                             description: ConfigMap containing data to use for the
>                               targets.
>                             properties:
>                               key:
>                                 description: The key to select.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the ConfigMap or its
>                                   key must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                           secret:
>                             description: Secret containing data to use for the targets.
>                             properties:
>                               key:
>                                 description: The key of the secret to select from.  Must
>                                   be a valid secret key.
>                                 type: string
>                               name:
>                                 description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                   TODO: Add other useful fields. apiVersion, kind,
>                                   uid?'
>                                 type: string
>                               optional:
>                                 description: Specify whether the Secret or its key
>                                   must be defined
>                                 type: boolean
>                             required:
>                             - key
>                             type: object
>                         type: object
>                       certFile:
>                         description: Path to the client cert file in the Prometheus
>                           container for the targets.
>                         type: string
>                       insecureSkipVerify:
>                         description: Disable target certificate validation.
>                         type: boolean
>                       keyFile:
>                         description: Path to the client key file in the Prometheus
>                           container for the targets.
>                         type: string
>                       keySecret:
>                         description: Secret containing the client key file for the
>                           targets.
>                         properties:
>                           key:
>                             description: The key of the secret to select from.  Must
>                               be a valid secret key.
>                             type: string
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                           optional:
>                             description: Specify whether the Secret or its key must
>                               be defined
>                             type: boolean
>                         required:
>                         - key
>                         type: object
>                       serverName:
>                         description: Used to verify the hostname for the targets.
>                         type: string
>                     type: object
>                 type: object
>               type: array
>             jobLabel:
>               description: The label to use to retrieve the job name from.
>               type: string
>             namespaceSelector:
>               description: Selector to select which namespaces the Endpoints objects
>                 are discovered from.
>               properties:
>                 any:
>                   description: Boolean describing whether all namespaces are selected
>                     in contrast to a list restricting them.
>                   type: boolean
>                 matchNames:
>                   description: List of namespace names.
>                   items:
>                     type: string
>                   type: array
>               type: object
>             podTargetLabels:
>               description: PodTargetLabels transfers labels on the Kubernetes Pod
>                 onto the target.
>               items:
>                 type: string
>               type: array
>             sampleLimit:
>               description: SampleLimit defines per-scrape limit on number of scraped
>                 samples that will be accepted.
>               format: int64
>               type: integer
>             selector:
>               description: Selector to select Endpoints objects.
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>             targetLabels:
>               description: TargetLabels transfers labels on the Kubernetes Service
>                 onto the target.
>               items:
>                 type: string
>               type: array
>           required:
>           - endpoints
>           - selector
>           type: object
>       required:
>       - spec
>       type: object
>   version: v1
>   versions:
>   - name: v1
>     served: true
>     storage: true
> status:
>   acceptedNames:
>     kind: ""
>     plural: ""
>   conditions: []
>   storedVersions: []
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/crds/crd-thanosrulers.yaml packages/monitoring/charts/crds/crd-thanosrulers.yaml
0a1,3821
> # https://raw.githubusercontent.com/coreos/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
> apiVersion: apiextensions.k8s.io/v1beta1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.2.4
>     helm.sh/hook: crd-install
>   creationTimestamp: null
>   name: thanosrulers.monitoring.coreos.com
> spec:
>   group: monitoring.coreos.com
>   names:
>     kind: ThanosRuler
>     listKind: ThanosRulerList
>     plural: thanosrulers
>     singular: thanosruler
>   preserveUnknownFields: false
>   scope: Namespaced
>   validation:
>     openAPIV3Schema:
>       description: ThanosRuler defines a ThanosRuler deployment.
>       properties:
>         apiVersion:
>           description: 'APIVersion defines the versioned schema of this representation
>             of an object. Servers should convert recognized schemas to the latest
>             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
>           type: string
>         kind:
>           description: 'Kind is a string value representing the REST resource this
>             object represents. Servers may infer this from the endpoint the client
>             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
>           type: string
>         metadata:
>           type: object
>         spec:
>           description: 'Specification of the desired behavior of the ThanosRuler cluster.
>             More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
>           properties:
>             alertDropLabels:
>               description: AlertDropLabels configure the label names which should
>                 be dropped in ThanosRuler alerts. If `labels` field is not provided,
>                 `thanos_ruler_replica` will be dropped in alerts by default.
>               items:
>                 type: string
>               type: array
>             alertmanagersConfig:
>               description: Define configuration for connecting to alertmanager.  Only
>                 available with thanos v0.10.0 and higher.  Maps to the `alertmanagers.config`
>                 arg.
>               properties:
>                 key:
>                   description: The key of the secret to select from.  Must be a valid
>                     secret key.
>                   type: string
>                 name:
>                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                     TODO: Add other useful fields. apiVersion, kind, uid?'
>                   type: string
>                 optional:
>                   description: Specify whether the Secret or its key must be defined
>                   type: boolean
>               required:
>               - key
>               type: object
>             alertmanagersUrl:
>               description: Define URL to send alerts to alertmanager.  For Thanos
>                 v0.10.0 and higher, AlertManagersConfig should be used instead. Maps
>                 to the `alertmanagers.url` arg.
>               type: string
>             containers:
>               description: 'Containers allows injecting additional containers or modifying
>                 operator generated containers. This can be used to allow adding an
>                 authentication proxy to a ThanosRuler pod or to change the behavior
>                 of an operator generated container. Containers described here modify
>                 an operator generated container if they share the same name and modifications
>                 are done via a strategic merge patch. The current container names
>                 are: `thanos-ruler` and `rules-configmap-reloader`. Overriding containers
>                 is entirely outside the scope of what the maintainers will support
>                 and by doing so, you accept that this behaviour may break at any time
>                 without notice.'
>               items:
>                 description: A single application container that you want to run within
>                   a pod.
>                 properties:
>                   args:
>                     description: 'Arguments to the entrypoint. The docker image''s
>                       CMD is used if this is not provided. Variable references $(VAR_NAME)
>                       are expanded using the container''s environment. If a variable
>                       cannot be resolved, the reference in the input string will be
>                       unchanged. The $(VAR_NAME) syntax can be escaped with a double
>                       $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
>                       regardless of whether the variable exists or not. Cannot be
>                       updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   command:
>                     description: 'Entrypoint array. Not executed within a shell. The
>                       docker image''s ENTRYPOINT is used if this is not provided.
>                       Variable references $(VAR_NAME) are expanded using the container''s
>                       environment. If a variable cannot be resolved, the reference
>                       in the input string will be unchanged. The $(VAR_NAME) syntax
>                       can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                       will never be expanded, regardless of whether the variable exists
>                       or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   env:
>                     description: List of environment variables to set in the container.
>                       Cannot be updated.
>                     items:
>                       description: EnvVar represents an environment variable present
>                         in a Container.
>                       properties:
>                         name:
>                           description: Name of the environment variable. Must be a
>                             C_IDENTIFIER.
>                           type: string
>                         value:
>                           description: 'Variable references $(VAR_NAME) are expanded
>                             using the previous defined environment variables in the
>                             container and any service environment variables. If a
>                             variable cannot be resolved, the reference in the input
>                             string will be unchanged. The $(VAR_NAME) syntax can be
>                             escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                             will never be expanded, regardless of whether the variable
>                             exists or not. Defaults to "".'
>                           type: string
>                         valueFrom:
>                           description: Source for the environment variable's value.
>                             Cannot be used if value is not empty.
>                           properties:
>                             configMapKeyRef:
>                               description: Selects a key of a ConfigMap.
>                               properties:
>                                 key:
>                                   description: The key to select.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the ConfigMap or its
>                                     key must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                             fieldRef:
>                               description: 'Selects a field of the pod: supports metadata.name,
>                                 metadata.namespace, metadata.labels, metadata.annotations,
>                                 spec.nodeName, spec.serviceAccountName, status.hostIP,
>                                 status.podIP.'
>                               properties:
>                                 apiVersion:
>                                   description: Version of the schema the FieldPath
>                                     is written in terms of, defaults to "v1".
>                                   type: string
>                                 fieldPath:
>                                   description: Path of the field to select in the
>                                     specified API version.
>                                   type: string
>                               required:
>                               - fieldPath
>                               type: object
>                             resourceFieldRef:
>                               description: 'Selects a resource of the container: only
>                                 resources limits and requests (limits.cpu, limits.memory,
>                                 limits.ephemeral-storage, requests.cpu, requests.memory
>                                 and requests.ephemeral-storage) are currently supported.'
>                               properties:
>                                 containerName:
>                                   description: 'Container name: required for volumes,
>                                     optional for env vars'
>                                   type: string
>                                 divisor:
>                                   description: Specifies the output format of the
>                                     exposed resources, defaults to "1"
>                                   type: string
>                                 resource:
>                                   description: 'Required: resource to select'
>                                   type: string
>                               required:
>                               - resource
>                               type: object
>                             secretKeyRef:
>                               description: Selects a key of a secret in the pod's
>                                 namespace
>                               properties:
>                                 key:
>                                   description: The key of the secret to select from.  Must
>                                     be a valid secret key.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the Secret or its key
>                                     must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                           type: object
>                       required:
>                       - name
>                       type: object
>                     type: array
>                   envFrom:
>                     description: List of sources to populate environment variables
>                       in the container. The keys defined within a source must be a
>                       C_IDENTIFIER. All invalid keys will be reported as an event
>                       when the container is starting. When a key exists in multiple
>                       sources, the value associated with the last source will take
>                       precedence. Values defined by an Env with a duplicate key will
>                       take precedence. Cannot be updated.
>                     items:
>                       description: EnvFromSource represents the source of a set of
>                         ConfigMaps
>                       properties:
>                         configMapRef:
>                           description: The ConfigMap to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the ConfigMap must be defined
>                               type: boolean
>                           type: object
>                         prefix:
>                           description: An optional identifier to prepend to each key
>                             in the ConfigMap. Must be a C_IDENTIFIER.
>                           type: string
>                         secretRef:
>                           description: The Secret to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the Secret must be defined
>                               type: boolean
>                           type: object
>                       type: object
>                     type: array
>                   image:
>                     description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
>                       This field is optional to allow higher level config management
>                       to default or override container images in workload controllers
>                       like Deployments and StatefulSets.'
>                     type: string
>                   imagePullPolicy:
>                     description: 'Image pull policy. One of Always, Never, IfNotPresent.
>                       Defaults to Always if :latest tag is specified, or IfNotPresent
>                       otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
>                     type: string
>                   lifecycle:
>                     description: Actions that the management system should take in
>                       response to container lifecycle events. Cannot be updated.
>                     properties:
>                       postStart:
>                         description: 'PostStart is called immediately after a container
>                           is created. If the handler fails, the container is terminated
>                           and restarted according to its restart policy. Other management
>                           of the container blocks until the hook completes. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                       preStop:
>                         description: 'PreStop is called immediately before a container
>                           is terminated due to an API request or management event
>                           such as liveness/startup probe failure, preemption, resource
>                           contention, etc. The handler is not called if the container
>                           crashes or exits. The reason for termination is passed to
>                           the handler. The Pod''s termination grace period countdown
>                           begins before the PreStop hooked is executed. Regardless
>                           of the outcome of the handler, the container will eventually
>                           terminate within the Pod''s termination grace period. Other
>                           management of the container blocks until the hook completes
>                           or until the termination grace period is reached. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                     type: object
>                   livenessProbe:
>                     description: 'Periodic probe of container liveness. Container
>                       will be restarted if the probe fails. Cannot be updated. More
>                       info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   name:
>                     description: Name of the container specified as a DNS_LABEL. Each
>                       container in a pod must have a unique name (DNS_LABEL). Cannot
>                       be updated.
>                     type: string
>                   ports:
>                     description: List of ports to expose from the container. Exposing
>                       a port here gives the system additional information about the
>                       network connections a container uses, but is primarily informational.
>                       Not specifying a port here DOES NOT prevent that port from being
>                       exposed. Any port which is listening on the default "0.0.0.0"
>                       address inside a container will be accessible from the network.
>                       Cannot be updated.
>                     items:
>                       description: ContainerPort represents a network port in a single
>                         container.
>                       properties:
>                         containerPort:
>                           description: Number of port to expose on the pod's IP address.
>                             This must be a valid port number, 0 < x < 65536.
>                           format: int32
>                           type: integer
>                         hostIP:
>                           description: What host IP to bind the external port to.
>                           type: string
>                         hostPort:
>                           description: Number of port to expose on the host. If specified,
>                             this must be a valid port number, 0 < x < 65536. If HostNetwork
>                             is specified, this must match ContainerPort. Most containers
>                             do not need this.
>                           format: int32
>                           type: integer
>                         name:
>                           description: If specified, this must be an IANA_SVC_NAME
>                             and unique within the pod. Each named port in a pod must
>                             have a unique name. Name for the port that can be referred
>                             to by services.
>                           type: string
>                         protocol:
>                           description: Protocol for port. Must be UDP, TCP, or SCTP.
>                             Defaults to "TCP".
>                           type: string
>                       required:
>                       - containerPort
>                       type: object
>                     type: array
>                   readinessProbe:
>                     description: 'Periodic probe of container service readiness. Container
>                       will be removed from service endpoints if the probe fails. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   resources:
>                     description: 'Compute Resources required by this container. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                     properties:
>                       limits:
>                         additionalProperties:
>                           type: string
>                         description: 'Limits describes the maximum amount of compute
>                           resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                       requests:
>                         additionalProperties:
>                           type: string
>                         description: 'Requests describes the minimum amount of compute
>                           resources required. If Requests is omitted for a container,
>                           it defaults to Limits if that is explicitly specified, otherwise
>                           to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                     type: object
>                   securityContext:
>                     description: 'Security options the pod should run with. More info:
>                       https://kubernetes.io/docs/concepts/policy/security-context/
>                       More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
>                     properties:
>                       allowPrivilegeEscalation:
>                         description: 'AllowPrivilegeEscalation controls whether a
>                           process can gain more privileges than its parent process.
>                           This bool directly controls if the no_new_privs flag will
>                           be set on the container process. AllowPrivilegeEscalation
>                           is true always when the container is: 1) run as Privileged
>                           2) has CAP_SYS_ADMIN'
>                         type: boolean
>                       capabilities:
>                         description: The capabilities to add/drop when running containers.
>                           Defaults to the default set of capabilities granted by the
>                           container runtime.
>                         properties:
>                           add:
>                             description: Added capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                           drop:
>                             description: Removed capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                         type: object
>                       privileged:
>                         description: Run container in privileged mode. Processes in
>                           privileged containers are essentially equivalent to root
>                           on the host. Defaults to false.
>                         type: boolean
>                       procMount:
>                         description: procMount denotes the type of proc mount to use
>                           for the containers. The default is DefaultProcMount which
>                           uses the container runtime defaults for readonly paths and
>                           masked paths. This requires the ProcMountType feature flag
>                           to be enabled.
>                         type: string
>                       readOnlyRootFilesystem:
>                         description: Whether this container has a read-only root filesystem.
>                           Default is false.
>                         type: boolean
>                       runAsGroup:
>                         description: The GID to run the entrypoint of the container
>                           process. Uses runtime default if unset. May also be set
>                           in PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         format: int64
>                         type: integer
>                       runAsNonRoot:
>                         description: Indicates that the container must run as a non-root
>                           user. If true, the Kubelet will validate the image at runtime
>                           to ensure that it does not run as UID 0 (root) and fail
>                           to start the container if it does. If unset or false, no
>                           such validation will be performed. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         type: boolean
>                       runAsUser:
>                         description: The UID to run the entrypoint of the container
>                           process. Defaults to user specified in image metadata if
>                           unspecified. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         format: int64
>                         type: integer
>                       seLinuxOptions:
>                         description: The SELinux context to be applied to the container.
>                           If unspecified, the container runtime will allocate a random
>                           SELinux context for each container.  May also be set in
>                           PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         properties:
>                           level:
>                             description: Level is SELinux level label that applies
>                               to the container.
>                             type: string
>                           role:
>                             description: Role is a SELinux role label that applies
>                               to the container.
>                             type: string
>                           type:
>                             description: Type is a SELinux type label that applies
>                               to the container.
>                             type: string
>                           user:
>                             description: User is a SELinux user label that applies
>                               to the container.
>                             type: string
>                         type: object
>                       windowsOptions:
>                         description: The Windows specific settings applied to all
>                           containers. If unspecified, the options from the PodSecurityContext
>                           will be used. If set in both SecurityContext and PodSecurityContext,
>                           the value specified in SecurityContext takes precedence.
>                         properties:
>                           gmsaCredentialSpec:
>                             description: GMSACredentialSpec is where the GMSA admission
>                               webhook (https://github.com/kubernetes-sigs/windows-gmsa)
>                               inlines the contents of the GMSA credential spec named
>                               by the GMSACredentialSpecName field. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           gmsaCredentialSpecName:
>                             description: GMSACredentialSpecName is the name of the
>                               GMSA credential spec to use. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           runAsUserName:
>                             description: The UserName in Windows to run the entrypoint
>                               of the container process. Defaults to the user specified
>                               in image metadata if unspecified. May also be set in
>                               PodSecurityContext. If set in both SecurityContext and
>                               PodSecurityContext, the value specified in SecurityContext
>                               takes precedence. This field is alpha-level and it is
>                               only honored by servers that enable the WindowsRunAsUserName
>                               feature flag.
>                             type: string
>                         type: object
>                     type: object
>                   startupProbe:
>                     description: 'StartupProbe indicates that the Pod has successfully
>                       initialized. If specified, no other probes are executed until
>                       this completes successfully. If this probe fails, the Pod will
>                       be restarted, just as if the livenessProbe failed. This can
>                       be used to provide different probe parameters at the beginning
>                       of a Pod''s lifecycle, when it might take a long time to load
>                       data or warm a cache, than during steady-state operation. This
>                       cannot be updated. This is an alpha feature enabled by the StartupProbe
>                       feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   stdin:
>                     description: Whether this container should allocate a buffer for
>                       stdin in the container runtime. If this is not set, reads from
>                       stdin in the container will always result in EOF. Default is
>                       false.
>                     type: boolean
>                   stdinOnce:
>                     description: Whether the container runtime should close the stdin
>                       channel after it has been opened by a single attach. When stdin
>                       is true the stdin stream will remain open across multiple attach
>                       sessions. If stdinOnce is set to true, stdin is opened on container
>                       start, is empty until the first client attaches to stdin, and
>                       then remains open and accepts data until the client disconnects,
>                       at which time stdin is closed and remains closed until the container
>                       is restarted. If this flag is false, a container processes that
>                       reads from stdin will never receive an EOF. Default is false
>                     type: boolean
>                   terminationMessagePath:
>                     description: 'Optional: Path at which the file to which the container''s
>                       termination message will be written is mounted into the container''s
>                       filesystem. Message written is intended to be brief final status,
>                       such as an assertion failure message. Will be truncated by the
>                       node if greater than 4096 bytes. The total message length across
>                       all containers will be limited to 12kb. Defaults to /dev/termination-log.
>                       Cannot be updated.'
>                     type: string
>                   terminationMessagePolicy:
>                     description: Indicate how the termination message should be populated.
>                       File will use the contents of terminationMessagePath to populate
>                       the container status message on both success and failure. FallbackToLogsOnError
>                       will use the last chunk of container log output if the termination
>                       message file is empty and the container exited with an error.
>                       The log output is limited to 2048 bytes or 80 lines, whichever
>                       is smaller. Defaults to File. Cannot be updated.
>                     type: string
>                   tty:
>                     description: Whether this container should allocate a TTY for
>                       itself, also requires 'stdin' to be true. Default is false.
>                     type: boolean
>                   volumeDevices:
>                     description: volumeDevices is the list of block devices to be
>                       used by the container. This is a beta feature.
>                     items:
>                       description: volumeDevice describes a mapping of a raw block
>                         device within a container.
>                       properties:
>                         devicePath:
>                           description: devicePath is the path inside of the container
>                             that the device will be mapped to.
>                           type: string
>                         name:
>                           description: name must match the name of a persistentVolumeClaim
>                             in the pod
>                           type: string
>                       required:
>                       - devicePath
>                       - name
>                       type: object
>                     type: array
>                   volumeMounts:
>                     description: Pod volumes to mount into the container's filesystem.
>                       Cannot be updated.
>                     items:
>                       description: VolumeMount describes a mounting of a Volume within
>                         a container.
>                       properties:
>                         mountPath:
>                           description: Path within the container at which the volume
>                             should be mounted.  Must not contain ':'.
>                           type: string
>                         mountPropagation:
>                           description: mountPropagation determines how mounts are
>                             propagated from the host to container and the other way
>                             around. When not set, MountPropagationNone is used. This
>                             field is beta in 1.10.
>                           type: string
>                         name:
>                           description: This must match the Name of a Volume.
>                           type: string
>                         readOnly:
>                           description: Mounted read-only if true, read-write otherwise
>                             (false or unspecified). Defaults to false.
>                           type: boolean
>                         subPath:
>                           description: Path within the volume from which the container's
>                             volume should be mounted. Defaults to "" (volume's root).
>                           type: string
>                         subPathExpr:
>                           description: Expanded path within the volume from which
>                             the container's volume should be mounted. Behaves similarly
>                             to SubPath but environment variable references $(VAR_NAME)
>                             are expanded using the container's environment. Defaults
>                             to "" (volume's root). SubPathExpr and SubPath are mutually
>                             exclusive. This field is beta in 1.15.
>                           type: string
>                       required:
>                       - mountPath
>                       - name
>                       type: object
>                     type: array
>                   workingDir:
>                     description: Container's working directory. If not specified,
>                       the container runtime's default will be used, which might be
>                       configured in the container image. Cannot be updated.
>                     type: string
>                 required:
>                 - name
>                 type: object
>               type: array
>             enforcedNamespaceLabel:
>               description: EnforcedNamespaceLabel enforces adding a namespace label
>                 of origin for each alert and metric that is user created. The label
>                 value will always be the namespace of the object that is being created.
>               type: string
>             evaluationInterval:
>               description: Interval between consecutive evaluations.
>               type: string
>             image:
>               description: Thanos container image URL.
>               type: string
>             imagePullSecrets:
>               description: An optional list of references to secrets in the same namespace
>                 to use for pulling thanos images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
>               items:
>                 description: LocalObjectReference contains enough information to let
>                   you locate the referenced object inside the same namespace.
>                 properties:
>                   name:
>                     description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                       TODO: Add other useful fields. apiVersion, kind, uid?'
>                     type: string
>                 type: object
>               type: array
>             initContainers:
>               description: 'InitContainers allows adding initContainers to the pod
>                 definition. Those can be used to e.g. fetch secrets for injection
>                 into the ThanosRuler configuration from external sources. Any errors
>                 during the execution of an initContainer will lead to a restart of
>                 the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
>                 Using initContainers for any use case other then secret fetching is
>                 entirely outside the scope of what the maintainers will support and
>                 by doing so, you accept that this behaviour may break at any time
>                 without notice.'
>               items:
>                 description: A single application container that you want to run within
>                   a pod.
>                 properties:
>                   args:
>                     description: 'Arguments to the entrypoint. The docker image''s
>                       CMD is used if this is not provided. Variable references $(VAR_NAME)
>                       are expanded using the container''s environment. If a variable
>                       cannot be resolved, the reference in the input string will be
>                       unchanged. The $(VAR_NAME) syntax can be escaped with a double
>                       $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
>                       regardless of whether the variable exists or not. Cannot be
>                       updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   command:
>                     description: 'Entrypoint array. Not executed within a shell. The
>                       docker image''s ENTRYPOINT is used if this is not provided.
>                       Variable references $(VAR_NAME) are expanded using the container''s
>                       environment. If a variable cannot be resolved, the reference
>                       in the input string will be unchanged. The $(VAR_NAME) syntax
>                       can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                       will never be expanded, regardless of whether the variable exists
>                       or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
>                     items:
>                       type: string
>                     type: array
>                   env:
>                     description: List of environment variables to set in the container.
>                       Cannot be updated.
>                     items:
>                       description: EnvVar represents an environment variable present
>                         in a Container.
>                       properties:
>                         name:
>                           description: Name of the environment variable. Must be a
>                             C_IDENTIFIER.
>                           type: string
>                         value:
>                           description: 'Variable references $(VAR_NAME) are expanded
>                             using the previous defined environment variables in the
>                             container and any service environment variables. If a
>                             variable cannot be resolved, the reference in the input
>                             string will be unchanged. The $(VAR_NAME) syntax can be
>                             escaped with a double $$, ie: $$(VAR_NAME). Escaped references
>                             will never be expanded, regardless of whether the variable
>                             exists or not. Defaults to "".'
>                           type: string
>                         valueFrom:
>                           description: Source for the environment variable's value.
>                             Cannot be used if value is not empty.
>                           properties:
>                             configMapKeyRef:
>                               description: Selects a key of a ConfigMap.
>                               properties:
>                                 key:
>                                   description: The key to select.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the ConfigMap or its
>                                     key must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                             fieldRef:
>                               description: 'Selects a field of the pod: supports metadata.name,
>                                 metadata.namespace, metadata.labels, metadata.annotations,
>                                 spec.nodeName, spec.serviceAccountName, status.hostIP,
>                                 status.podIP.'
>                               properties:
>                                 apiVersion:
>                                   description: Version of the schema the FieldPath
>                                     is written in terms of, defaults to "v1".
>                                   type: string
>                                 fieldPath:
>                                   description: Path of the field to select in the
>                                     specified API version.
>                                   type: string
>                               required:
>                               - fieldPath
>                               type: object
>                             resourceFieldRef:
>                               description: 'Selects a resource of the container: only
>                                 resources limits and requests (limits.cpu, limits.memory,
>                                 limits.ephemeral-storage, requests.cpu, requests.memory
>                                 and requests.ephemeral-storage) are currently supported.'
>                               properties:
>                                 containerName:
>                                   description: 'Container name: required for volumes,
>                                     optional for env vars'
>                                   type: string
>                                 divisor:
>                                   description: Specifies the output format of the
>                                     exposed resources, defaults to "1"
>                                   type: string
>                                 resource:
>                                   description: 'Required: resource to select'
>                                   type: string
>                               required:
>                               - resource
>                               type: object
>                             secretKeyRef:
>                               description: Selects a key of a secret in the pod's
>                                 namespace
>                               properties:
>                                 key:
>                                   description: The key of the secret to select from.  Must
>                                     be a valid secret key.
>                                   type: string
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the Secret or its key
>                                     must be defined
>                                   type: boolean
>                               required:
>                               - key
>                               type: object
>                           type: object
>                       required:
>                       - name
>                       type: object
>                     type: array
>                   envFrom:
>                     description: List of sources to populate environment variables
>                       in the container. The keys defined within a source must be a
>                       C_IDENTIFIER. All invalid keys will be reported as an event
>                       when the container is starting. When a key exists in multiple
>                       sources, the value associated with the last source will take
>                       precedence. Values defined by an Env with a duplicate key will
>                       take precedence. Cannot be updated.
>                     items:
>                       description: EnvFromSource represents the source of a set of
>                         ConfigMaps
>                       properties:
>                         configMapRef:
>                           description: The ConfigMap to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the ConfigMap must be defined
>                               type: boolean
>                           type: object
>                         prefix:
>                           description: An optional identifier to prepend to each key
>                             in the ConfigMap. Must be a C_IDENTIFIER.
>                           type: string
>                         secretRef:
>                           description: The Secret to select from
>                           properties:
>                             name:
>                               description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                 TODO: Add other useful fields. apiVersion, kind, uid?'
>                               type: string
>                             optional:
>                               description: Specify whether the Secret must be defined
>                               type: boolean
>                           type: object
>                       type: object
>                     type: array
>                   image:
>                     description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
>                       This field is optional to allow higher level config management
>                       to default or override container images in workload controllers
>                       like Deployments and StatefulSets.'
>                     type: string
>                   imagePullPolicy:
>                     description: 'Image pull policy. One of Always, Never, IfNotPresent.
>                       Defaults to Always if :latest tag is specified, or IfNotPresent
>                       otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
>                     type: string
>                   lifecycle:
>                     description: Actions that the management system should take in
>                       response to container lifecycle events. Cannot be updated.
>                     properties:
>                       postStart:
>                         description: 'PostStart is called immediately after a container
>                           is created. If the handler fails, the container is terminated
>                           and restarted according to its restart policy. Other management
>                           of the container blocks until the hook completes. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                       preStop:
>                         description: 'PreStop is called immediately before a container
>                           is terminated due to an API request or management event
>                           such as liveness/startup probe failure, preemption, resource
>                           contention, etc. The handler is not called if the container
>                           crashes or exits. The reason for termination is passed to
>                           the handler. The Pod''s termination grace period countdown
>                           begins before the PreStop hooked is executed. Regardless
>                           of the outcome of the handler, the container will eventually
>                           terminate within the Pod''s termination grace period. Other
>                           management of the container blocks until the hook completes
>                           or until the termination grace period is reached. More info:
>                           https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
>                         properties:
>                           exec:
>                             description: One and only one of the following should
>                               be specified. Exec specifies the action to take.
>                             properties:
>                               command:
>                                 description: Command is the command line to execute
>                                   inside the container, the working directory for
>                                   the command  is root ('/') in the container's filesystem.
>                                   The command is simply exec'd, it is not run inside
>                                   a shell, so traditional shell instructions ('|',
>                                   etc) won't work. To use a shell, you need to explicitly
>                                   call out to that shell. Exit status of 0 is treated
>                                   as live/healthy and non-zero is unhealthy.
>                                 items:
>                                   type: string
>                                 type: array
>                             type: object
>                           httpGet:
>                             description: HTTPGet specifies the http request to perform.
>                             properties:
>                               host:
>                                 description: Host name to connect to, defaults to
>                                   the pod IP. You probably want to set "Host" in httpHeaders
>                                   instead.
>                                 type: string
>                               httpHeaders:
>                                 description: Custom headers to set in the request.
>                                   HTTP allows repeated headers.
>                                 items:
>                                   description: HTTPHeader describes a custom header
>                                     to be used in HTTP probes
>                                   properties:
>                                     name:
>                                       description: The header field name
>                                       type: string
>                                     value:
>                                       description: The header field value
>                                       type: string
>                                   required:
>                                   - name
>                                   - value
>                                   type: object
>                                 type: array
>                               path:
>                                 description: Path to access on the HTTP server.
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Name or number of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                               scheme:
>                                 description: Scheme to use for connecting to the host.
>                                   Defaults to HTTP.
>                                 type: string
>                             required:
>                             - port
>                             type: object
>                           tcpSocket:
>                             description: 'TCPSocket specifies an action involving
>                               a TCP port. TCP hooks not yet supported TODO: implement
>                               a realistic TCP lifecycle hook'
>                             properties:
>                               host:
>                                 description: 'Optional: Host name to connect to, defaults
>                                   to the pod IP.'
>                                 type: string
>                               port:
>                                 anyOf:
>                                 - type: integer
>                                 - type: string
>                                 description: Number or name of the port to access
>                                   on the container. Number must be in the range 1
>                                   to 65535. Name must be an IANA_SVC_NAME.
>                                 x-kubernetes-int-or-string: true
>                             required:
>                             - port
>                             type: object
>                         type: object
>                     type: object
>                   livenessProbe:
>                     description: 'Periodic probe of container liveness. Container
>                       will be restarted if the probe fails. Cannot be updated. More
>                       info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   name:
>                     description: Name of the container specified as a DNS_LABEL. Each
>                       container in a pod must have a unique name (DNS_LABEL). Cannot
>                       be updated.
>                     type: string
>                   ports:
>                     description: List of ports to expose from the container. Exposing
>                       a port here gives the system additional information about the
>                       network connections a container uses, but is primarily informational.
>                       Not specifying a port here DOES NOT prevent that port from being
>                       exposed. Any port which is listening on the default "0.0.0.0"
>                       address inside a container will be accessible from the network.
>                       Cannot be updated.
>                     items:
>                       description: ContainerPort represents a network port in a single
>                         container.
>                       properties:
>                         containerPort:
>                           description: Number of port to expose on the pod's IP address.
>                             This must be a valid port number, 0 < x < 65536.
>                           format: int32
>                           type: integer
>                         hostIP:
>                           description: What host IP to bind the external port to.
>                           type: string
>                         hostPort:
>                           description: Number of port to expose on the host. If specified,
>                             this must be a valid port number, 0 < x < 65536. If HostNetwork
>                             is specified, this must match ContainerPort. Most containers
>                             do not need this.
>                           format: int32
>                           type: integer
>                         name:
>                           description: If specified, this must be an IANA_SVC_NAME
>                             and unique within the pod. Each named port in a pod must
>                             have a unique name. Name for the port that can be referred
>                             to by services.
>                           type: string
>                         protocol:
>                           description: Protocol for port. Must be UDP, TCP, or SCTP.
>                             Defaults to "TCP".
>                           type: string
>                       required:
>                       - containerPort
>                       type: object
>                     type: array
>                   readinessProbe:
>                     description: 'Periodic probe of container service readiness. Container
>                       will be removed from service endpoints if the probe fails. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   resources:
>                     description: 'Compute Resources required by this container. Cannot
>                       be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                     properties:
>                       limits:
>                         additionalProperties:
>                           type: string
>                         description: 'Limits describes the maximum amount of compute
>                           resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                       requests:
>                         additionalProperties:
>                           type: string
>                         description: 'Requests describes the minimum amount of compute
>                           resources required. If Requests is omitted for a container,
>                           it defaults to Limits if that is explicitly specified, otherwise
>                           to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                         type: object
>                     type: object
>                   securityContext:
>                     description: 'Security options the pod should run with. More info:
>                       https://kubernetes.io/docs/concepts/policy/security-context/
>                       More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
>                     properties:
>                       allowPrivilegeEscalation:
>                         description: 'AllowPrivilegeEscalation controls whether a
>                           process can gain more privileges than its parent process.
>                           This bool directly controls if the no_new_privs flag will
>                           be set on the container process. AllowPrivilegeEscalation
>                           is true always when the container is: 1) run as Privileged
>                           2) has CAP_SYS_ADMIN'
>                         type: boolean
>                       capabilities:
>                         description: The capabilities to add/drop when running containers.
>                           Defaults to the default set of capabilities granted by the
>                           container runtime.
>                         properties:
>                           add:
>                             description: Added capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                           drop:
>                             description: Removed capabilities
>                             items:
>                               description: Capability represent POSIX capabilities
>                                 type
>                               type: string
>                             type: array
>                         type: object
>                       privileged:
>                         description: Run container in privileged mode. Processes in
>                           privileged containers are essentially equivalent to root
>                           on the host. Defaults to false.
>                         type: boolean
>                       procMount:
>                         description: procMount denotes the type of proc mount to use
>                           for the containers. The default is DefaultProcMount which
>                           uses the container runtime defaults for readonly paths and
>                           masked paths. This requires the ProcMountType feature flag
>                           to be enabled.
>                         type: string
>                       readOnlyRootFilesystem:
>                         description: Whether this container has a read-only root filesystem.
>                           Default is false.
>                         type: boolean
>                       runAsGroup:
>                         description: The GID to run the entrypoint of the container
>                           process. Uses runtime default if unset. May also be set
>                           in PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         format: int64
>                         type: integer
>                       runAsNonRoot:
>                         description: Indicates that the container must run as a non-root
>                           user. If true, the Kubelet will validate the image at runtime
>                           to ensure that it does not run as UID 0 (root) and fail
>                           to start the container if it does. If unset or false, no
>                           such validation will be performed. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         type: boolean
>                       runAsUser:
>                         description: The UID to run the entrypoint of the container
>                           process. Defaults to user specified in image metadata if
>                           unspecified. May also be set in PodSecurityContext.  If
>                           set in both SecurityContext and PodSecurityContext, the
>                           value specified in SecurityContext takes precedence.
>                         format: int64
>                         type: integer
>                       seLinuxOptions:
>                         description: The SELinux context to be applied to the container.
>                           If unspecified, the container runtime will allocate a random
>                           SELinux context for each container.  May also be set in
>                           PodSecurityContext.  If set in both SecurityContext and
>                           PodSecurityContext, the value specified in SecurityContext
>                           takes precedence.
>                         properties:
>                           level:
>                             description: Level is SELinux level label that applies
>                               to the container.
>                             type: string
>                           role:
>                             description: Role is a SELinux role label that applies
>                               to the container.
>                             type: string
>                           type:
>                             description: Type is a SELinux type label that applies
>                               to the container.
>                             type: string
>                           user:
>                             description: User is a SELinux user label that applies
>                               to the container.
>                             type: string
>                         type: object
>                       windowsOptions:
>                         description: The Windows specific settings applied to all
>                           containers. If unspecified, the options from the PodSecurityContext
>                           will be used. If set in both SecurityContext and PodSecurityContext,
>                           the value specified in SecurityContext takes precedence.
>                         properties:
>                           gmsaCredentialSpec:
>                             description: GMSACredentialSpec is where the GMSA admission
>                               webhook (https://github.com/kubernetes-sigs/windows-gmsa)
>                               inlines the contents of the GMSA credential spec named
>                               by the GMSACredentialSpecName field. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           gmsaCredentialSpecName:
>                             description: GMSACredentialSpecName is the name of the
>                               GMSA credential spec to use. This field is alpha-level
>                               and is only honored by servers that enable the WindowsGMSA
>                               feature flag.
>                             type: string
>                           runAsUserName:
>                             description: The UserName in Windows to run the entrypoint
>                               of the container process. Defaults to the user specified
>                               in image metadata if unspecified. May also be set in
>                               PodSecurityContext. If set in both SecurityContext and
>                               PodSecurityContext, the value specified in SecurityContext
>                               takes precedence. This field is alpha-level and it is
>                               only honored by servers that enable the WindowsRunAsUserName
>                               feature flag.
>                             type: string
>                         type: object
>                     type: object
>                   startupProbe:
>                     description: 'StartupProbe indicates that the Pod has successfully
>                       initialized. If specified, no other probes are executed until
>                       this completes successfully. If this probe fails, the Pod will
>                       be restarted, just as if the livenessProbe failed. This can
>                       be used to provide different probe parameters at the beginning
>                       of a Pod''s lifecycle, when it might take a long time to load
>                       data or warm a cache, than during steady-state operation. This
>                       cannot be updated. This is an alpha feature enabled by the StartupProbe
>                       feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                     properties:
>                       exec:
>                         description: One and only one of the following should be specified.
>                           Exec specifies the action to take.
>                         properties:
>                           command:
>                             description: Command is the command line to execute inside
>                               the container, the working directory for the command  is
>                               root ('/') in the container's filesystem. The command
>                               is simply exec'd, it is not run inside a shell, so traditional
>                               shell instructions ('|', etc) won't work. To use a shell,
>                               you need to explicitly call out to that shell. Exit
>                               status of 0 is treated as live/healthy and non-zero
>                               is unhealthy.
>                             items:
>                               type: string
>                             type: array
>                         type: object
>                       failureThreshold:
>                         description: Minimum consecutive failures for the probe to
>                           be considered failed after having succeeded. Defaults to
>                           3. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       httpGet:
>                         description: HTTPGet specifies the http request to perform.
>                         properties:
>                           host:
>                             description: Host name to connect to, defaults to the
>                               pod IP. You probably want to set "Host" in httpHeaders
>                               instead.
>                             type: string
>                           httpHeaders:
>                             description: Custom headers to set in the request. HTTP
>                               allows repeated headers.
>                             items:
>                               description: HTTPHeader describes a custom header to
>                                 be used in HTTP probes
>                               properties:
>                                 name:
>                                   description: The header field name
>                                   type: string
>                                 value:
>                                   description: The header field value
>                                   type: string
>                               required:
>                               - name
>                               - value
>                               type: object
>                             type: array
>                           path:
>                             description: Path to access on the HTTP server.
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Name or number of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                           scheme:
>                             description: Scheme to use for connecting to the host.
>                               Defaults to HTTP.
>                             type: string
>                         required:
>                         - port
>                         type: object
>                       initialDelaySeconds:
>                         description: 'Number of seconds after the container has started
>                           before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                       periodSeconds:
>                         description: How often (in seconds) to perform the probe.
>                           Default to 10 seconds. Minimum value is 1.
>                         format: int32
>                         type: integer
>                       successThreshold:
>                         description: Minimum consecutive successes for the probe to
>                           be considered successful after having failed. Defaults to
>                           1. Must be 1 for liveness and startup. Minimum value is
>                           1.
>                         format: int32
>                         type: integer
>                       tcpSocket:
>                         description: 'TCPSocket specifies an action involving a TCP
>                           port. TCP hooks not yet supported TODO: implement a realistic
>                           TCP lifecycle hook'
>                         properties:
>                           host:
>                             description: 'Optional: Host name to connect to, defaults
>                               to the pod IP.'
>                             type: string
>                           port:
>                             anyOf:
>                             - type: integer
>                             - type: string
>                             description: Number or name of the port to access on the
>                               container. Number must be in the range 1 to 65535. Name
>                               must be an IANA_SVC_NAME.
>                             x-kubernetes-int-or-string: true
>                         required:
>                         - port
>                         type: object
>                       timeoutSeconds:
>                         description: 'Number of seconds after which the probe times
>                           out. Defaults to 1 second. Minimum value is 1. More info:
>                           https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
>                         format: int32
>                         type: integer
>                     type: object
>                   stdin:
>                     description: Whether this container should allocate a buffer for
>                       stdin in the container runtime. If this is not set, reads from
>                       stdin in the container will always result in EOF. Default is
>                       false.
>                     type: boolean
>                   stdinOnce:
>                     description: Whether the container runtime should close the stdin
>                       channel after it has been opened by a single attach. When stdin
>                       is true the stdin stream will remain open across multiple attach
>                       sessions. If stdinOnce is set to true, stdin is opened on container
>                       start, is empty until the first client attaches to stdin, and
>                       then remains open and accepts data until the client disconnects,
>                       at which time stdin is closed and remains closed until the container
>                       is restarted. If this flag is false, a container processes that
>                       reads from stdin will never receive an EOF. Default is false
>                     type: boolean
>                   terminationMessagePath:
>                     description: 'Optional: Path at which the file to which the container''s
>                       termination message will be written is mounted into the container''s
>                       filesystem. Message written is intended to be brief final status,
>                       such as an assertion failure message. Will be truncated by the
>                       node if greater than 4096 bytes. The total message length across
>                       all containers will be limited to 12kb. Defaults to /dev/termination-log.
>                       Cannot be updated.'
>                     type: string
>                   terminationMessagePolicy:
>                     description: Indicate how the termination message should be populated.
>                       File will use the contents of terminationMessagePath to populate
>                       the container status message on both success and failure. FallbackToLogsOnError
>                       will use the last chunk of container log output if the termination
>                       message file is empty and the container exited with an error.
>                       The log output is limited to 2048 bytes or 80 lines, whichever
>                       is smaller. Defaults to File. Cannot be updated.
>                     type: string
>                   tty:
>                     description: Whether this container should allocate a TTY for
>                       itself, also requires 'stdin' to be true. Default is false.
>                     type: boolean
>                   volumeDevices:
>                     description: volumeDevices is the list of block devices to be
>                       used by the container. This is a beta feature.
>                     items:
>                       description: volumeDevice describes a mapping of a raw block
>                         device within a container.
>                       properties:
>                         devicePath:
>                           description: devicePath is the path inside of the container
>                             that the device will be mapped to.
>                           type: string
>                         name:
>                           description: name must match the name of a persistentVolumeClaim
>                             in the pod
>                           type: string
>                       required:
>                       - devicePath
>                       - name
>                       type: object
>                     type: array
>                   volumeMounts:
>                     description: Pod volumes to mount into the container's filesystem.
>                       Cannot be updated.
>                     items:
>                       description: VolumeMount describes a mounting of a Volume within
>                         a container.
>                       properties:
>                         mountPath:
>                           description: Path within the container at which the volume
>                             should be mounted.  Must not contain ':'.
>                           type: string
>                         mountPropagation:
>                           description: mountPropagation determines how mounts are
>                             propagated from the host to container and the other way
>                             around. When not set, MountPropagationNone is used. This
>                             field is beta in 1.10.
>                           type: string
>                         name:
>                           description: This must match the Name of a Volume.
>                           type: string
>                         readOnly:
>                           description: Mounted read-only if true, read-write otherwise
>                             (false or unspecified). Defaults to false.
>                           type: boolean
>                         subPath:
>                           description: Path within the volume from which the container's
>                             volume should be mounted. Defaults to "" (volume's root).
>                           type: string
>                         subPathExpr:
>                           description: Expanded path within the volume from which
>                             the container's volume should be mounted. Behaves similarly
>                             to SubPath but environment variable references $(VAR_NAME)
>                             are expanded using the container's environment. Defaults
>                             to "" (volume's root). SubPathExpr and SubPath are mutually
>                             exclusive. This field is beta in 1.15.
>                           type: string
>                       required:
>                       - mountPath
>                       - name
>                       type: object
>                     type: array
>                   workingDir:
>                     description: Container's working directory. If not specified,
>                       the container runtime's default will be used, which might be
>                       configured in the container image. Cannot be updated.
>                     type: string
>                 required:
>                 - name
>                 type: object
>               type: array
>             labels:
>               additionalProperties:
>                 type: string
>               description: Labels configure the external label pairs to ThanosRuler.
>                 If not provided, default replica label `thanos_ruler_replica` will
>                 be added as a label and be dropped in alerts.
>               type: object
>             listenLocal:
>               description: ListenLocal makes the Thanos ruler listen on loopback,
>                 so that it does not bind against the Pod IP.
>               type: boolean
>             logFormat:
>               description: Log format for ThanosRuler to be configured with.
>               type: string
>             logLevel:
>               description: Log level for ThanosRuler to be configured with.
>               type: string
>             objectStorageConfig:
>               description: ObjectStorageConfig configures object storage in Thanos.
>               properties:
>                 key:
>                   description: The key of the secret to select from.  Must be a valid
>                     secret key.
>                   type: string
>                 name:
>                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                     TODO: Add other useful fields. apiVersion, kind, uid?'
>                   type: string
>                 optional:
>                   description: Specify whether the Secret or its key must be defined
>                   type: boolean
>               required:
>               - key
>               type: object
>             paused:
>               description: When a ThanosRuler deployment is paused, no actions except
>                 for deletion will be performed on the underlying objects.
>               type: boolean
>             podMetadata:
>               description: 'Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
>                 Metadata Labels and Annotations gets propagated to the prometheus
>                 pods.'
>               type: object
>             portName:
>               description: Port name used for the pods and governing service. This
>                 defaults to web
>               type: string
>             queryEndpoints:
>               description: QueryEndpoints defines Thanos querier endpoints from which
>                 to query metrics. Maps to the --query flag of thanos ruler.
>               items:
>                 type: string
>               type: array
>             replicas:
>               description: Number of thanos ruler instances to deploy.
>               format: int32
>               type: integer
>             resources:
>               description: Resources defines the resource requirements for the Thanos
>                 sidecar. If not provided, no requests/limits will be set
>               properties:
>                 limits:
>                   additionalProperties:
>                     type: string
>                   description: 'Limits describes the maximum amount of compute resources
>                     allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                   type: object
>                 requests:
>                   additionalProperties:
>                     type: string
>                   description: 'Requests describes the minimum amount of compute resources
>                     required. If Requests is omitted for a container, it defaults
>                     to Limits if that is explicitly specified, otherwise to an implementation-defined
>                     value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                   type: object
>               type: object
>             retention:
>               description: Time duration ThanosRuler shall retain data for. Default
>                 is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)`
>                 (milliseconds seconds minutes hours days weeks years).
>               type: string
>             ruleNamespaceSelector:
>               description: Namespaces to be selected for Rules discovery. If unspecified,
>                 only the same namespace as the ThanosRuler object is in is used.
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>             ruleSelector:
>               description: A label selector to select which PrometheusRules to mount
>                 for alerting and recording.
>               properties:
>                 matchExpressions:
>                   description: matchExpressions is a list of label selector requirements.
>                     The requirements are ANDed.
>                   items:
>                     description: A label selector requirement is a selector that contains
>                       values, a key, and an operator that relates the key and values.
>                     properties:
>                       key:
>                         description: key is the label key that the selector applies
>                           to.
>                         type: string
>                       operator:
>                         description: operator represents a key's relationship to a
>                           set of values. Valid operators are In, NotIn, Exists and
>                           DoesNotExist.
>                         type: string
>                       values:
>                         description: values is an array of string values. If the operator
>                           is In or NotIn, the values array must be non-empty. If the
>                           operator is Exists or DoesNotExist, the values array must
>                           be empty. This array is replaced during a strategic merge
>                           patch.
>                         items:
>                           type: string
>                         type: array
>                     required:
>                     - key
>                     - operator
>                     type: object
>                   type: array
>                 matchLabels:
>                   additionalProperties:
>                     type: string
>                   description: matchLabels is a map of {key,value} pairs. A single
>                     {key,value} in the matchLabels map is equivalent to an element
>                     of matchExpressions, whose key field is "key", the operator is
>                     "In", and the values array contains only "value". The requirements
>                     are ANDed.
>                   type: object
>               type: object
>             storage:
>               description: Storage spec to specify how storage shall be used.
>               properties:
>                 emptyDir:
>                   description: 'EmptyDirVolumeSource to be used by the Prometheus
>                     StatefulSets. If specified, used in place of any volumeClaimTemplate.
>                     More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
>                   properties:
>                     medium:
>                       description: 'What type of storage medium should back this directory.
>                         The default is "" which means to use the node''s default medium.
>                         Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
>                       type: string
>                     sizeLimit:
>                       description: 'Total amount of local storage required for this
>                         EmptyDir volume. The size limit is also applicable for memory
>                         medium. The maximum usage on memory medium EmptyDir would
>                         be the minimum value between the SizeLimit specified here
>                         and the sum of memory limits of all containers in a pod. The
>                         default is nil which means that the limit is undefined. More
>                         info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
>                       type: string
>                   type: object
>                 volumeClaimTemplate:
>                   description: A PVC spec to be used by the Prometheus StatefulSets.
>                   properties:
>                     apiVersion:
>                       description: 'APIVersion defines the versioned schema of this
>                         representation of an object. Servers should convert recognized
>                         schemas to the latest internal value, and may reject unrecognized
>                         values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
>                       type: string
>                     kind:
>                       description: 'Kind is a string value representing the REST resource
>                         this object represents. Servers may infer this from the endpoint
>                         the client submits requests to. Cannot be updated. In CamelCase.
>                         More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
>                       type: string
>                     metadata:
>                       description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
>                       type: object
>                     spec:
>                       description: 'Spec defines the desired characteristics of a
>                         volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                       properties:
>                         accessModes:
>                           description: 'AccessModes contains the desired access modes
>                             the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
>                           items:
>                             type: string
>                           type: array
>                         dataSource:
>                           description: This field requires the VolumeSnapshotDataSource
>                             alpha feature gate to be enabled and currently VolumeSnapshot
>                             is the only supported data source. If the provisioner
>                             can support VolumeSnapshot data source, it will create
>                             a new volume and data will be restored to the volume at
>                             the same time. If the provisioner does not support VolumeSnapshot
>                             data source, volume will not be created and the failure
>                             will be reported as an event. In the future, we plan to
>                             support more data source types and the behavior of the
>                             provisioner may change.
>                           properties:
>                             apiGroup:
>                               description: APIGroup is the group for the resource
>                                 being referenced. If APIGroup is not specified, the
>                                 specified Kind must be in the core API group. For
>                                 any other third-party types, APIGroup is required.
>                               type: string
>                             kind:
>                               description: Kind is the type of resource being referenced
>                               type: string
>                             name:
>                               description: Name is the name of resource being referenced
>                               type: string
>                           required:
>                           - kind
>                           - name
>                           type: object
>                         resources:
>                           description: 'Resources represents the minimum resources
>                             the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
>                           properties:
>                             limits:
>                               additionalProperties:
>                                 type: string
>                               description: 'Limits describes the maximum amount of
>                                 compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                               type: object
>                             requests:
>                               additionalProperties:
>                                 type: string
>                               description: 'Requests describes the minimum amount
>                                 of compute resources required. If Requests is omitted
>                                 for a container, it defaults to Limits if that is
>                                 explicitly specified, otherwise to an implementation-defined
>                                 value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
>                               type: object
>                           type: object
>                         selector:
>                           description: A label query over volumes to consider for
>                             binding.
>                           properties:
>                             matchExpressions:
>                               description: matchExpressions is a list of label selector
>                                 requirements. The requirements are ANDed.
>                               items:
>                                 description: A label selector requirement is a selector
>                                   that contains values, a key, and an operator that
>                                   relates the key and values.
>                                 properties:
>                                   key:
>                                     description: key is the label key that the selector
>                                       applies to.
>                                     type: string
>                                   operator:
>                                     description: operator represents a key's relationship
>                                       to a set of values. Valid operators are In,
>                                       NotIn, Exists and DoesNotExist.
>                                     type: string
>                                   values:
>                                     description: values is an array of string values.
>                                       If the operator is In or NotIn, the values array
>                                       must be non-empty. If the operator is Exists
>                                       or DoesNotExist, the values array must be empty.
>                                       This array is replaced during a strategic merge
>                                       patch.
>                                     items:
>                                       type: string
>                                     type: array
>                                 required:
>                                 - key
>                                 - operator
>                                 type: object
>                               type: array
>                             matchLabels:
>                               additionalProperties:
>                                 type: string
>                               description: matchLabels is a map of {key,value} pairs.
>                                 A single {key,value} in the matchLabels map is equivalent
>                                 to an element of matchExpressions, whose key field
>                                 is "key", the operator is "In", and the values array
>                                 contains only "value". The requirements are ANDed.
>                               type: object
>                           type: object
>                         storageClassName:
>                           description: 'Name of the StorageClass required by the claim.
>                             More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
>                           type: string
>                         volumeMode:
>                           description: volumeMode defines what type of volume is required
>                             by the claim. Value of Filesystem is implied when not
>                             included in claim spec. This is a beta feature.
>                           type: string
>                         volumeName:
>                           description: VolumeName is the binding reference to the
>                             PersistentVolume backing this claim.
>                           type: string
>                       type: object
>                     status:
>                       description: 'Status represents the current information/status
>                         of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                       properties:
>                         accessModes:
>                           description: 'AccessModes contains the actual access modes
>                             the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
>                           items:
>                             type: string
>                           type: array
>                         capacity:
>                           additionalProperties:
>                             type: string
>                           description: Represents the actual resources of the underlying
>                             volume.
>                           type: object
>                         conditions:
>                           description: Current Condition of persistent volume claim.
>                             If underlying persistent volume is being resized then
>                             the Condition will be set to 'ResizeStarted'.
>                           items:
>                             description: PersistentVolumeClaimCondition contails details
>                               about state of pvc
>                             properties:
>                               lastProbeTime:
>                                 description: Last time we probed the condition.
>                                 format: date-time
>                                 type: string
>                               lastTransitionTime:
>                                 description: Last time the condition transitioned
>                                   from one status to another.
>                                 format: date-time
>                                 type: string
>                               message:
>                                 description: Human-readable message indicating details
>                                   about last transition.
>                                 type: string
>                               reason:
>                                 description: Unique, this should be a short, machine
>                                   understandable string that gives the reason for
>                                   condition's last transition. If it reports "ResizeStarted"
>                                   that means the underlying persistent volume is being
>                                   resized.
>                                 type: string
>                               status:
>                                 type: string
>                               type:
>                                 description: PersistentVolumeClaimConditionType is
>                                   a valid value of PersistentVolumeClaimCondition.Type
>                                 type: string
>                             required:
>                             - status
>                             - type
>                             type: object
>                           type: array
>                         phase:
>                           description: Phase represents the current phase of PersistentVolumeClaim.
>                           type: string
>                       type: object
>                   type: object
>               type: object
>             tracingConfig:
>               description: TracingConfig configures tracing in Thanos. This is an
>                 experimental feature, it may change in any upcoming release in a breaking
>                 way.
>               properties:
>                 key:
>                   description: The key of the secret to select from.  Must be a valid
>                     secret key.
>                   type: string
>                 name:
>                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                     TODO: Add other useful fields. apiVersion, kind, uid?'
>                   type: string
>                 optional:
>                   description: Specify whether the Secret or its key must be defined
>                   type: boolean
>               required:
>               - key
>               type: object
>             volumes:
>               description: Volumes allows configuration of additional volumes on the
>                 output StatefulSet definition. Volumes specified will be appended
>                 to other volumes that are generated as a result of StorageSpec objects.
>               items:
>                 description: Volume represents a named volume in a pod that may be
>                   accessed by any container in the pod.
>                 properties:
>                   awsElasticBlockStore:
>                     description: 'AWSElasticBlockStore represents an AWS Disk resource
>                       that is attached to a kubelet''s host machine and then exposed
>                       to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       partition:
>                         description: 'The partition in the volume that you want to
>                           mount. If omitted, the default is to mount by volume name.
>                           Examples: For volume /dev/sda1, you specify the partition
>                           as "1". Similarly, the volume partition for /dev/sda is
>                           "0" (or you can leave the property empty).'
>                         format: int32
>                         type: integer
>                       readOnly:
>                         description: 'Specify "true" to force and set the ReadOnly
>                           property in VolumeMounts to "true". If omitted, the default
>                           is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
>                         type: boolean
>                       volumeID:
>                         description: 'Unique ID of the persistent disk resource in
>                           AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
>                         type: string
>                     required:
>                     - volumeID
>                     type: object
>                   azureDisk:
>                     description: AzureDisk represents an Azure Data Disk mount on
>                       the host and bind mount to the pod.
>                     properties:
>                       cachingMode:
>                         description: 'Host Caching mode: None, Read Only, Read Write.'
>                         type: string
>                       diskName:
>                         description: The Name of the data disk in the blob storage
>                         type: string
>                       diskURI:
>                         description: The URI the data disk in the blob storage
>                         type: string
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       kind:
>                         description: 'Expected values Shared: multiple blob disks
>                           per storage account  Dedicated: single blob disk per storage
>                           account  Managed: azure managed data disk (only in managed
>                           availability set). defaults to shared'
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                     required:
>                     - diskName
>                     - diskURI
>                     type: object
>                   azureFile:
>                     description: AzureFile represents an Azure File Service mount
>                       on the host and bind mount to the pod.
>                     properties:
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       secretName:
>                         description: the name of secret that contains Azure Storage
>                           Account Name and Key
>                         type: string
>                       shareName:
>                         description: Share Name
>                         type: string
>                     required:
>                     - secretName
>                     - shareName
>                     type: object
>                   cephfs:
>                     description: CephFS represents a Ceph FS mount on the host that
>                       shares a pod's lifetime
>                     properties:
>                       monitors:
>                         description: 'Required: Monitors is a collection of Ceph monitors
>                           More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         items:
>                           type: string
>                         type: array
>                       path:
>                         description: 'Optional: Used as the mounted root, rather than
>                           the full Ceph tree, default is /'
>                         type: string
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts. More
>                           info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         type: boolean
>                       secretFile:
>                         description: 'Optional: SecretFile is the path to key ring
>                           for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         type: string
>                       secretRef:
>                         description: 'Optional: SecretRef is reference to the authentication
>                           secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       user:
>                         description: 'Optional: User is the rados user name, default
>                           is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
>                         type: string
>                     required:
>                     - monitors
>                     type: object
>                   cinder:
>                     description: 'Cinder represents a cinder volume attached and mounted
>                       on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Examples: "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                           More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                         type: string
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts. More
>                           info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                         type: boolean
>                       secretRef:
>                         description: 'Optional: points to a secret object containing
>                           parameters used to connect to OpenStack.'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       volumeID:
>                         description: 'volume id used to identify the volume in cinder.
>                           More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
>                         type: string
>                     required:
>                     - volumeID
>                     type: object
>                   configMap:
>                     description: ConfigMap represents a configMap that should populate
>                       this volume
>                     properties:
>                       defaultMode:
>                         description: 'Optional: mode bits to use on created files
>                           by default. Must be a value between 0 and 0777. Defaults
>                           to 0644. Directories within the path are not affected by
>                           this setting. This might be in conflict with other options
>                           that affect the file mode, like fsGroup, and the result
>                           can be other mode bits set.'
>                         format: int32
>                         type: integer
>                       items:
>                         description: If unspecified, each key-value pair in the Data
>                           field of the referenced ConfigMap will be projected into
>                           the volume as a file whose name is the key and content is
>                           the value. If specified, the listed keys will be projected
>                           into the specified paths, and unlisted keys will not be
>                           present. If a key is specified which is not present in the
>                           ConfigMap, the volume setup will error unless it is marked
>                           optional. Paths must be relative and may not contain the
>                           '..' path or start with '..'.
>                         items:
>                           description: Maps a string key to a path within a volume.
>                           properties:
>                             key:
>                               description: The key to project.
>                               type: string
>                             mode:
>                               description: 'Optional: mode bits to use on this file,
>                                 must be a value between 0 and 0777. If not specified,
>                                 the volume defaultMode will be used. This might be
>                                 in conflict with other options that affect the file
>                                 mode, like fsGroup, and the result can be other mode
>                                 bits set.'
>                               format: int32
>                               type: integer
>                             path:
>                               description: The relative path of the file to map the
>                                 key to. May not be an absolute path. May not contain
>                                 the path element '..'. May not start with the string
>                                 '..'.
>                               type: string
>                           required:
>                           - key
>                           - path
>                           type: object
>                         type: array
>                       name:
>                         description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                           TODO: Add other useful fields. apiVersion, kind, uid?'
>                         type: string
>                       optional:
>                         description: Specify whether the ConfigMap or its keys must
>                           be defined
>                         type: boolean
>                     type: object
>                   csi:
>                     description: CSI (Container Storage Interface) represents storage
>                       that is handled by an external CSI driver (Alpha feature).
>                     properties:
>                       driver:
>                         description: Driver is the name of the CSI driver that handles
>                           this volume. Consult with your admin for the correct name
>                           as registered in the cluster.
>                         type: string
>                       fsType:
>                         description: Filesystem type to mount. Ex. "ext4", "xfs",
>                           "ntfs". If not provided, the empty value is passed to the
>                           associated CSI driver which will determine the default filesystem
>                           to apply.
>                         type: string
>                       nodePublishSecretRef:
>                         description: NodePublishSecretRef is a reference to the secret
>                           object containing sensitive information to pass to the CSI
>                           driver to complete the CSI NodePublishVolume and NodeUnpublishVolume
>                           calls. This field is optional, and  may be empty if no secret
>                           is required. If the secret object contains more than one
>                           secret, all secret references are passed.
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       readOnly:
>                         description: Specifies a read-only configuration for the volume.
>                           Defaults to false (read/write).
>                         type: boolean
>                       volumeAttributes:
>                         additionalProperties:
>                           type: string
>                         description: VolumeAttributes stores driver-specific properties
>                           that are passed to the CSI driver. Consult your driver's
>                           documentation for supported values.
>                         type: object
>                     required:
>                     - driver
>                     type: object
>                   downwardAPI:
>                     description: DownwardAPI represents downward API about the pod
>                       that should populate this volume
>                     properties:
>                       defaultMode:
>                         description: 'Optional: mode bits to use on created files
>                           by default. Must be a value between 0 and 0777. Defaults
>                           to 0644. Directories within the path are not affected by
>                           this setting. This might be in conflict with other options
>                           that affect the file mode, like fsGroup, and the result
>                           can be other mode bits set.'
>                         format: int32
>                         type: integer
>                       items:
>                         description: Items is a list of downward API volume file
>                         items:
>                           description: DownwardAPIVolumeFile represents information
>                             to create the file containing the pod field
>                           properties:
>                             fieldRef:
>                               description: 'Required: Selects a field of the pod:
>                                 only annotations, labels, name and namespace are supported.'
>                               properties:
>                                 apiVersion:
>                                   description: Version of the schema the FieldPath
>                                     is written in terms of, defaults to "v1".
>                                   type: string
>                                 fieldPath:
>                                   description: Path of the field to select in the
>                                     specified API version.
>                                   type: string
>                               required:
>                               - fieldPath
>                               type: object
>                             mode:
>                               description: 'Optional: mode bits to use on this file,
>                                 must be a value between 0 and 0777. If not specified,
>                                 the volume defaultMode will be used. This might be
>                                 in conflict with other options that affect the file
>                                 mode, like fsGroup, and the result can be other mode
>                                 bits set.'
>                               format: int32
>                               type: integer
>                             path:
>                               description: 'Required: Path is  the relative path name
>                                 of the file to be created. Must not be absolute or
>                                 contain the ''..'' path. Must be utf-8 encoded. The
>                                 first item of the relative path must not start with
>                                 ''..'''
>                               type: string
>                             resourceFieldRef:
>                               description: 'Selects a resource of the container: only
>                                 resources limits and requests (limits.cpu, limits.memory,
>                                 requests.cpu and requests.memory) are currently supported.'
>                               properties:
>                                 containerName:
>                                   description: 'Container name: required for volumes,
>                                     optional for env vars'
>                                   type: string
>                                 divisor:
>                                   description: Specifies the output format of the
>                                     exposed resources, defaults to "1"
>                                   type: string
>                                 resource:
>                                   description: 'Required: resource to select'
>                                   type: string
>                               required:
>                               - resource
>                               type: object
>                           required:
>                           - path
>                           type: object
>                         type: array
>                     type: object
>                   emptyDir:
>                     description: 'EmptyDir represents a temporary directory that shares
>                       a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
>                     properties:
>                       medium:
>                         description: 'What type of storage medium should back this
>                           directory. The default is "" which means to use the node''s
>                           default medium. Must be an empty string (default) or Memory.
>                           More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
>                         type: string
>                       sizeLimit:
>                         description: 'Total amount of local storage required for this
>                           EmptyDir volume. The size limit is also applicable for memory
>                           medium. The maximum usage on memory medium EmptyDir would
>                           be the minimum value between the SizeLimit specified here
>                           and the sum of memory limits of all containers in a pod.
>                           The default is nil which means that the limit is undefined.
>                           More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
>                         type: string
>                     type: object
>                   fc:
>                     description: FC represents a Fibre Channel resource that is attached
>                       to a kubelet's host machine and then exposed to the pod.
>                     properties:
>                       fsType:
>                         description: 'Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       lun:
>                         description: 'Optional: FC target lun number'
>                         format: int32
>                         type: integer
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts.'
>                         type: boolean
>                       targetWWNs:
>                         description: 'Optional: FC target worldwide names (WWNs)'
>                         items:
>                           type: string
>                         type: array
>                       wwids:
>                         description: 'Optional: FC volume world wide identifiers (wwids)
>                           Either wwids or combination of targetWWNs and lun must be
>                           set, but not both simultaneously.'
>                         items:
>                           type: string
>                         type: array
>                     type: object
>                   flexVolume:
>                     description: FlexVolume represents a generic volume resource that
>                       is provisioned/attached using an exec based plugin.
>                     properties:
>                       driver:
>                         description: Driver is the name of the driver to use for this
>                           volume.
>                         type: string
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". The default filesystem depends on FlexVolume
>                           script.
>                         type: string
>                       options:
>                         additionalProperties:
>                           type: string
>                         description: 'Optional: Extra command options if any.'
>                         type: object
>                       readOnly:
>                         description: 'Optional: Defaults to false (read/write). ReadOnly
>                           here will force the ReadOnly setting in VolumeMounts.'
>                         type: boolean
>                       secretRef:
>                         description: 'Optional: SecretRef is reference to the secret
>                           object containing sensitive information to pass to the plugin
>                           scripts. This may be empty if no secret object is specified.
>                           If the secret object contains more than one secret, all
>                           secrets are passed to the plugin scripts.'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                     required:
>                     - driver
>                     type: object
>                   flocker:
>                     description: Flocker represents a Flocker volume attached to a
>                       kubelet's host machine. This depends on the Flocker control
>                       service being running
>                     properties:
>                       datasetName:
>                         description: Name of the dataset stored as metadata -> name
>                           on the dataset for Flocker should be considered as deprecated
>                         type: string
>                       datasetUUID:
>                         description: UUID of the dataset. This is unique identifier
>                           of a Flocker dataset
>                         type: string
>                     type: object
>                   gcePersistentDisk:
>                     description: 'GCEPersistentDisk represents a GCE Disk resource
>                       that is attached to a kubelet''s host machine and then exposed
>                       to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       partition:
>                         description: 'The partition in the volume that you want to
>                           mount. If omitted, the default is to mount by volume name.
>                           Examples: For volume /dev/sda1, you specify the partition
>                           as "1". Similarly, the volume partition for /dev/sda is
>                           "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                         format: int32
>                         type: integer
>                       pdName:
>                         description: 'Unique name of the PD resource in GCE. Used
>                           to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the ReadOnly setting
>                           in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
>                         type: boolean
>                     required:
>                     - pdName
>                     type: object
>                   gitRepo:
>                     description: 'GitRepo represents a git repository at a particular
>                       revision. DEPRECATED: GitRepo is deprecated. To provision a
>                       container with a git repo, mount an EmptyDir into an InitContainer
>                       that clones the repo using git, then mount the EmptyDir into
>                       the Pod''s container.'
>                     properties:
>                       directory:
>                         description: Target directory name. Must not contain or start
>                           with '..'.  If '.' is supplied, the volume directory will
>                           be the git repository.  Otherwise, if specified, the volume
>                           will contain the git repository in the subdirectory with
>                           the given name.
>                         type: string
>                       repository:
>                         description: Repository URL
>                         type: string
>                       revision:
>                         description: Commit hash for the specified revision.
>                         type: string
>                     required:
>                     - repository
>                     type: object
>                   glusterfs:
>                     description: 'Glusterfs represents a Glusterfs mount on the host
>                       that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
>                     properties:
>                       endpoints:
>                         description: 'EndpointsName is the endpoint name that details
>                           Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
>                         type: string
>                       path:
>                         description: 'Path is the Glusterfs volume path. More info:
>                           https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the Glusterfs volume
>                           to be mounted with read-only permissions. Defaults to false.
>                           More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
>                         type: boolean
>                     required:
>                     - endpoints
>                     - path
>                     type: object
>                   hostPath:
>                     description: 'HostPath represents a pre-existing file or directory
>                       on the host machine that is directly exposed to the container.
>                       This is generally used for system agents or other privileged
>                       things that are allowed to see the host machine. Most containers
>                       will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
>                       --- TODO(jonesdl) We need to restrict who can use host directory
>                       mounts and who can/can not mount host directories as read/write.'
>                     properties:
>                       path:
>                         description: 'Path of the directory on the host. If the path
>                           is a symlink, it will follow the link to the real path.
>                           More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
>                         type: string
>                       type:
>                         description: 'Type for HostPath Volume Defaults to "" More
>                           info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
>                         type: string
>                     required:
>                     - path
>                     type: object
>                   iscsi:
>                     description: 'ISCSI represents an ISCSI Disk resource that is
>                       attached to a kubelet''s host machine and then exposed to the
>                       pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
>                     properties:
>                       chapAuthDiscovery:
>                         description: whether support iSCSI Discovery CHAP authentication
>                         type: boolean
>                       chapAuthSession:
>                         description: whether support iSCSI Session CHAP authentication
>                         type: boolean
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#iscsi
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       initiatorName:
>                         description: Custom iSCSI Initiator Name. If initiatorName
>                           is specified with iscsiInterface simultaneously, new iSCSI
>                           interface <target portal>:<volume name> will be created
>                           for the connection.
>                         type: string
>                       iqn:
>                         description: Target iSCSI Qualified Name.
>                         type: string
>                       iscsiInterface:
>                         description: iSCSI Interface Name that uses an iSCSI transport.
>                           Defaults to 'default' (tcp).
>                         type: string
>                       lun:
>                         description: iSCSI Target Lun number.
>                         format: int32
>                         type: integer
>                       portals:
>                         description: iSCSI Target Portal List. The portal is either
>                           an IP or ip_addr:port if the port is other than default
>                           (typically TCP ports 860 and 3260).
>                         items:
>                           type: string
>                         type: array
>                       readOnly:
>                         description: ReadOnly here will force the ReadOnly setting
>                           in VolumeMounts. Defaults to false.
>                         type: boolean
>                       secretRef:
>                         description: CHAP Secret for iSCSI target and initiator authentication
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       targetPortal:
>                         description: iSCSI Target Portal. The Portal is either an
>                           IP or ip_addr:port if the port is other than default (typically
>                           TCP ports 860 and 3260).
>                         type: string
>                     required:
>                     - iqn
>                     - lun
>                     - targetPortal
>                     type: object
>                   name:
>                     description: 'Volume''s name. Must be a DNS_LABEL and unique within
>                       the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
>                     type: string
>                   nfs:
>                     description: 'NFS represents an NFS mount on the host that shares
>                       a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                     properties:
>                       path:
>                         description: 'Path that is exported by the NFS server. More
>                           info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the NFS export to be
>                           mounted with read-only permissions. Defaults to false. More
>                           info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                         type: boolean
>                       server:
>                         description: 'Server is the hostname or IP address of the
>                           NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
>                         type: string
>                     required:
>                     - path
>                     - server
>                     type: object
>                   persistentVolumeClaim:
>                     description: 'PersistentVolumeClaimVolumeSource represents a reference
>                       to a PersistentVolumeClaim in the same namespace. More info:
>                       https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                     properties:
>                       claimName:
>                         description: 'ClaimName is the name of a PersistentVolumeClaim
>                           in the same namespace as the pod using this volume. More
>                           info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
>                         type: string
>                       readOnly:
>                         description: Will force the ReadOnly setting in VolumeMounts.
>                           Default false.
>                         type: boolean
>                     required:
>                     - claimName
>                     type: object
>                   photonPersistentDisk:
>                     description: PhotonPersistentDisk represents a PhotonController
>                       persistent disk attached and mounted on kubelets host machine
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       pdID:
>                         description: ID that identifies Photon Controller persistent
>                           disk
>                         type: string
>                     required:
>                     - pdID
>                     type: object
>                   portworxVolume:
>                     description: PortworxVolume represents a portworx volume attached
>                       and mounted on kubelets host machine
>                     properties:
>                       fsType:
>                         description: FSType represents the filesystem type to mount
>                           Must be a filesystem type supported by the host operating
>                           system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4"
>                           if unspecified.
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       volumeID:
>                         description: VolumeID uniquely identifies a Portworx volume
>                         type: string
>                     required:
>                     - volumeID
>                     type: object
>                   projected:
>                     description: Items for all in one resources secrets, configmaps,
>                       and downward API
>                     properties:
>                       defaultMode:
>                         description: Mode bits to use on created files by default.
>                           Must be a value between 0 and 0777. Directories within the
>                           path are not affected by this setting. This might be in
>                           conflict with other options that affect the file mode, like
>                           fsGroup, and the result can be other mode bits set.
>                         format: int32
>                         type: integer
>                       sources:
>                         description: list of volume projections
>                         items:
>                           description: Projection that may be projected along with
>                             other supported volume types
>                           properties:
>                             configMap:
>                               description: information about the configMap data to
>                                 project
>                               properties:
>                                 items:
>                                   description: If unspecified, each key-value pair
>                                     in the Data field of the referenced ConfigMap
>                                     will be projected into the volume as a file whose
>                                     name is the key and content is the value. If specified,
>                                     the listed keys will be projected into the specified
>                                     paths, and unlisted keys will not be present.
>                                     If a key is specified which is not present in
>                                     the ConfigMap, the volume setup will error unless
>                                     it is marked optional. Paths must be relative
>                                     and may not contain the '..' path or start with
>                                     '..'.
>                                   items:
>                                     description: Maps a string key to a path within
>                                       a volume.
>                                     properties:
>                                       key:
>                                         description: The key to project.
>                                         type: string
>                                       mode:
>                                         description: 'Optional: mode bits to use on
>                                           this file, must be a value between 0 and
>                                           0777. If not specified, the volume defaultMode
>                                           will be used. This might be in conflict
>                                           with other options that affect the file
>                                           mode, like fsGroup, and the result can be
>                                           other mode bits set.'
>                                         format: int32
>                                         type: integer
>                                       path:
>                                         description: The relative path of the file
>                                           to map the key to. May not be an absolute
>                                           path. May not contain the path element '..'.
>                                           May not start with the string '..'.
>                                         type: string
>                                     required:
>                                     - key
>                                     - path
>                                     type: object
>                                   type: array
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the ConfigMap or its
>                                     keys must be defined
>                                   type: boolean
>                               type: object
>                             downwardAPI:
>                               description: information about the downwardAPI data
>                                 to project
>                               properties:
>                                 items:
>                                   description: Items is a list of DownwardAPIVolume
>                                     file
>                                   items:
>                                     description: DownwardAPIVolumeFile represents
>                                       information to create the file containing the
>                                       pod field
>                                     properties:
>                                       fieldRef:
>                                         description: 'Required: Selects a field of
>                                           the pod: only annotations, labels, name
>                                           and namespace are supported.'
>                                         properties:
>                                           apiVersion:
>                                             description: Version of the schema the
>                                               FieldPath is written in terms of, defaults
>                                               to "v1".
>                                             type: string
>                                           fieldPath:
>                                             description: Path of the field to select
>                                               in the specified API version.
>                                             type: string
>                                         required:
>                                         - fieldPath
>                                         type: object
>                                       mode:
>                                         description: 'Optional: mode bits to use on
>                                           this file, must be a value between 0 and
>                                           0777. If not specified, the volume defaultMode
>                                           will be used. This might be in conflict
>                                           with other options that affect the file
>                                           mode, like fsGroup, and the result can be
>                                           other mode bits set.'
>                                         format: int32
>                                         type: integer
>                                       path:
>                                         description: 'Required: Path is  the relative
>                                           path name of the file to be created. Must
>                                           not be absolute or contain the ''..'' path.
>                                           Must be utf-8 encoded. The first item of
>                                           the relative path must not start with ''..'''
>                                         type: string
>                                       resourceFieldRef:
>                                         description: 'Selects a resource of the container:
>                                           only resources limits and requests (limits.cpu,
>                                           limits.memory, requests.cpu and requests.memory)
>                                           are currently supported.'
>                                         properties:
>                                           containerName:
>                                             description: 'Container name: required
>                                               for volumes, optional for env vars'
>                                             type: string
>                                           divisor:
>                                             description: Specifies the output format
>                                               of the exposed resources, defaults to
>                                               "1"
>                                             type: string
>                                           resource:
>                                             description: 'Required: resource to select'
>                                             type: string
>                                         required:
>                                         - resource
>                                         type: object
>                                     required:
>                                     - path
>                                     type: object
>                                   type: array
>                               type: object
>                             secret:
>                               description: information about the secret data to project
>                               properties:
>                                 items:
>                                   description: If unspecified, each key-value pair
>                                     in the Data field of the referenced Secret will
>                                     be projected into the volume as a file whose name
>                                     is the key and content is the value. If specified,
>                                     the listed keys will be projected into the specified
>                                     paths, and unlisted keys will not be present.
>                                     If a key is specified which is not present in
>                                     the Secret, the volume setup will error unless
>                                     it is marked optional. Paths must be relative
>                                     and may not contain the '..' path or start with
>                                     '..'.
>                                   items:
>                                     description: Maps a string key to a path within
>                                       a volume.
>                                     properties:
>                                       key:
>                                         description: The key to project.
>                                         type: string
>                                       mode:
>                                         description: 'Optional: mode bits to use on
>                                           this file, must be a value between 0 and
>                                           0777. If not specified, the volume defaultMode
>                                           will be used. This might be in conflict
>                                           with other options that affect the file
>                                           mode, like fsGroup, and the result can be
>                                           other mode bits set.'
>                                         format: int32
>                                         type: integer
>                                       path:
>                                         description: The relative path of the file
>                                           to map the key to. May not be an absolute
>                                           path. May not contain the path element '..'.
>                                           May not start with the string '..'.
>                                         type: string
>                                     required:
>                                     - key
>                                     - path
>                                     type: object
>                                   type: array
>                                 name:
>                                   description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                                     TODO: Add other useful fields. apiVersion, kind,
>                                     uid?'
>                                   type: string
>                                 optional:
>                                   description: Specify whether the Secret or its key
>                                     must be defined
>                                   type: boolean
>                               type: object
>                             serviceAccountToken:
>                               description: information about the serviceAccountToken
>                                 data to project
>                               properties:
>                                 audience:
>                                   description: Audience is the intended audience of
>                                     the token. A recipient of a token must identify
>                                     itself with an identifier specified in the audience
>                                     of the token, and otherwise should reject the
>                                     token. The audience defaults to the identifier
>                                     of the apiserver.
>                                   type: string
>                                 expirationSeconds:
>                                   description: ExpirationSeconds is the requested
>                                     duration of validity of the service account token.
>                                     As the token approaches expiration, the kubelet
>                                     volume plugin will proactively rotate the service
>                                     account token. The kubelet will start trying to
>                                     rotate the token if the token is older than 80
>                                     percent of its time to live or if the token is
>                                     older than 24 hours.Defaults to 1 hour and must
>                                     be at least 10 minutes.
>                                   format: int64
>                                   type: integer
>                                 path:
>                                   description: Path is the path relative to the mount
>                                     point of the file to project the token into.
>                                   type: string
>                               required:
>                               - path
>                               type: object
>                           type: object
>                         type: array
>                     required:
>                     - sources
>                     type: object
>                   quobyte:
>                     description: Quobyte represents a Quobyte mount on the host that
>                       shares a pod's lifetime
>                     properties:
>                       group:
>                         description: Group to map volume access to Default is no group
>                         type: string
>                       readOnly:
>                         description: ReadOnly here will force the Quobyte volume to
>                           be mounted with read-only permissions. Defaults to false.
>                         type: boolean
>                       registry:
>                         description: Registry represents a single or multiple Quobyte
>                           Registry services specified as a string as host:port pair
>                           (multiple entries are separated with commas) which acts
>                           as the central registry for volumes
>                         type: string
>                       tenant:
>                         description: Tenant owning the given Quobyte volume in the
>                           Backend Used with dynamically provisioned Quobyte volumes,
>                           value is set by the plugin
>                         type: string
>                       user:
>                         description: User to map volume access to Defaults to serivceaccount
>                           user
>                         type: string
>                       volume:
>                         description: Volume is a string that references an already
>                           created Quobyte volume by name.
>                         type: string
>                     required:
>                     - registry
>                     - volume
>                     type: object
>                   rbd:
>                     description: 'RBD represents a Rados Block Device mount on the
>                       host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
>                     properties:
>                       fsType:
>                         description: 'Filesystem type of the volume that you want
>                           to mount. Tip: Ensure that the filesystem type is supported
>                           by the host operating system. Examples: "ext4", "xfs", "ntfs".
>                           Implicitly inferred to be "ext4" if unspecified. More info:
>                           https://kubernetes.io/docs/concepts/storage/volumes#rbd
>                           TODO: how do we prevent errors in the filesystem from compromising
>                           the machine'
>                         type: string
>                       image:
>                         description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                       keyring:
>                         description: 'Keyring is the path to key ring for RBDUser.
>                           Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                       monitors:
>                         description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         items:
>                           type: string
>                         type: array
>                       pool:
>                         description: 'The rados pool name. Default is rbd. More info:
>                           https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                       readOnly:
>                         description: 'ReadOnly here will force the ReadOnly setting
>                           in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: boolean
>                       secretRef:
>                         description: 'SecretRef is name of the authentication secret
>                           for RBDUser. If provided overrides keyring. Default is nil.
>                           More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       user:
>                         description: 'The rados user name. Default is admin. More
>                           info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
>                         type: string
>                     required:
>                     - image
>                     - monitors
>                     type: object
>                   scaleIO:
>                     description: ScaleIO represents a ScaleIO persistent volume attached
>                       and mounted on Kubernetes nodes.
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Default is "xfs".
>                         type: string
>                       gateway:
>                         description: The host address of the ScaleIO API Gateway.
>                         type: string
>                       protectionDomain:
>                         description: The name of the ScaleIO Protection Domain for
>                           the configured storage.
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       secretRef:
>                         description: SecretRef references to the secret for ScaleIO
>                           user and other sensitive information. If this is not provided,
>                           Login operation will fail.
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       sslEnabled:
>                         description: Flag to enable/disable SSL communication with
>                           Gateway, default false
>                         type: boolean
>                       storageMode:
>                         description: Indicates whether the storage for a volume should
>                           be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
>                         type: string
>                       storagePool:
>                         description: The ScaleIO Storage Pool associated with the
>                           protection domain.
>                         type: string
>                       system:
>                         description: The name of the storage system as configured
>                           in ScaleIO.
>                         type: string
>                       volumeName:
>                         description: The name of a volume already created in the ScaleIO
>                           system that is associated with this volume source.
>                         type: string
>                     required:
>                     - gateway
>                     - secretRef
>                     - system
>                     type: object
>                   secret:
>                     description: 'Secret represents a secret that should populate
>                       this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
>                     properties:
>                       defaultMode:
>                         description: 'Optional: mode bits to use on created files
>                           by default. Must be a value between 0 and 0777. Defaults
>                           to 0644. Directories within the path are not affected by
>                           this setting. This might be in conflict with other options
>                           that affect the file mode, like fsGroup, and the result
>                           can be other mode bits set.'
>                         format: int32
>                         type: integer
>                       items:
>                         description: If unspecified, each key-value pair in the Data
>                           field of the referenced Secret will be projected into the
>                           volume as a file whose name is the key and content is the
>                           value. If specified, the listed keys will be projected into
>                           the specified paths, and unlisted keys will not be present.
>                           If a key is specified which is not present in the Secret,
>                           the volume setup will error unless it is marked optional.
>                           Paths must be relative and may not contain the '..' path
>                           or start with '..'.
>                         items:
>                           description: Maps a string key to a path within a volume.
>                           properties:
>                             key:
>                               description: The key to project.
>                               type: string
>                             mode:
>                               description: 'Optional: mode bits to use on this file,
>                                 must be a value between 0 and 0777. If not specified,
>                                 the volume defaultMode will be used. This might be
>                                 in conflict with other options that affect the file
>                                 mode, like fsGroup, and the result can be other mode
>                                 bits set.'
>                               format: int32
>                               type: integer
>                             path:
>                               description: The relative path of the file to map the
>                                 key to. May not be an absolute path. May not contain
>                                 the path element '..'. May not start with the string
>                                 '..'.
>                               type: string
>                           required:
>                           - key
>                           - path
>                           type: object
>                         type: array
>                       optional:
>                         description: Specify whether the Secret or its keys must be
>                           defined
>                         type: boolean
>                       secretName:
>                         description: 'Name of the secret in the pod''s namespace to
>                           use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
>                         type: string
>                     type: object
>                   storageos:
>                     description: StorageOS represents a StorageOS volume attached
>                       and mounted on Kubernetes nodes.
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       readOnly:
>                         description: Defaults to false (read/write). ReadOnly here
>                           will force the ReadOnly setting in VolumeMounts.
>                         type: boolean
>                       secretRef:
>                         description: SecretRef specifies the secret to use for obtaining
>                           the StorageOS API credentials.  If not specified, default
>                           values will be attempted.
>                         properties:
>                           name:
>                             description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
>                               TODO: Add other useful fields. apiVersion, kind, uid?'
>                             type: string
>                         type: object
>                       volumeName:
>                         description: VolumeName is the human-readable name of the
>                           StorageOS volume.  Volume names are only unique within a
>                           namespace.
>                         type: string
>                       volumeNamespace:
>                         description: VolumeNamespace specifies the scope of the volume
>                           within StorageOS.  If no namespace is specified then the
>                           Pod's namespace will be used.  This allows the Kubernetes
>                           name scoping to be mirrored within StorageOS for tighter
>                           integration. Set VolumeName to any name to override the
>                           default behaviour. Set to "default" if you are not using
>                           namespaces within StorageOS. Namespaces that do not pre-exist
>                           within StorageOS will be created.
>                         type: string
>                     type: object
>                   vsphereVolume:
>                     description: VsphereVolume represents a vSphere volume attached
>                       and mounted on kubelets host machine
>                     properties:
>                       fsType:
>                         description: Filesystem type to mount. Must be a filesystem
>                           type supported by the host operating system. Ex. "ext4",
>                           "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
>                         type: string
>                       storagePolicyID:
>                         description: Storage Policy Based Management (SPBM) profile
>                           ID associated with the StoragePolicyName.
>                         type: string
>                       storagePolicyName:
>                         description: Storage Policy Based Management (SPBM) profile
>                           name.
>                         type: string
>                       volumePath:
>                         description: Path that identifies vSphere volume vmdk
>                         type: string
>                     required:
>                     - volumePath
>                     type: object
>                 required:
>                 - name
>                 type: object
>               type: array
>           required:
>           - queryEndpoints
>           type: object
>         status:
>           description: 'Most recent observed status of the ThanosRuler cluster. Read-only.
>             Not included when requesting from the apiserver, only from the ThanosRuler
>             Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
>           properties:
>             availableReplicas:
>               description: Total number of available pods (ready for at least minReadySeconds)
>                 targeted by this ThanosRuler deployment.
>               format: int32
>               type: integer
>             paused:
>               description: Represents whether any actions on the underlying managed
>                 objects are being performed. Only delete actions will be performed.
>               type: boolean
>             replicas:
>               description: Total number of non-terminated pods targeted by this ThanosRuler
>                 deployment (their labels match the selector).
>               format: int32
>               type: integer
>             unavailableReplicas:
>               description: Total number of unavailable pods targeted by this ThanosRuler
>                 deployment.
>               format: int32
>               type: integer
>             updatedReplicas:
>               description: Total number of non-terminated pods targeted by this ThanosRuler
>                 deployment that have the desired version spec.
>               format: int32
>               type: integer
>           required:
>           - availableReplicas
>           - paused
>           - replicas
>           - unavailableReplicas
>           - updatedReplicas
>           type: object
>       required:
>       - spec
>       type: object
>   version: v1
>   versions:
>   - name: v1
>     served: true
>     storage: true
> status:
>   acceptedNames:
>     kind: ""
>     plural: ""
>   conditions: []
>   storedVersions: []
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/requirements.lock packages/monitoring/charts/requirements.lock
0a1,12
> dependencies:
> - name: kube-state-metrics
>   repository: https://kubernetes-charts.storage.googleapis.com/
>   version: 2.6.4
> - name: prometheus-node-exporter
>   repository: https://kubernetes-charts.storage.googleapis.com/
>   version: 1.8.2
> - name: grafana
>   repository: https://kubernetes-charts.storage.googleapis.com/
>   version: 5.0.5
> digest: sha256:91fd7999520c95c52890b552bc27a4abfcd78372c3fa4e7432756319b952c032
> generated: "2020-03-05T09:02:41.550096-05:00"
diff -Nr packages/monitoring/charts-original/requirements.yaml packages/monitoring/charts/requirements.yaml
0a1,16
> dependencies:
> 
>   - name: kube-state-metrics
>     version: "2.6.*"
>     repository: https://kubernetes-charts.storage.googleapis.com/
>     condition: kubeStateMetrics.enabled
> 
>   - name: prometheus-node-exporter
>     version: "1.8.*"
>     repository: https://kubernetes-charts.storage.googleapis.com/
>     condition: nodeExporter.enabled
> 
>   - name: grafana
>     version: "5.0.*"
>     repository: https://kubernetes-charts.storage.googleapis.com/
>     condition: grafana.enabled
diff -Nr packages/monitoring/charts-original/templates/NOTES.txt packages/monitoring/charts/templates/NOTES.txt
0a1,5
> The Prometheus Operator has been installed. Check its status by running:
>   kubectl --namespace {{ $.Release.Namespace }} get pods -l "release={{ $.Release.Name }}"
> 
> Visit https://github.com/coreos/prometheus-operator for instructions on how
> to create & configure Alertmanager and Prometheus instances using the Operator.
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/_helpers.tpl packages/monitoring/charts/templates/_helpers.tpl
0a1,82
> {{/* vim: set filetype=mustache: */}}
> {{/* Expand the name of the chart. This is suffixed with -alertmanager, which means subtract 13 from longest 63 available */}}
> {{- define "prometheus-operator.name" -}}
> {{- default .Chart.Name .Values.nameOverride | trunc 50 | trimSuffix "-" -}}
> {{- end }}
> 
> {{/*
> Create a default fully qualified app name.
> We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
> If release name contains chart name it will be used as a full name.
> The components in this chart create additional resources that expand the longest created name strings.
> The longest name that gets created adds and extra 37 characters, so truncation should be 63-35=26.
> */}}
> {{- define "prometheus-operator.fullname" -}}
> {{- if .Values.fullnameOverride -}}
> {{- .Values.fullnameOverride | trunc 26 | trimSuffix "-" -}}
> {{- else -}}
> {{- $name := default .Chart.Name .Values.nameOverride -}}
> {{- if contains $name .Release.Name -}}
> {{- .Release.Name | trunc 26 | trimSuffix "-" -}}
> {{- else -}}
> {{- printf "%s-%s" .Release.Name $name | trunc 26 | trimSuffix "-" -}}
> {{- end -}}
> {{- end -}}
> {{- end -}}
> 
> {{/* Fullname suffixed with operator */}}
> {{- define "prometheus-operator.operator.fullname" -}}
> {{- printf "%s-operator" (include "prometheus-operator.fullname" .) -}}
> {{- end }}
> 
> {{/* Fullname suffixed with prometheus */}}
> {{- define "prometheus-operator.prometheus.fullname" -}}
> {{- printf "%s-prometheus" (include "prometheus-operator.fullname" .) -}}
> {{- end }}
> 
> {{/* Fullname suffixed with alertmanager */}}
> {{- define "prometheus-operator.alertmanager.fullname" -}}
> {{- printf "%s-alertmanager" (include "prometheus-operator.fullname" .) -}}
> {{- end }}
> 
> {{/* Create chart name and version as used by the chart label. */}}
> {{- define "prometheus-operator.chartref" -}}
> {{- replace "+" "_" .Chart.Version | printf "%s-%s" .Chart.Name -}}
> {{- end }}
> 
> {{/* Generate basic labels */}}
> {{- define "prometheus-operator.labels" }}
> chart: {{ template "prometheus-operator.chartref" . }}
> release: {{ $.Release.Name | quote }}
> heritage: {{ $.Release.Service | quote }}
> {{- if .Values.commonLabels}}
> {{ toYaml .Values.commonLabels }}
> {{- end }}
> {{- end }}
> 
> {{/* Create the name of prometheus-operator service account to use */}}
> {{- define "prometheus-operator.operator.serviceAccountName" -}}
> {{- if .Values.prometheusOperator.serviceAccount.create -}}
>     {{ default (include "prometheus-operator.operator.fullname" .) .Values.prometheusOperator.serviceAccount.name }}
> {{- else -}}
>     {{ default "default" .Values.prometheusOperator.serviceAccount.name }}
> {{- end -}}
> {{- end -}}
> 
> {{/* Create the name of prometheus service account to use */}}
> {{- define "prometheus-operator.prometheus.serviceAccountName" -}}
> {{- if .Values.prometheus.serviceAccount.create -}}
>     {{ default (include "prometheus-operator.prometheus.fullname" .) .Values.prometheus.serviceAccount.name }}
> {{- else -}}
>     {{ default "default" .Values.prometheus.serviceAccount.name }}
> {{- end -}}
> {{- end -}}
> 
> {{/* Create the name of alertmanager service account to use */}}
> {{- define "prometheus-operator.alertmanager.serviceAccountName" -}}
> {{- if .Values.alertmanager.serviceAccount.create -}}
>     {{ default (include "prometheus-operator.alertmanager.fullname" .) .Values.alertmanager.serviceAccount.name }}
> {{- else -}}
>     {{ default "default" .Values.alertmanager.serviceAccount.name }}
> {{- end -}}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/templates/alertmanager/alertmanager.yaml packages/monitoring/charts/templates/alertmanager/alertmanager.yaml
0a1,107
> {{- if .Values.alertmanager.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: Alertmanager
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-alertmanager
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
> {{- if .Values.alertmanager.alertmanagerSpec.image }}
>   baseImage: {{ .Values.alertmanager.alertmanagerSpec.image.repository }}
>   version: {{ .Values.alertmanager.alertmanagerSpec.image.tag }}
> {{- end }}
>   replicas: {{ .Values.alertmanager.alertmanagerSpec.replicas }}
>   listenLocal: {{ .Values.alertmanager.alertmanagerSpec.listenLocal }}
>   serviceAccountName: {{ template "prometheus-operator.alertmanager.serviceAccountName" . }}
> {{- if .Values.alertmanager.alertmanagerSpec.externalUrl }}
>   externalUrl: "{{ .Values.alertmanager.alertmanagerSpec.externalUrl }}"
> {{- else if and .Values.alertmanager.ingress.enabled .Values.alertmanager.ingress.hosts }}
>   externalUrl: "http://{{ index .Values.alertmanager.ingress.hosts 0 }}{{ .Values.alertmanager.alertmanagerSpec.routePrefix }}"
> {{- else }}
>   externalUrl: http://{{ template "prometheus-operator.fullname" . }}-alertmanager.{{ $.Release.Namespace }}:{{ .Values.alertmanager.service.port }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.nodeSelector }}
>   nodeSelector:
> {{ toYaml .Values.alertmanager.alertmanagerSpec.nodeSelector | indent 4 }}
> {{- end }}
>   paused: {{ .Values.alertmanager.alertmanagerSpec.paused }}
>   logFormat: {{ .Values.alertmanager.alertmanagerSpec.logFormat | quote  }}
>   logLevel:  {{ .Values.alertmanager.alertmanagerSpec.logLevel | quote  }}
>   retention: {{ .Values.alertmanager.alertmanagerSpec.retention | quote  }}
> {{- if .Values.alertmanager.alertmanagerSpec.secrets }}
>   secrets:
> {{ toYaml .Values.alertmanager.alertmanagerSpec.secrets | indent 4 }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.configSecret }}
>   configSecret: {{ .Values.alertmanager.alertmanagerSpec.configSecret }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.configMaps }}
>   configMaps:
> {{ toYaml .Values.alertmanager.alertmanagerSpec.configMaps | indent 4 }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.resources }}
>   resources:
> {{ toYaml .Values.alertmanager.alertmanagerSpec.resources | indent 4 }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.routePrefix }}
>   routePrefix: "{{ .Values.alertmanager.alertmanagerSpec.routePrefix }}"
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.securityContext }}
>   securityContext:
> {{ toYaml .Values.alertmanager.alertmanagerSpec.securityContext | indent 4 }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.storage }}
>   storage:
> {{ toYaml .Values.alertmanager.alertmanagerSpec.storage | indent 4 }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.podMetadata }}
>   podMetadata:
> {{ toYaml .Values.alertmanager.alertmanagerSpec.podMetadata | indent 4 }}
> {{- end }}
> {{- if or .Values.alertmanager.alertmanagerSpec.podAntiAffinity .Values.alertmanager.alertmanagerSpec.affinity }}
>   affinity:
> {{- if .Values.alertmanager.alertmanagerSpec.affinity }}
> {{ toYaml .Values.alertmanager.alertmanagerSpec.affinity | indent 4 }}
> {{- end }}
> {{- if eq .Values.alertmanager.alertmanagerSpec.podAntiAffinity "hard" }}
>     podAntiAffinity:
>       requiredDuringSchedulingIgnoredDuringExecution:
>       - topologyKey: {{ .Values.alertmanager.alertmanagerSpec.podAntiAffinityTopologyKey }}
>         labelSelector:
>           matchLabels:
>             app: alertmanager
>             alertmanager: {{ template "prometheus-operator.fullname" . }}-alertmanager
> {{- else if eq .Values.alertmanager.alertmanagerSpec.podAntiAffinity "soft" }}
>     podAntiAffinity:
>       preferredDuringSchedulingIgnoredDuringExecution:
>       - weight: 100
>         podAffinityTerm:
>           topologyKey: {{ .Values.alertmanager.alertmanagerSpec.podAntiAffinityTopologyKey }}
>           labelSelector:
>             matchLabels:
>               app: alertmanager
>               alertmanager: {{ template "prometheus-operator.fullname" . }}-alertmanager
> {{- end }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.tolerations }}
>   tolerations:
> {{ toYaml .Values.alertmanager.alertmanagerSpec.tolerations | indent 4 }}
> {{- end }}
> {{- if .Values.global.imagePullSecrets }}
>   imagePullSecrets:
> {{ toYaml .Values.global.imagePullSecrets | indent 4 }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.containers }}
>   containers:
> {{ toYaml .Values.alertmanager.alertmanagerSpec.containers | indent 4 }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.priorityClassName }}
>   priorityClassName: {{.Values.alertmanager.alertmanagerSpec.priorityClassName }}
> {{- end }}
> {{- if .Values.alertmanager.alertmanagerSpec.additionalPeers }}
>   additionalPeers: {{.Values.alertmanager.alertmanagerSpec.additionalPeers }}
> {{- end }}
>   portName: {{ .Values.alertmanager.alertmanagerSpec.portName }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/alertmanager/ingress.yaml packages/monitoring/charts/templates/alertmanager/ingress.yaml
0a1,49
> {{- if and .Values.alertmanager.enabled .Values.alertmanager.ingress.enabled }}
> {{- $serviceName := printf "%s-%s" (include "prometheus-operator.fullname" .) "alertmanager" }}
> {{- $servicePort := .Values.alertmanager.service.port -}}
> {{- $routePrefix := list .Values.alertmanager.alertmanagerSpec.routePrefix }}
> {{- $paths := .Values.alertmanager.ingress.paths | default $routePrefix -}}
> apiVersion: extensions/v1beta1
> kind: Ingress
> metadata:
>   name: {{ $serviceName }}
>   namespace: {{ $.Release.Namespace }}
> {{- if .Values.alertmanager.ingress.annotations }}
>   annotations:
> {{ toYaml .Values.alertmanager.ingress.annotations | indent 4 }}
> {{- end }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{- if .Values.alertmanager.ingress.labels }}
> {{ toYaml .Values.alertmanager.ingress.labels | indent 4 }}
> {{- end }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   rules:
>   {{- if .Values.alertmanager.ingress.hosts }}
>   {{- range $host := .Values.alertmanager.ingress.hosts }}
>     - host: {{ tpl $host $ }}
>       http:
>         paths:
>   {{- range $p := $paths }}
>           - path: {{ tpl $p $ }}
>             backend:
>               serviceName: {{ $serviceName }}
>               servicePort: {{ $servicePort }}
>   {{- end -}}
>   {{- end -}}
>   {{- else }}
>     - http:
>         paths:
>   {{- range $p := $paths }}
>           - path: {{ tpl $p $ }}
>             backend:
>               serviceName: {{ $serviceName }}
>               servicePort: {{ $servicePort }}
>   {{- end -}}
>   {{- end -}}
>   {{- if .Values.alertmanager.ingress.tls }}
>   tls:
> {{ toYaml .Values.alertmanager.ingress.tls | indent 4 }}
>   {{- end -}}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/templates/alertmanager/podDisruptionBudget.yaml packages/monitoring/charts/templates/alertmanager/podDisruptionBudget.yaml
0a1,21
> {{- if and .Values.alertmanager.enabled .Values.alertmanager.podDisruptionBudget.enabled }}
> apiVersion: policy/v1beta1
> kind: PodDisruptionBudget
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-alertmanager
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   {{- if .Values.alertmanager.podDisruptionBudget.minAvailable }}
>   minAvailable: {{ .Values.alertmanager.podDisruptionBudget.minAvailable }}
>   {{- end }}
>   {{- if .Values.alertmanager.podDisruptionBudget.maxUnavailable }}
>   maxUnavailable: {{ .Values.alertmanager.podDisruptionBudget.maxUnavailable }}
>   {{- end }}
>   selector:
>     matchLabels:
>       app: alertmanager
>       alertmanager: {{ template "prometheus-operator.fullname" . }}-alertmanager
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/alertmanager/psp-role.yaml packages/monitoring/charts/templates/alertmanager/psp-role.yaml
0a1,21
> {{- if and .Values.alertmanager.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> kind: Role
> apiVersion: rbac.authorization.k8s.io/v1
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-alertmanager
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> rules:
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if semverCompare "> 1.15.0-0" $kubeTargetVersion }}
> - apiGroups: ['policy']
> {{- else }}
> - apiGroups: ['extensions']
> {{- end }}
>   resources: ['podsecuritypolicies']
>   verbs:     ['use']
>   resourceNames:
>   - {{ template "prometheus-operator.fullname" . }}-alertmanager
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/alertmanager/psp-rolebinding.yaml packages/monitoring/charts/templates/alertmanager/psp-rolebinding.yaml
0a1,17
> {{- if and .Values.alertmanager.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-alertmanager
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: {{ template "prometheus-operator.fullname" . }}-alertmanager
> subjects:
>   - kind: ServiceAccount
>     name: {{ template "prometheus-operator.alertmanager.serviceAccountName" . }}
>     namespace: {{ $.Release.Namespace }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/alertmanager/psp.yaml packages/monitoring/charts/templates/alertmanager/psp.yaml
0a1,49
> {{- if and .Values.alertmanager.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> apiVersion: policy/v1beta1
> kind: PodSecurityPolicy
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-alertmanager
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   privileged: false
>   # Required to prevent escalations to root.
>   # allowPrivilegeEscalation: false
>   # This is redundant with non-root + disallow privilege escalation,
>   # but we can provide it for defense in depth.
>   #requiredDropCapabilities:
>   #  - ALL
>   # Allow core volume types.
>   volumes:
>     - 'configMap'
>     - 'emptyDir'
>     - 'projected'
>     - 'secret'
>     - 'downwardAPI'
>     - 'persistentVolumeClaim'
>   hostNetwork: false
>   hostIPC: false
>   hostPID: false
>   runAsUser:
>     # Permits the container to run with root privileges as well.
>     rule: 'RunAsAny'
>   seLinux:
>     # This policy assumes the nodes are using AppArmor rather than SELinux.
>     rule: 'RunAsAny'
>   supplementalGroups:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   fsGroup:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   readOnlyRootFilesystem: false
> {{- end }}
> 
diff -Nr packages/monitoring/charts-original/templates/alertmanager/secret.yaml packages/monitoring/charts/templates/alertmanager/secret.yaml
0a1,23
> {{- if and (.Values.alertmanager.enabled) (not .Values.alertmanager.alertmanagerSpec.useExistingSecret) }}
> apiVersion: v1
> kind: Secret
> metadata:
>   name: alertmanager-{{ template "prometheus-operator.fullname" . }}-alertmanager
>   namespace: {{ $.Release.Namespace }}
> {{- if .Values.alertmanager.secret.annotations }}
>   annotations:
> {{ toYaml .Values.alertmanager.secret.annotations | indent 4 }}
> {{- end }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> data:
> {{- if .Values.alertmanager.tplConfig }}
>   alertmanager.yaml: {{ tpl (toYaml .Values.alertmanager.config) . | b64enc | quote }}
> {{- else }}
>   alertmanager.yaml: {{ toYaml .Values.alertmanager.config | b64enc | quote }}
> {{- end}}
> {{- range $key, $val := .Values.alertmanager.templateFiles }}
>   {{ $key }}: {{ $val | b64enc | quote }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/alertmanager/service.yaml packages/monitoring/charts/templates/alertmanager/service.yaml
0a1,46
> {{- if .Values.alertmanager.enabled }}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-alertmanager
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.alertmanager.service.labels }}
> {{ toYaml .Values.alertmanager.service.labels | indent 4 }}
> {{- end }}
> {{- if .Values.alertmanager.service.annotations }}
>   annotations:
> {{ toYaml .Values.alertmanager.service.annotations | indent 4 }}
> {{- end }}
> spec:
> {{- if .Values.alertmanager.service.clusterIP }}
>   clusterIP: {{ .Values.alertmanager.service.clusterIP }}
> {{- end }}
> {{- if .Values.alertmanager.service.externalIPs }}
>   externalIPs:
> {{ toYaml .Values.alertmanager.service.externalIPs | indent 4 }}
> {{- end }}
> {{- if .Values.alertmanager.service.loadBalancerIP }}
>   loadBalancerIP: {{ .Values.alertmanager.service.loadBalancerIP }}
> {{- end }}
> {{- if .Values.alertmanager.service.loadBalancerSourceRanges }}
>   loadBalancerSourceRanges:
>   {{- range $cidr := .Values.alertmanager.service.loadBalancerSourceRanges }}
>     - {{ $cidr }}
>   {{- end }}
> {{- end }}
>   ports:
>     - name: {{ .Values.alertmanager.alertmanagerSpec.portName }}
>     {{- if eq .Values.alertmanager.service.type "NodePort" }}
>       nodePort: {{ .Values.alertmanager.service.nodePort }}
>     {{- end }}
>       port: {{ .Values.alertmanager.service.port }}
>       targetPort: {{ .Values.alertmanager.service.targetPort }}
>       protocol: TCP
>   selector:
>     app: alertmanager
>     alertmanager: {{ template "prometheus-operator.fullname" . }}-alertmanager
>   type: "{{ .Values.alertmanager.service.type }}"
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/alertmanager/serviceaccount.yaml packages/monitoring/charts/templates/alertmanager/serviceaccount.yaml
0a1,12
> {{- if and .Values.alertmanager.enabled .Values.alertmanager.serviceAccount.create }}
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   name: {{ template "prometheus-operator.alertmanager.serviceAccountName" . }}
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> imagePullSecrets:
> {{ toYaml .Values.global.imagePullSecrets | indent 2 }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/alertmanager/servicemonitor.yaml packages/monitoring/charts/templates/alertmanager/servicemonitor.yaml
0a1,32
> {{- if and .Values.alertmanager.enabled .Values.alertmanager.serviceMonitor.selfMonitor }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-alertmanager
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-alertmanager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-alertmanager
>       release: {{ $.Release.Name | quote }}
>   namespaceSelector:
>     matchNames:
>       - {{ $.Release.Namespace | quote }}
>   endpoints:
>   - port: {{ .Values.alertmanager.alertmanagerSpec.portName }}
>     {{- if .Values.alertmanager.serviceMonitor.interval }}
>     interval: {{ .Values.alertmanager.serviceMonitor.interval }}
>     {{- end }}
>     path: "{{ trimSuffix "/" .Values.alertmanager.alertmanagerSpec.routePrefix }}/metrics"
> {{- if .Values.alertmanager.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.alertmanager.serviceMonitor.metricRelabelings | indent 6) . }}
> {{- end }}
> {{- if .Values.alertmanager.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.alertmanager.serviceMonitor.relabelings | indent 6 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/core-dns/service.yaml packages/monitoring/charts/templates/exporters/core-dns/service.yaml
0a1,24
> {{- if .Values.coreDns.enabled }}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-coredns
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-coredns
>     jobLabel: coredns
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system
> spec:
>   clusterIP: None
>   ports:
>     - name: http-metrics
>       port: {{ .Values.coreDns.service.port }}
>       protocol: TCP
>       targetPort: {{ .Values.coreDns.service.targetPort }}
>   selector:
>     {{- if .Values.coreDns.service.selector }}
> {{ toYaml .Values.coreDns.service.selector | indent 4 }}
>     {{- else}}
>     k8s-app: kube-dns
>     {{- end}}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/core-dns/servicemonitor.yaml packages/monitoring/charts/templates/exporters/core-dns/servicemonitor.yaml
0a1,33
> {{- if .Values.coreDns.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-coredns
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-coredns
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   jobLabel: jobLabel
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-coredns
>       release: {{ $.Release.Name | quote }}
>   namespaceSelector:
>     matchNames:
>       - "kube-system"
>   endpoints:
>   - port: http-metrics
>     {{- if .Values.coreDns.serviceMonitor.interval}}
>     interval: {{ .Values.coreDns.serviceMonitor.interval }}
>     {{- end }}
>     bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
> {{- if .Values.coreDns.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.coreDns.serviceMonitor.metricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.coreDns.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.coreDns.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-api-server/servicemonitor.yaml packages/monitoring/charts/templates/exporters/kube-api-server/servicemonitor.yaml
0a1,36
> {{- if .Values.kubeApiServer.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-apiserver
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-apiserver
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   endpoints:
>   - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
>     {{- if .Values.kubeApiServer.serviceMonitor.interval }}
>     interval: {{ .Values.kubeApiServer.serviceMonitor.interval }}
>     {{- end }}
>     port: https
>     scheme: https
> {{- if .Values.kubeApiServer.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubeApiServer.serviceMonitor.metricRelabelings | indent 6) . }}
> {{- end }}
> {{- if .Values.kubeApiServer.relabelings }}
>     relabelings:
> {{ toYaml .Values.kubeApiServer.relabelings | indent 6 }}
> {{- end }}
>     tlsConfig:
>       caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
>       serverName: {{ .Values.kubeApiServer.tlsConfig.serverName }}
>       insecureSkipVerify: {{ .Values.kubeApiServer.tlsConfig.insecureSkipVerify }}
>   jobLabel: {{ .Values.kubeApiServer.serviceMonitor.jobLabel }}
>   namespaceSelector:
>     matchNames:
>     - default
>   selector:
> {{ toYaml .Values.kubeApiServer.serviceMonitor.selector | indent 4 }}
> {{- end}}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-controller-manager/endpoints.yaml packages/monitoring/charts/templates/exporters/kube-controller-manager/endpoints.yaml
0a1,20
> {{- if and .Values.kubeControllerManager.enabled .Values.kubeControllerManager.endpoints }}
> apiVersion: v1
> kind: Endpoints
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-controller-manager
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-controller-manager
>     k8s-app: kube-controller-manager
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system 
> subsets:
>   - addresses:
>       {{- range .Values.kubeControllerManager.endpoints }}
>       - ip: {{ . }}
>       {{- end }}
>     ports:
>       - name: http-metrics
>         port: {{ .Values.kubeControllerManager.service.port }}
>         protocol: TCP
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-controller-manager/service.yaml packages/monitoring/charts/templates/exporters/kube-controller-manager/service.yaml
0a1,27
> {{- if .Values.kubeControllerManager.enabled }}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-controller-manager
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-controller-manager
>     jobLabel: kube-controller-manager
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system
> spec:
>   clusterIP: None
>   ports:
>     - name: http-metrics
>       port: {{ .Values.kubeControllerManager.service.port }}
>       protocol: TCP
>       targetPort: {{ .Values.kubeControllerManager.service.targetPort }}
> {{- if .Values.kubeControllerManager.endpoints }}{{- else }}
>   selector:
>     {{- if .Values.kubeControllerManager.service.selector }}
> {{ toYaml .Values.kubeControllerManager.service.selector | indent 4 }}
>     {{- else}}
>     component: kube-controller-manager
>     {{- end}}
> {{- end }}
>   type: ClusterIP
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-controller-manager/servicemonitor.yaml packages/monitoring/charts/templates/exporters/kube-controller-manager/servicemonitor.yaml
0a1,44
> {{- if .Values.kubeControllerManager.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-controller-manager
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-controller-manager
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   jobLabel: jobLabel
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-kube-controller-manager
>       release: {{ $.Release.Name | quote }}
>   namespaceSelector:
>     matchNames:
>       - "kube-system"
>   endpoints:
>   - port: http-metrics
>     {{- if .Values.kubeControllerManager.serviceMonitor.interval }}
>     interval: {{ .Values.kubeControllerManager.serviceMonitor.interval }}
>     {{- end }}
>     bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
>     {{- if .Values.kubeControllerManager.serviceMonitor.https }}
>     scheme: https
>     tlsConfig:
>       caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
>       {{- if .Values.kubeControllerManager.serviceMonitor.insecureSkipVerify }}
>       insecureSkipVerify: {{ .Values.kubeControllerManager.serviceMonitor.insecureSkipVerify }}
>       {{- end }}
>       {{- if .Values.kubeControllerManager.serviceMonitor.serverName }}
>       serverName: {{ .Values.kubeControllerManager.serviceMonitor.serverName }}
>       {{- end }}
>     {{- end }}
> {{- if .Values.kubeControllerManager.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubeControllerManager.serviceMonitor.metricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubeControllerManager.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.kubeControllerManager.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-dns/service.yaml packages/monitoring/charts/templates/exporters/kube-dns/service.yaml
0a1,28
> {{- if .Values.kubeDns.enabled }}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-dns
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-dns
>     jobLabel: kube-dns
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system
> spec:
>   clusterIP: None
>   ports:
>     - name: http-metrics-dnsmasq
>       port: {{ .Values.kubeDns.service.dnsmasq.port }}
>       protocol: TCP
>       targetPort: {{ .Values.kubeDns.service.dnsmasq.targetPort }}
>     - name: http-metrics-skydns
>       port: {{ .Values.kubeDns.service.skydns.port }}
>       protocol: TCP
>       targetPort: {{ .Values.kubeDns.service.skydns.targetPort }}
>   selector:
>     {{- if .Values.kubeDns.service.selector }}
> {{ toYaml .Values.kubeDns.service.selector | indent 4 }}
>     {{- else}}
>     k8s-app: kube-dns
>     {{- end}}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-dns/servicemonitor.yaml packages/monitoring/charts/templates/exporters/kube-dns/servicemonitor.yaml
0a1,46
> {{- if .Values.kubeDns.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-dns
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-dns
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   jobLabel: jobLabel
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-kube-dns
>       release: {{ $.Release.Name | quote }}
>   namespaceSelector:
>     matchNames:
>       - "kube-system"
>   endpoints:
>   - port: http-metrics-dnsmasq
>     {{- if .Values.kubeDns.serviceMonitor.interval }}
>     interval: {{ .Values.kubeDns.serviceMonitor.interval }}
>     {{- end }}
>     bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
> {{- if .Values.kubeDns.serviceMonitor.dnsmasqMetricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubeDns.serviceMonitor.dnsmasqMetricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubeDns.serviceMonitor.dnsmasqRelabelings }}
>     relabelings:
> {{ toYaml .Values.kubeDns.serviceMonitor.dnsmasqRelabelings | indent 4 }}
> {{- end }}
>   - port: http-metrics-skydns
>     {{- if .Values.kubeDns.serviceMonitor.interval }}
>     interval: {{ .Values.kubeDns.serviceMonitor.interval }}
>     {{- end }}
>     bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
> {{- if .Values.kubeDns.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubeDns.serviceMonitor.metricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubeDns.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.kubeDns.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-etcd/endpoints.yaml packages/monitoring/charts/templates/exporters/kube-etcd/endpoints.yaml
0a1,20
> {{- if and .Values.kubeEtcd.enabled .Values.kubeEtcd.endpoints }}
> apiVersion: v1
> kind: Endpoints
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-etcd
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-etcd
>     k8s-app: etcd-server
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system
> subsets:
>   - addresses:
>       {{- range .Values.kubeEtcd.endpoints }}
>       - ip: {{ . }}
>       {{- end }}
>     ports:
>       - name: http-metrics
>         port: {{ .Values.kubeEtcd.service.port }}
>         protocol: TCP
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-etcd/service.yaml packages/monitoring/charts/templates/exporters/kube-etcd/service.yaml
0a1,27
> {{- if .Values.kubeEtcd.enabled }}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-etcd
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-etcd
>     jobLabel: kube-etcd
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system
> spec:
>   clusterIP: None
>   ports:
>     - name: http-metrics
>       port: {{ .Values.kubeEtcd.service.port }}
>       protocol: TCP
>       targetPort: {{ .Values.kubeEtcd.service.targetPort }}
> {{- if .Values.kubeEtcd.endpoints }}{{- else }}
>   selector:
>     {{- if .Values.kubeEtcd.service.selector }}
> {{ toYaml .Values.kubeEtcd.service.selector | indent 4 }}
>     {{- else}}
>     component: etcd
>     {{- end}}
> {{- end }}
>   type: ClusterIP
> {{- end -}}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-etcd/servicemonitor.yaml packages/monitoring/charts/templates/exporters/kube-etcd/servicemonitor.yaml
0a1,50
> {{- if .Values.kubeEtcd.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-etcd
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-etcd
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   jobLabel: jobLabel
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-kube-etcd
>       release: {{ $.Release.Name | quote }}
>   namespaceSelector:
>     matchNames:
>       - "kube-system"
>   endpoints:
>   - port: http-metrics
>     {{- if .Values.kubeEtcd.serviceMonitor.interval }}
>     interval: {{ .Values.kubeEtcd.serviceMonitor.interval }}
>     {{- end }}
>     bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
>     {{- if eq .Values.kubeEtcd.serviceMonitor.scheme "https" }}
>     scheme: https
>     tlsConfig:
>       {{- if .Values.kubeEtcd.serviceMonitor.serverName }}
>       serverName: {{ .Values.kubeEtcd.serviceMonitor.serverName }}
>       {{- end }}
>       {{- if .Values.kubeEtcd.serviceMonitor.caFile }}
>       caFile: {{ .Values.kubeEtcd.serviceMonitor.caFile }}
>       {{- end }}
>       {{- if  .Values.kubeEtcd.serviceMonitor.certFile }}
>       certFile: {{ .Values.kubeEtcd.serviceMonitor.certFile }}
>       {{- end }}
>       {{- if .Values.kubeEtcd.serviceMonitor.keyFile }}
>       keyFile: {{ .Values.kubeEtcd.serviceMonitor.keyFile }}
>       {{- end}}
>       insecureSkipVerify: {{ .Values.kubeEtcd.serviceMonitor.insecureSkipVerify }}
>     {{- end }}
> {{- if .Values.kubeEtcd.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubeEtcd.serviceMonitor.metricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubeEtcd.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.kubeEtcd.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-proxy/endpoints.yaml packages/monitoring/charts/templates/exporters/kube-proxy/endpoints.yaml
0a1,20
> {{- if and .Values.kubeProxy.enabled .Values.kubeProxy.endpoints }}
> apiVersion: v1
> kind: Endpoints
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-proxy
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-proxy
>     k8s-app: kube-proxy
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system
> subsets:
>   - addresses:
>       {{- range .Values.kubeProxy.endpoints }}
>       - ip: {{ . }}
>       {{- end }}
>     ports:
>       - name: http-metrics
>         port: {{ .Values.kubeProxy.service.port }}
>         protocol: TCP
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-proxy/service.yaml packages/monitoring/charts/templates/exporters/kube-proxy/service.yaml
0a1,27
> {{- if .Values.kubeProxy.enabled }}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-proxy
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-proxy
>     jobLabel: kube-proxy
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system
> spec:
>   clusterIP: None
>   ports:
>     - name: http-metrics
>       port: {{ .Values.kubeProxy.service.port }}
>       protocol: TCP
>       targetPort: {{ .Values.kubeProxy.service.targetPort }}
> {{- if .Values.kubeProxy.endpoints }}{{- else }}
>   selector:
>     {{- if .Values.kubeProxy.service.selector }}
> {{ toYaml .Values.kubeProxy.service.selector | indent 4 }}
>     {{- else}}
>     k8s-app: kube-proxy
>     {{- end}}
> {{- end }}
>   type: ClusterIP
> {{- end -}}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-proxy/servicemonitor.yaml packages/monitoring/charts/templates/exporters/kube-proxy/servicemonitor.yaml
0a1,38
> {{- if .Values.kubeProxy.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-proxy
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-proxy
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   jobLabel: jobLabel
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-kube-proxy
>       release: {{ $.Release.Name | quote }}
>   namespaceSelector:
>     matchNames:
>       - "kube-system"
>   endpoints:
>   - port: http-metrics
>     {{- if .Values.kubeProxy.serviceMonitor.interval }}
>     interval: {{ .Values.kubeProxy.serviceMonitor.interval }}
>     {{- end }}
>     bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
>     {{- if .Values.kubeProxy.serviceMonitor.https }}
>     scheme: https
>     tlsConfig:
>       caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
>     {{- end}}
> {{- if .Values.kubeProxy.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ toYaml .Values.kubeProxy.serviceMonitor.metricRelabelings | indent 4 }}
> {{- end }}
> {{- if .Values.kubeProxy.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.kubeProxy.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-scheduler/endpoints.yaml packages/monitoring/charts/templates/exporters/kube-scheduler/endpoints.yaml
0a1,20
> {{- if and .Values.kubeScheduler.enabled .Values.kubeScheduler.endpoints }}
> apiVersion: v1
> kind: Endpoints
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-scheduler
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-scheduler
>     k8s-app: kube-scheduler
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system
> subsets:
>   - addresses:
>       {{- range .Values.kubeScheduler.endpoints }}
>       - ip: {{ . }}
>       {{- end }}
>     ports:
>       - name: http-metrics
>         port: {{ .Values.kubeScheduler.service.port }}
>         protocol: TCP
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-scheduler/service.yaml packages/monitoring/charts/templates/exporters/kube-scheduler/service.yaml
0a1,27
> {{- if .Values.kubeScheduler.enabled }}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-scheduler
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-scheduler
>     jobLabel: kube-scheduler
> {{ include "prometheus-operator.labels" . | indent 4 }}
>   namespace: kube-system
> spec:
>   clusterIP: None
>   ports:
>     - name: http-metrics
>       port: {{ .Values.kubeScheduler.service.port}}
>       protocol: TCP
>       targetPort: {{ .Values.kubeScheduler.service.targetPort}}
> {{- if .Values.kubeScheduler.endpoints }}{{- else }}
>   selector:
>     {{- if .Values.kubeScheduler.service.selector }}
> {{ toYaml .Values.kubeScheduler.service.selector | indent 4 }}
>     {{- else}}
>     component: kube-scheduler
>     {{- end}}
> {{- end }}
>   type: ClusterIP
> {{- end -}}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-scheduler/servicemonitor.yaml packages/monitoring/charts/templates/exporters/kube-scheduler/servicemonitor.yaml
0a1,44
> {{- if .Values.kubeScheduler.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-scheduler
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-scheduler
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   jobLabel: jobLabel
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-kube-scheduler
>       release: {{ $.Release.Name | quote }}
>   namespaceSelector:
>     matchNames:
>       - "kube-system"
>   endpoints:
>   - port: http-metrics
>     {{- if .Values.kubeScheduler.serviceMonitor.interval }}
>     interval: {{ .Values.kubeScheduler.serviceMonitor.interval }}
>     {{- end }}
>     bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
>     {{- if .Values.kubeScheduler.serviceMonitor.https }}
>     scheme: https
>     tlsConfig:
>       caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
>       {{- if .Values.kubeScheduler.serviceMonitor.insecureSkipVerify }}
>       insecureSkipVerify: {{ .Values.kubeScheduler.serviceMonitor.insecureSkipVerify }}
>       {{- end}}
>       {{- if .Values.kubeScheduler.serviceMonitor.serverName }}
>       serverName: {{ .Values.kubeScheduler.serviceMonitor.serverName }}
>       {{- end}}
>     {{- end}}
> {{- if .Values.kubeScheduler.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubeScheduler.serviceMonitor.metricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubeScheduler.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.kubeScheduler.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kube-state-metrics/serviceMonitor.yaml packages/monitoring/charts/templates/exporters/kube-state-metrics/serviceMonitor.yaml
0a1,30
> {{- if .Values.kubeStateMetrics.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kube-state-metrics
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kube-state-metrics
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   jobLabel: app.kubernetes.io/name
>   endpoints:
>   - port: http
>     {{- if .Values.kubeStateMetrics.serviceMonitor.interval }}
>     interval: {{ .Values.kubeStateMetrics.serviceMonitor.interval }}
>     {{- end }}
>     honorLabels: true
> {{- if .Values.kubeStateMetrics.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubeStateMetrics.serviceMonitor.metricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubeStateMetrics.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.kubeStateMetrics.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
>   selector:
>     matchLabels:
>       app.kubernetes.io/name: kube-state-metrics
>       app.kubernetes.io/instance: "{{ $.Release.Name }}"
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/exporters/kubelet/servicemonitor.yaml packages/monitoring/charts/templates/exporters/kubelet/servicemonitor.yaml
0a1,86
> {{- if .Values.kubelet.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-kubelet
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-kubelet
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   endpoints:
>   {{- if .Values.kubelet.serviceMonitor.https }}
>   - port: https-metrics
>     scheme: https
>     {{- if .Values.kubelet.serviceMonitor.interval }}
>     interval: {{ .Values.kubelet.serviceMonitor.interval }}
>     {{- end }}
>     tlsConfig:
>       caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
>       insecureSkipVerify: true
>     bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
>     honorLabels: true
> {{- if .Values.kubelet.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubelet.serviceMonitor.metricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubelet.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.kubelet.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
>   - port: https-metrics
>     scheme: https
>     path: /metrics/cadvisor
>     {{- if .Values.kubelet.serviceMonitor.interval }}
>     interval: {{ .Values.kubelet.serviceMonitor.interval }}
>     {{- end }}
>     honorLabels: true
>     tlsConfig:
>       caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
>       insecureSkipVerify: true
>     bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
> {{- if .Values.kubelet.serviceMonitor.cAdvisorMetricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubelet.serviceMonitor.cAdvisorMetricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubelet.serviceMonitor.cAdvisorRelabelings }}
>     relabelings:
> {{ toYaml .Values.kubelet.serviceMonitor.cAdvisorRelabelings | indent 4 }}
> {{- end }}
>   {{- else }}
>   - port: http-metrics
>     {{- if .Values.kubelet.serviceMonitor.interval }}
>     interval: {{ .Values.kubelet.serviceMonitor.interval }}
>     {{- end }}
>     honorLabels: true
> {{- if .Values.kubelet.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubelet.serviceMonitor.metricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubelet.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.kubelet.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
>   - port: http-metrics
>     path: /metrics/cadvisor
>     {{- if .Values.kubelet.serviceMonitor.interval }}
>     interval: {{ .Values.kubelet.serviceMonitor.interval }}
>     {{- end }}
>     honorLabels: true
> {{- if .Values.kubelet.serviceMonitor.cAdvisorMetricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.kubelet.serviceMonitor.cAdvisorMetricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.kubelet.serviceMonitor.cAdvisorRelabelings }}
>     relabelings:
> {{ toYaml .Values.kubelet.serviceMonitor.cAdvisorRelabelings | indent 4 }}
> {{- end }}
>   {{- end }}
>   jobLabel: k8s-app
>   namespaceSelector:
>     matchNames:
>     - {{ .Values.kubelet.namespace }}
>   selector:
>     matchLabels:
>       k8s-app: kubelet
> {{- end}}
diff -Nr packages/monitoring/charts-original/templates/exporters/node-exporter/servicemonitor.yaml packages/monitoring/charts/templates/exporters/node-exporter/servicemonitor.yaml
0a1,32
> {{- if .Values.nodeExporter.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-node-exporter
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-node-exporter
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   jobLabel: {{ .Values.nodeExporter.jobLabel }}
>   selector:
>     matchLabels:
>       app: prometheus-node-exporter
>       release: {{ $.Release.Name }}
>   endpoints:
>   - port: metrics
>     {{- if .Values.nodeExporter.serviceMonitor.interval }}
>     interval: {{ .Values.nodeExporter.serviceMonitor.interval }}
>     {{- end }}
>     {{- if .Values.nodeExporter.serviceMonitor.scrapeTimeout }}
>     scrapeTimeout: {{ .Values.nodeExporter.serviceMonitor.scrapeTimeout }}
>     {{- end }}
> {{- if .Values.nodeExporter.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.nodeExporter.serviceMonitor.metricRelabelings | indent 4) . }}
> {{- end }}
> {{- if .Values.nodeExporter.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.nodeExporter.serviceMonitor.relabelings | indent 4 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/grafana/configmap-dashboards.yaml packages/monitoring/charts/templates/grafana/configmap-dashboards.yaml
0a1,24
> {{- if and .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> {{- $files := .Files.Glob "dashboards/*.json" }}
> {{- if $files }}
> apiVersion: v1
> kind: ConfigMapList
> items:
> {{- range $path, $fileContents := $files }}
> {{- $dashboardName := regexReplaceAll "(^.*/)(.*)\\.json$" $path "${2}" }}
> - apiVersion: v1
>   kind: ConfigMap
>   metadata:
>     name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) $dashboardName | trunc 63 | trimSuffix "-" }}
>     namespace: {{ $.Release.Namespace }}
>     labels:
>       {{- if $.Values.grafana.sidecar.dashboards.label }}
>       {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>       {{- end }}
>       app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 6 }}
>   data:
>     {{ $dashboardName }}.json: {{ $.Files.Get $path | toJson }}
> {{- end }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/grafana/configmaps-datasources.yaml packages/monitoring/charts/templates/grafana/configmaps-datasources.yaml
0a1,38
> {{- if and .Values.grafana.enabled .Values.grafana.sidecar.datasources.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-grafana-datasource
>   namespace: {{ $.Release.Namespace }}
> {{- if .Values.grafana.sidecar.datasources.annotations }}
>   annotations:
> {{ toYaml .Values.grafana.sidecar.datasources.annotations | indent 4 }}
> {{- end }}
>   labels:
>     {{ $.Values.grafana.sidecar.datasources.label }}: "1"
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   datasource.yaml: |-
>     apiVersion: 1
>     datasources:
> {{- if .Values.grafana.sidecar.datasources.defaultDatasourceEnabled }}
>     - name: Prometheus
>       type: prometheus
>       url: http://{{ template "prometheus-operator.fullname" . }}-prometheus:{{ .Values.prometheus.service.port }}/{{ trimPrefix "/" .Values.prometheus.prometheusSpec.routePrefix }}
>       access: proxy
>       isDefault: true
> {{- if .Values.grafana.sidecar.datasources.createPrometheusReplicasDatasources }}
> {{- range until (int .Values.prometheus.prometheusSpec.replicas) }}
>     - name: Prometheus-{{ . }}
>       type: prometheus
>       url: http://prometheus-{{ template "prometheus-operator.fullname" $ }}-prometheus-{{ . }}.prometheus-operated:9090/{{ trimPrefix "/" $.Values.prometheus.prometheusSpec.routePrefix }}
>       access: proxy
>       isDefault: false
> {{- end }}
> {{- end }}
> {{- end }}
> {{- if .Values.grafana.additionalDataSources }}
> {{ toYaml .Values.grafana.additionalDataSources | indent 4}}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/etcd.yaml packages/monitoring/charts/templates/grafana/dashboards/etcd.yaml
0a1,1114
> {{- /*
> Generated from 'etcd' from https://raw.githubusercontent.com/etcd-io/etcd/master/Documentation/op-guide/grafana.json
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.kubeEtcd.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "etcd" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   etcd.json: |-
>     {
>         "annotations": {
>             "list": []
>         },
>         "description": "etcd sample Grafana dashboard with Prometheus",
>         "editable": true,
>         "gnetId": null,
>         "hideControls": false,
>         "id": 6,
>         "links": [],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "editable": true,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(245, 54, 54, 0.9)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(50, 172, 45, 0.97)"
>                         ],
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "id": 28,
>                         "interval": null,
>                         "isNew": true,
>                         "links": [],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "targets": [
>                             {
>                                 "expr": "sum(etcd_server_has_leader{job=\"$cluster\"})",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "metric": "etcd_server_has_leader",
>                                 "refId": "A",
>                                 "step": 20
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Up",
>                         "type": "singlestat",
>                         "valueFontSize": "200%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "avg"
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 23,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 5,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(grpc_server_started_total{job=\"$cluster\",grpc_type=\"unary\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "RPC Rate",
>                                 "metric": "grpc_server_started_total",
>                                 "refId": "A",
>                                 "step": 2
>                             },
>                             {
>                                 "expr": "sum(rate(grpc_server_handled_total{job=\"$cluster\",grpc_type=\"unary\",grpc_code!=\"OK\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "RPC Failed Rate",
>                                 "metric": "grpc_server_handled_total",
>                                 "refId": "B",
>                                 "step": 2
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "RPC Rate",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 41,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 4,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(grpc_server_started_total{job=\"$cluster\",grpc_service=\"etcdserverpb.Watch\",grpc_type=\"bidi_stream\"}) - sum(grpc_server_handled_total{job=\"$cluster\",grpc_service=\"etcdserverpb.Watch\",grpc_type=\"bidi_stream\"})",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Watch Streams",
>                                 "metric": "grpc_server_handled_total",
>                                 "refId": "A",
>                                 "step": 4
>                             },
>                             {
>                                 "expr": "sum(grpc_server_started_total{job=\"$cluster\",grpc_service=\"etcdserverpb.Lease\",grpc_type=\"bidi_stream\"}) - sum(grpc_server_handled_total{job=\"$cluster\",grpc_service=\"etcdserverpb.Lease\",grpc_type=\"bidi_stream\"})",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Lease Streams",
>                                 "metric": "grpc_server_handled_total",
>                                 "refId": "B",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Active Streams",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": "",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "showTitle": false,
>                 "title": "Row"
>             },
>             {
>                 "collapse": false,
>                 "editable": true,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "decimals": null,
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "grid": {},
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "etcd_mvcc_db_total_size_in_bytes{job=\"$cluster\"}",
>                                 "hide": false,
>                                 "interval": "",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} DB Size",
>                                 "metric": "",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "DB Size",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "cumulative"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "grid": {},
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 1,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": true,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=\"$cluster\"}[5m])) by (instance, le))",
>                                 "hide": false,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} WAL fsync",
>                                 "metric": "etcd_disk_wal_fsync_duration_seconds_bucket",
>                                 "refId": "A",
>                                 "step": 4
>                             },
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(etcd_disk_backend_commit_duration_seconds_bucket{job=\"$cluster\"}[5m])) by (instance, le))",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} DB fsync",
>                                 "metric": "etcd_disk_backend_commit_duration_seconds_bucket",
>                                 "refId": "B",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk Sync Duration",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "cumulative"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 29,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "process_resident_memory_bytes{job=\"$cluster\"}",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Resident Memory",
>                                 "metric": "process_resident_memory_bytes",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "title": "New row"
>             },
>             {
>                 "collapse": false,
>                 "editable": true,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 5,
>                         "id": 22,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 3,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(etcd_network_client_grpc_received_bytes_total{job=\"$cluster\"}[5m])",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Client Traffic In",
>                                 "metric": "etcd_network_client_grpc_received_bytes_total",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Client Traffic In",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 5,
>                         "id": 21,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 3,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(etcd_network_client_grpc_sent_bytes_total{job=\"$cluster\"}[5m])",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Client Traffic Out",
>                                 "metric": "etcd_network_client_grpc_sent_bytes_total",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Client Traffic Out",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 20,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 3,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(etcd_network_peer_received_bytes_total{job=\"$cluster\"}[5m])) by (instance)",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Peer Traffic In",
>                                 "metric": "etcd_network_peer_received_bytes_total",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Peer Traffic In",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "decimals": null,
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "grid": {},
>                         "id": 16,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 3,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(etcd_network_peer_sent_bytes_total{job=\"$cluster\"}[5m])) by (instance)",
>                                 "hide": false,
>                                 "interval": "",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Peer Traffic Out",
>                                 "metric": "etcd_network_peer_sent_bytes_total",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Peer Traffic Out",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "cumulative"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "title": "New row"
>             },
>             {
>                 "collapse": false,
>                 "editable": true,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 40,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(etcd_server_proposals_failed_total{job=\"$cluster\"}[5m]))",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Proposal Failure Rate",
>                                 "metric": "etcd_server_proposals_failed_total",
>                                 "refId": "A",
>                                 "step": 2
>                             },
>                             {
>                                 "expr": "sum(etcd_server_proposals_pending{job=\"$cluster\"})",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Proposal Pending Total",
>                                 "metric": "etcd_server_proposals_pending",
>                                 "refId": "B",
>                                 "step": 2
>                             },
>                             {
>                                 "expr": "sum(rate(etcd_server_proposals_committed_total{job=\"$cluster\"}[5m]))",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Proposal Commit Rate",
>                                 "metric": "etcd_server_proposals_committed_total",
>                                 "refId": "C",
>                                 "step": 2
>                             },
>                             {
>                                 "expr": "sum(rate(etcd_server_proposals_applied_total{job=\"$cluster\"}[5m]))",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Proposal Apply Rate",
>                                 "refId": "D",
>                                 "step": 2
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Raft Proposals",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": "",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "decimals": 0,
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 19,
>                         "isNew": true,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "changes(etcd_server_leader_changes_seen_total{job=\"$cluster\"}[1d])",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Total Leader Elections Per Day",
>                                 "metric": "etcd_server_leader_changes_seen_total",
>                                 "refId": "A",
>                                 "step": 2
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Total Leader Elections Per Day",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "title": "New row"
>             }
>         ],
>         "schemaVersion": 13,
>         "sharedCrosshair": false,
>         "style": "dark",
>         "tags": [],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [],
>                     "query": "label_values(etcd_server_has_leader, job)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-15m",
>             "to": "now"
>         },
>         "timepicker": {
>             "now": true,
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "browser",
>         "title": "etcd",
>         "version": 215
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/k8s-cluster-rsrc-use.yaml packages/monitoring/charts/templates/grafana/dashboards/k8s-cluster-rsrc-use.yaml
0a1,957
> {{- /*
> Generated from 'k8s-cluster-rsrc-use' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-cluster-rsrc-use" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-cluster-rsrc-use.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:cluster_cpu_utilisation:ratio{cluster=\"$cluster\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{node}}`}}",
>                                 "legendLink": "./d/4ac4f123aae0ff6dbaf4f4f66120033b/k8s-node-rsrc-use",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_cpu_saturation_load1:{cluster=\"$cluster\"} / scalar(sum(min(kube_pod_info{cluster=\"$cluster\"}) by (node)))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{node}}`}}",
>                                 "legendLink": "./d/4ac4f123aae0ff6dbaf4f4f66120033b/k8s-node-rsrc-use",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Saturation (Load1)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:cluster_memory_utilisation:ratio{cluster=\"$cluster\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{node}}`}}",
>                                 "legendLink": "./d/4ac4f123aae0ff6dbaf4f4f66120033b/k8s-node-rsrc-use",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_memory_swap_io_bytes:sum_rate{cluster=\"$cluster\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{node}}`}}",
>                                 "legendLink": "./d/4ac4f123aae0ff6dbaf4f4f66120033b/k8s-node-rsrc-use",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Saturation (Swap I/O)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_disk_utilisation:avg_irate{cluster=\"$cluster\"} / scalar(:kube_pod_info_node_count:{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{node}}`}}",
>                                 "legendLink": "./d/4ac4f123aae0ff6dbaf4f4f66120033b/k8s-node-rsrc-use",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk IO Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_disk_saturation:avg_irate{cluster=\"$cluster\"} / scalar(:kube_pod_info_node_count:{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{node}}`}}",
>                                 "legendLink": "./d/4ac4f123aae0ff6dbaf4f4f66120033b/k8s-node-rsrc-use",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk IO Saturation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Disk",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_net_utilisation:sum_irate{cluster=\"$cluster\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{node}}`}}",
>                                 "legendLink": "./d/4ac4f123aae0ff6dbaf4f4f66120033b/k8s-node-rsrc-use",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Net Utilisation (Transmitted)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_net_saturation:sum_irate{cluster=\"$cluster\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{node}}`}}",
>                                 "legendLink": "./d/4ac4f123aae0ff6dbaf4f4f66120033b/k8s-node-rsrc-use",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Net Saturation (Dropped)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(max(node_filesystem_size_bytes{fstype=~\"ext[234]|btrfs|xfs|zfs\", cluster=\"$cluster\"} - node_filesystem_avail_bytes{fstype=~\"ext[234]|btrfs|xfs|zfs\", cluster=\"$cluster\"}) by (device,pod,namespace)) by (pod,namespace)\n/ scalar(sum(max(node_filesystem_size_bytes{fstype=~\"ext[234]|btrfs|xfs|zfs\", cluster=\"$cluster\"}) by (device,pod,namespace)))\n* on (namespace, pod) group_left (node) node_namespace_pod:kube_pod_info:{cluster=\"$cluster\"}\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{node}}`}}",
>                                 "legendLink": "./d/4ac4f123aae0ff6dbaf4f4f66120033b/k8s-node-rsrc-use",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk Capacity",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Storage",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(:kube_pod_info_node_count:, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / USE Method / Cluster",
>         "uid": "a6e7d1362e1ddbb79db21d5bb40d7137",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/k8s-node-rsrc-use.yaml packages/monitoring/charts/templates/grafana/dashboards/k8s-node-rsrc-use.yaml
0a1,984
> {{- /*
> Generated from 'k8s-node-rsrc-use' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-node-rsrc-use" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-node-rsrc-use.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_cpu_utilisation:avg1m{cluster=\"$cluster\", node=\"$node\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Utilisation",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_cpu_saturation_load1:{cluster=\"$cluster\", node=\"$node\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Saturation",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Saturation (Load1)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_memory_utilisation:{cluster=\"$cluster\", node=\"$node\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Memory",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_memory_swap_io_bytes:sum_rate{cluster=\"$cluster\", node=\"$node\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Swap IO",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Saturation (Swap I/O)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_disk_utilisation:avg_irate{cluster=\"$cluster\", node=\"$node\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Utilisation",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk IO Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_disk_saturation:avg_irate{cluster=\"$cluster\", node=\"$node\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Saturation",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk IO Saturation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Disk",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_net_utilisation:sum_irate{cluster=\"$cluster\", node=\"$node\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Utilisation",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Net Utilisation (Transmitted)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_net_saturation:sum_irate{cluster=\"$cluster\", node=\"$node\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Saturation",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Net Saturation (Dropped)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Net",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node:node_filesystem_usage:{cluster=\"$cluster\"}\n* on (namespace, pod) group_left (node) node_namespace_pod:kube_pod_info:{cluster=\"$cluster\", node=\"$node\"}\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Disk",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(:kube_pod_info_node_count:, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "node",
>                     "multi": false,
>                     "name": "node",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_node_info{cluster=\"$cluster\"}, node)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / USE Method / Node",
>         "uid": "4ac4f123aae0ff6dbaf4f4f66120033b",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/k8s-resources-cluster.yaml packages/monitoring/charts/templates/grafana/dashboards/k8s-resources-cluster.yaml
0a1,1477
> {{- /*
> Generated from ' 'k8s-resources-cluster' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-cluster" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-cluster.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "100px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "1 - avg(rate(node_cpu_seconds_total{mode=\"idle\", cluster=\"$cluster\"}[1m]))",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\"}) / sum(node:node_num_cpu:sum{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Requests Commitment",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\"}) / sum(node:node_num_cpu:sum{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Limits Commitment",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "1 - sum(:node_memory_MemFreeCachedBuffers_bytes:sum{cluster=\"$cluster\"}) / sum(:node_memory_MemTotal_bytes:sum{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\"}) / sum(:node_memory_MemTotal_bytes:sum{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Requests Commitment",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\"}) / sum(:node_memory_MemTotal_bytes:sum{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Limits Commitment",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Headlines",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Pods",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Workloads",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to workloads",
>                                 "linkUrl": "./d/a87fb0d919ec0ea5f6543124e16c42a5/k8s-resources-workloads-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #G",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Namespace",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell",
>                                 "pattern": "namespace",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "count(mixin_pod_workload{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "count(avg(mixin_pod_workload{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "G",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", container_name!=\"\"}) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage (w/o cache)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 10,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Pods",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Workloads",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to workloads",
>                                 "linkUrl": "./d/a87fb0d919ec0ea5f6543124e16c42a5/k8s-resources-workloads-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #G",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Namespace",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell",
>                                 "pattern": "namespace",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "count(mixin_pod_workload{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "count(avg(mixin_pod_workload{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", container_name!=\"\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", container_name!=\"\"}) by (namespace) / sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", container_name!=\"\"}) by (namespace) / sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "G",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Requests by Namespace",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Requests",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(:kube_pod_info_node_count:, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Cluster",
>         "uid": "efa86fd1d0c121a26444b636a3f509a8",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/k8s-resources-namespace.yaml packages/monitoring/charts/templates/grafana/dashboards/k8s-resources-namespace.yaml
0a1,961
> {{- /*
> Generated from 'k8s-resources-namespace' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-namespace" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-namespace.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod_name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod_name}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(label_replace(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container_name!=\"\"}) by (pod_name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod_name}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage (w/o cache)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Usage (RSS)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Cache)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #G",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Swap",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #H",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(label_replace(container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container_name!=\"\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container_name!=\"\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod) / sum(kube_pod_container_resource_requests_memory_bytes{namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container_name!=\"\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod) / sum(kube_pod_container_resource_limits_memory_bytes{namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_rss{cluster=\"$cluster\", namespace=\"$namespace\",container_name!=\"\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_cache{cluster=\"$cluster\", namespace=\"$namespace\",container_name!=\"\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "G",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_swap{cluster=\"$cluster\", namespace=\"$namespace\",container_name!=\"\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "H",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Quota",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(:kube_pod_info_node_count:, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Namespace (Pods)",
>         "uid": "85a562078cdf77779eaa1add43ccec1e",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/k8s-resources-pod.yaml packages/monitoring/charts/templates/grafana/dashboards/k8s-resources-pod.yaml
0a1,1004
> {{- /*
> Generated from 'k8s-resources-pod' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-pod" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-pod.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace=\"$namespace\", pod_name=\"$pod\", container_name!=\"POD\", cluster=\"$cluster\"}) by (container_name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{container_name}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Container",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "container",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(label_replace(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name!=\"POD\"}, \"container\", \"$1\", \"container_name\", \"(.*)\")) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\"}, \"container\", \"$1\", \"container_name\", \"(.*)\")) by (container) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\"}, \"container\", \"$1\", \"container_name\", \"(.*)\")) by (container) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name!=\"POD\", container_name!=\"\"}) by (container_name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{container_name}}`}} (RSS)",
>                                 "legendLink": null,
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_cache{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name!=\"POD\", container_name!=\"\"}) by (container_name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{container_name}}`}} (Cache)",
>                                 "legendLink": null,
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_swap{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name!=\"POD\", container_name!=\"\"}) by (container_name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{container_name}}`}} (Swap)",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Usage (RSS)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Cache)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #G",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Swap",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #H",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Container",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "container",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(label_replace(container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name!=\"POD\", container_name!=\"\"}, \"container\", \"$1\", \"container_name\", \"(.*)\")) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\"}, \"container\", \"$1\", \"container_name\", \"(.*)\")) by (container) / sum(kube_pod_container_resource_requests_memory_bytes{namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name!=\"\"}, \"container\", \"$1\", \"container_name\", \"(.*)\")) by (container) / sum(kube_pod_container_resource_limits_memory_bytes{namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_rss{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name != \"\", container_name != \"POD\"}, \"container\", \"$1\", \"container_name\", \"(.*)\")) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_cache{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name != \"\", container_name != \"POD\"}, \"container\", \"$1\", \"container_name\", \"(.*)\")) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "G",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(label_replace(container_memory_swap{cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name != \"\", container_name != \"POD\"}, \"container\", \"$1\", \"container_name\", \"(.*)\")) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "H",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Quota",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(:kube_pod_info_node_count:, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "pod",
>                     "multi": false,
>                     "name": "pod",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\", namespace=\"$namespace\"}, pod)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Pod",
>         "uid": "6581e46e4e5c7ba40a07646395ef7b23",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/k8s-resources-workload.yaml packages/monitoring/charts/templates/grafana/dashboards/k8s-resources-workload.yaml
0a1,934
> {{- /*
> Generated from 'k8s-resources-workload' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-workload" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-workload.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(\n  label_replace(\n    namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(\n  label_replace(\n    namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n  kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n  kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(\n  label_replace(\n    container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container_name!=\"\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n  ) by (pod)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(\n  label_replace(\n    container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container_name!=\"\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n  ) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container_name!=\"\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n  ) by (pod)\n/sum(\n  kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container_name!=\"\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n  ) by (pod)\n/sum(\n  kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Quota",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(:kube_pod_info_node_count:, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "workload",
>                     "multi": false,
>                     "name": "workload",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}, workload)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "type",
>                     "multi": false,
>                     "name": "type",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\"}, workload_type)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Workload",
>         "uid": "a164a7f0339f99e89cea5cb47e9be617",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/k8s-resources-workloads-namespace.yaml packages/monitoring/charts/templates/grafana/dashboards/k8s-resources-workloads-namespace.yaml
0a1,970
> {{- /*
> Generated from 'k8s-resources-workloads-namespace' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-workloads-namespace" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-workloads-namespace.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(\n  label_replace(\n    namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}} - {{`{{workload_type}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Running Pods",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Workload",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2",
>                                 "pattern": "workload",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Workload Type",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "workload_type",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "count(mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}) by (workload, workload_type)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(\n  label_replace(\n    container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container_name!=\"\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n  ) by (workload, workload_type)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}} - {{`{{workload_type}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Running Pods",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Workload",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2",
>                                 "pattern": "workload",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Workload Type",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "workload_type",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "count(mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}) by (workload, workload_type)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container_name!=\"\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n  ) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container_name!=\"\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n  ) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  label_replace(\n    container_memory_usage_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container_name!=\"\"},\n    \"pod\", \"$1\", \"pod_name\", \"(.*)\"\n  ) * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n  ) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Quota",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(:kube_pod_info_node_count:, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Namespace (Workloads)",
>         "uid": "a87fb0d919ec0ea5f6543124e16c42a5",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/nodes.yaml packages/monitoring/charts/templates/grafana/dashboards/nodes.yaml
0a1,1381
> {{- /*
> Generated from 'nodes' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "nodes" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   nodes.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max(node_load1{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "load 1m",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "max(node_load5{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "load 5m",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "max(node_load15{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "load 15m",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "count(node_cpu_seconds_total{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\", mode=\"user\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "logical cores",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "System load",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum by (cpu) (irate(node_cpu_seconds_total{cluster=\"$cluster\", job=\"node-exporter\", mode!=\"idle\", instance=\"$instance\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cpu}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Usage Per Core",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": "true",
>                             "current": "true",
>                             "max": "false",
>                             "min": "false",
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": "false",
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 9,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max (sum by (cpu) (irate(node_cpu_seconds_total{cluster=\"$cluster\", job=\"node-exporter\", mode!=\"idle\", instance=\"$instance\"}[2m])) ) * 100\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 10,
>                                 "legendFormat": "{{`{{ cpu }}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Utilization",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percent",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 100,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "percent",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 100,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(50, 172, 45, 0.97)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(245, 54, 54, 0.9)"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "percent",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": true,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "avg(sum by (cpu) (irate(node_cpu_seconds_total{cluster=\"$cluster\", job=\"node-exporter\", mode!=\"idle\", instance=\"$instance\"}[2m]))) * 100\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "80, 90",
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 9,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max(\n  node_memory_MemTotal_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n  - node_memory_MemFree_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n  - node_memory_Buffers_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n  - node_memory_Cached_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "memory used",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "max(node_memory_Buffers_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "memory buffers",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "max(node_memory_Cached_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "memory cached",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "max(node_memory_MemFree_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "memory free",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(50, 172, 45, 0.97)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(245, 54, 54, 0.9)"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "percent",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": true,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "max(\n  (\n    (\n      node_memory_MemTotal_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n    - node_memory_MemFree_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n    - node_memory_Buffers_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n    - node_memory_Cached_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n    )\n    / node_memory_MemTotal_bytes{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n  ) * 100)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "80, 90",
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
>                             {
>                                 "alias": "read",
>                                 "yaxis": 1
>                             },
>                             {
>                                 "alias": "io time",
>                                 "yaxis": 2
>                             }
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max(rate(node_disk_read_bytes_total{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}[2m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "read",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "max(rate(node_disk_written_bytes_total{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}[2m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "written",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "max(rate(node_disk_io_time_seconds_total{cluster=\"$cluster\", job=\"node-exporter\",  instance=\"$instance\"}[2m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "io time",
>                                 "refId": "C"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk I/O",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ms",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max by (namespace, pod, device) ((node_filesystem_size_bytes{cluster=\"$cluster\", fstype=~\"ext[234]|btrfs|xfs|zfs\", instance=\"$instance\", job=\"node-exporter\"} - node_filesystem_avail_bytes{cluster=\"$cluster\", fstype=~\"ext[234]|btrfs|xfs|zfs\", instance=\"$instance\", job=\"node-exporter\"}) / node_filesystem_size_bytes{cluster=\"$cluster\", fstype=~\"ext[234]|btrfs|xfs|zfs\", instance=\"$instance\", job=\"node-exporter\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "disk used",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "max by (namespace, pod, device) (node_filesystem_avail_bytes{cluster=\"$cluster\", fstype=~\"ext[234]|btrfs|xfs|zfs\", instance=\"$instance\", job=\"node-exporter\"} / node_filesystem_size_bytes{cluster=\"$cluster\", fstype=~\"ext[234]|btrfs|xfs|zfs\", instance=\"$instance\", job=\"node-exporter\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "disk free",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk Space Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 10,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max(rate(node_network_receive_bytes_total{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\", device!~\"lo\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Network Received",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 11,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max(rate(node_network_transmit_bytes_total{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\", device!~\"lo\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Network Transmitted",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 12,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 9,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max(\n  node_filesystem_files{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n  - node_filesystem_files_free{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "inodes used",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "max(node_filesystem_files_free{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "inodes free",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Inodes Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(50, 172, 45, 0.97)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(245, 54, 54, 0.9)"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "percent",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": true,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 13,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "max(\n  (\n    (\n      node_filesystem_files{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n    - node_filesystem_files_free{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n    )\n    / node_filesystem_files{cluster=\"$cluster\", job=\"node-exporter\", instance=\"$instance\"}\n  ) * 100)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "80, 90",
>                         "title": "Inodes Usage",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info, cluster)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(node_boot_time_seconds{cluster=\"$cluster\", job=\"node-exporter\"}, instance)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Nodes",
>         "uid": "fa49a4706d07a042595b664c87fb33ea",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/persistentvolumesusage.yaml packages/monitoring/charts/templates/grafana/dashboards/persistentvolumesusage.yaml
0a1,571
> {{- /*
> Generated from 'persistentvolumesusage' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "persistentvolumesusage" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   persistentvolumesusage.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": true,
>                             "min": true,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": true
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 9,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  sum without(instance, node) (kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  sum without(instance, node) (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "Used Space",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum without(instance, node) (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "Free Space",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Volume Space Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(50, 172, 45, 0.97)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(245, 54, 54, 0.9)"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "percent",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": true,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "(\n  kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n  -\n  kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n)\n/\nkubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n* 100\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "80, 90",
>                         "title": "Volume Space Usage",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": true,
>                             "min": true,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": true
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 9,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum without(instance, node) (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "Used inodes",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "(\n  sum without(instance, node) (kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  sum without(instance, node) (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": " Free inodes",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Volume inodes Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "none",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "none",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(50, 172, 45, 0.97)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(245, 54, 54, 0.9)"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "percent",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": true,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n/\nkubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n* 100\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "80, 90",
>                         "title": "Volume inodes Usage",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kubelet_volume_stats_capacity_bytes, cluster)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\"}, namespace)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "PersistentVolumeClaim",
>                     "multi": false,
>                     "name": "volume",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\"}, persistentvolumeclaim)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-7d",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Persistent Volumes",
>         "uid": "919b92a8e8041bd567af9edab12c840c",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/pods.yaml packages/monitoring/charts/templates/grafana/dashboards/pods.yaml
0a1,678
> {{- /*
> Generated from 'pods' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "pods" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   pods.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
>                 {
>                     "builtIn": 1,
>                     "datasource": "$datasource",
>                     "enable": true,
>                     "expr": "time() == BOOL timestamp(rate(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[2m]) > 0)",
>                     "hide": false,
>                     "iconColor": "rgba(215, 44, 44, 1)",
>                     "name": "Restarts",
>                     "showIn": 0,
>                     "tags": [
>                         "restart"
>                     ],
>                     "type": "rows"
>                 }
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum by(container_name) (container_memory_usage_bytes{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\", container_name=~\"$container\", container_name!=\"POD\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Current: {{`{{ container_name }}`}}",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum by(container) (kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Requested: {{`{{ container }}`}}",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum by(container) (kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Limit: {{`{{ container }}`}}",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "sum by(container_name) (container_memory_cache{job=\"kubelet\", namespace=\"$namespace\", pod_name=~\"$pod\", container_name=~\"$container\", container_name!=\"POD\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Cache: {{`{{ container_name }}`}}",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum by (container_name) (rate(container_cpu_usage_seconds_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", image!=\"\", pod_name=\"$pod\", container_name=~\"$container\", container_name!=\"POD\"}[1m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Current: {{`{{ container_name }}`}}",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum by(container) (kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Requested: {{`{{ container }}`}}",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum by(container) (kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Limit: {{`{{ container }}`}}",
>                                 "refId": "C"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum by (pod_name) (rate(container_network_receive_bytes_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\"}[1m])))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "RX: {{`{{ pod_name }}`}}",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sort_desc(sum by (pod_name) (rate(container_network_transmit_bytes_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod_name=\"$pod\"}[1m])))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "TX: {{`{{ pod_name }}`}}",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Network I/O",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max by (container) (kube_pod_container_status_restarts_total{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Restarts: {{`{{ container }}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Total Restarts Per Container",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info, cluster)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Pod",
>                     "multi": false,
>                     "name": "pod",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\", namespace=~\"$namespace\"}, pod)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": "Container",
>                     "multi": false,
>                     "name": "container",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_container_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}, container)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Pods",
>         "uid": "ab4f13a9892a76a4d21ce8c2445bf4ea",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards/statefulset.yaml packages/monitoring/charts/templates/grafana/dashboards/statefulset.yaml
0a1,924
> {{- /*
> Generated from 'statefulset' from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "statefulset" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   statefulset.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "cores",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 4,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": true
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod_name=~\"$statefulset.*\"}[3m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "CPU",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "GB",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 4,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": true
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_usage_bytes{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod_name=~\"$statefulset.*\"}) / 1024^3",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Memory",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "Bps",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 4,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": true
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod_name=~\"$statefulset.*\"}[3m])) + sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\",pod_name=~\"$statefulset.*\"}[3m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Network",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "height": "100px",
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "max(kube_statefulset_replicas{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", statefulset=\"$statefulset\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Desired Replicas",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "min(kube_statefulset_status_replicas_current{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", statefulset=\"$statefulset\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Replicas of current version",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "max(kube_statefulset_status_observed_generation{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", statefulset=\"$statefulset\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Observed Generation",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "max(kube_statefulset_metadata_generation{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Metadata Generation",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max(kube_statefulset_replicas{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "replicas specified",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "max(kube_statefulset_status_replicas{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "replicas created",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "min(kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "ready",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "min(kube_statefulset_status_replicas_current{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "replicas of current version",
>                                 "refId": "D"
>                             },
>                             {
>                                 "expr": "min(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "updated",
>                                 "refId": "E"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Replicas",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_statefulset_metadata_generation, cluster)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_statefulset_metadata_generation{job=\"kube-state-metrics\"}, namespace)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Name",
>                     "multi": false,
>                     "name": "statefulset",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_statefulset_metadata_generation{job=\"kube-state-metrics\", namespace=\"$namespace\"}, statefulset)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / StatefulSets",
>         "uid": "a31c1f46e6f727cb37c0d731a7245005",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/apiserver.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/apiserver.yaml
0a1,1301
> {{- /*
> Generated from 'apiserver' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.kubeApiServer.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "apiserver" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   apiserver.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(up{job=\"apiserver\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Up",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 5,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(apiserver_request_total{job=\"apiserver\", instance=~\"$instance\",code=~\"2..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "2xx",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum(rate(apiserver_request_total{job=\"apiserver\", instance=~\"$instance\",code=~\"3..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "3xx",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum(rate(apiserver_request_total{job=\"apiserver\", instance=~\"$instance\",code=~\"4..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "4xx",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "sum(rate(apiserver_request_total{job=\"apiserver\", instance=~\"$instance\",code=~\"5..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "5xx",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "RPC Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 5,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\", instance=~\"$instance\"}[5m])) by (verb, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{verb}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Request duration 99th quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(workqueue_adds_total{job=\"apiserver\", instance=~\"$instance\"}[5m])) by (instance, name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{name}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Work Queue Add Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(workqueue_depth{job=\"apiserver\", instance=~\"$instance\"}[5m])) by (instance, name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{name}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Work Queue Depth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\"apiserver\", instance=~\"$instance\"}[5m])) by (instance, name, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{name}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Work Queue Latency",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "etcd_helper_cache_entry_total{job=\"apiserver\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "ETCD Cache Entry Total",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(etcd_helper_cache_hit_total{job=\"apiserver\",instance=~\"$instance\"}[5m])) by (intance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} hit",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum(rate(etcd_helper_cache_miss_total{job=\"apiserver\",instance=~\"$instance\"}[5m])) by (instance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} miss",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "ETCD Cache Hit/Miss Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 10,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99,sum(rate(etcd_request_cache_get_duration_seconds_bucket{job=\"apiserver\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} get",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "histogram_quantile(0.99,sum(rate(etcd_request_cache_add_duration_seconds_bucket{job=\"apiserver\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} miss",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "ETCD Cache Duration 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 11,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "process_resident_memory_bytes{job=\"apiserver\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 12,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(process_cpu_seconds_total{job=\"apiserver\",instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 13,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "go_goroutines{job=\"apiserver\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Goroutines",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(apiserver_request_total{job=\"apiserver\"}, instance)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / API server",
>         "uid": "09ec8aa1e996d6ffcd6817bbaff4db1b",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/cluster-total.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/cluster-total.yaml
0a1,1394
> {{- /*
> Generated from 'cluster-total' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "cluster-total" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   cluster-total.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
>                 {
>                     "builtIn": 1,
>                     "datasource": "-- Grafana --",
>                     "enable": true,
>                     "hide": true,
>                     "iconColor": "rgba(0, 211, 255, 1)",
>                     "name": "Annotations & Alerts",
>                     "type": "dashboard"
>                 }
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "panels": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 0
>                 },
>                 "id": 2,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Current Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "breakpoint": "50%",
>                 "cacheTimeout": null,
>                 "combine": {
>                     "label": "Others",
>                     "threshold": 0
>                 },
>                 "datasource": "$datasource",
>                 "fontSize": "80%",
>                 "format": "Bps",
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 0,
>                     "y": 1
>                 },
>                 "id": 3,
>                 "interval": null,
>                 "legend": {
>                     "percentage": true,
>                     "percentageDecimals": null,
>                     "show": true,
>                     "values": true
>                 },
>                 "legendType": "Right side",
>                 "maxDataPoints": 3,
>                 "nullPointMode": "connected",
>                 "pieType": "donut",
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{namespace}}`}}",
>                         "refId": "A"
>                     }
>                 ],
>                 "title": "Current Rate of Bytes Received",
>                 "type": "grafana-piechart-panel",
>                 "valueName": "current"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "breakpoint": "50%",
>                 "cacheTimeout": null,
>                 "combine": {
>                     "label": "Others",
>                     "threshold": 0
>                 },
>                 "datasource": "$datasource",
>                 "fontSize": "80%",
>                 "format": "Bps",
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 12,
>                     "y": 1
>                 },
>                 "id": 4,
>                 "interval": null,
>                 "legend": {
>                     "percentage": true,
>                     "percentageDecimals": null,
>                     "show": true,
>                     "values": true
>                 },
>                 "legendType": "Right side",
>                 "maxDataPoints": 3,
>                 "nullPointMode": "connected",
>                 "pieType": "donut",
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{namespace}}`}}",
>                         "refId": "A"
>                     }
>                 ],
>                 "title": "Current Rate of Bytes Transmitted",
>                 "type": "grafana-piechart-panel",
>                 "valueName": "current"
>             },
>             {
>                 "columns": [
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     }
>                 ],
>                 "datasource": "$datasource",
>                 "fill": 1,
>                 "fontSize": "90%",
>                 "gridPos": {
>                     "h": 9,
>                     "w": 24,
>                     "x": 0,
>                     "y": 10
>                 },
>                 "id": 5,
>                 "lines": true,
>                 "linewidth": 1,
>                 "minSpan": 24,
>                 "nullPointMode": "null as zero",
>                 "renderer": "flot",
>                 "scroll": true,
>                 "showHeader": true,
>                 "sort": {
>                     "col": 0,
>                     "desc": false
>                 },
>                 "spaceLength": 10,
>                 "span": 24,
>                 "styles": [
>                     {
>                         "alias": "Time",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Time",
>                         "thresholds": [
> 
>                         ],
>                         "type": "hidden",
>                         "unit": "short"
>                     },
>                     {
>                         "alias": "Current Bandwidth Received",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #A",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Current Bandwidth Transmitted",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #B",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Average Bandwidth Received",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #C",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Average Bandwidth Transmitted",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #D",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Rate of Received Packets",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #E",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Rate of Transmitted Packets",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #F",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Rate of Received Packets Dropped",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #G",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Rate of Transmitted Packets Dropped",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #H",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Namespace",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": true,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "d/8b7a8b326d7a6f1f04244066368c67af/kubernetes-networking-namespace-pods?orgId=1&refresh=30s&var-namespace=$__cell",
>                         "pattern": "namespace",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "short"
>                     }
>                 ],
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "A",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "B",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "C",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "D",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_packets_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "E",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "F",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "G",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "H",
>                         "step": 10
>                     }
>                 ],
>                 "title": "Current Status",
>                 "transform": "table",
>                 "type": "table"
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 10
>                 },
>                 "id": 6,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "breakpoint": "50%",
>                         "cacheTimeout": null,
>                         "combine": {
>                             "label": "Others",
>                             "threshold": 0
>                         },
>                         "datasource": "$datasource",
>                         "fontSize": "80%",
>                         "format": "Bps",
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 0,
>                             "y": 11
>                         },
>                         "id": 7,
>                         "interval": null,
>                         "legend": {
>                             "percentage": true,
>                             "percentageDecimals": null,
>                             "show": true,
>                             "values": true
>                         },
>                         "legendType": "Right side",
>                         "maxDataPoints": 3,
>                         "nullPointMode": "connected",
>                         "pieType": "donut",
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                                 "format": "time_series",
>                                 "instant": null,
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "title": "Average Rate of Bytes Received",
>                         "type": "grafana-piechart-panel",
>                         "valueName": "current"
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "breakpoint": "50%",
>                         "cacheTimeout": null,
>                         "combine": {
>                             "label": "Others",
>                             "threshold": 0
>                         },
>                         "datasource": "$datasource",
>                         "fontSize": "80%",
>                         "format": "Bps",
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 12,
>                             "y": 11
>                         },
>                         "id": 8,
>                         "interval": null,
>                         "legend": {
>                             "percentage": true,
>                             "percentageDecimals": null,
>                             "show": true,
>                             "values": true
>                         },
>                         "legendType": "Right side",
>                         "maxDataPoints": 3,
>                         "nullPointMode": "connected",
>                         "pieType": "donut",
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                                 "format": "time_series",
>                                 "instant": null,
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "title": "Average Rate of Bytes Transmitted",
>                         "type": "grafana-piechart-panel",
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Average Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 11
>                 },
>                 "id": 9,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Bandwidth History",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 24,
>                     "x": 0,
>                     "y": 12
>                 },
>                 "id": 10,
>                 "legend": {
>                     "alignAsTable": true,
>                     "avg": true,
>                     "current": true,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": true,
>                     "min": true,
>                     "rightSide": true,
>                     "show": true,
>                     "total": false,
>                     "values": true
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 24,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 24,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{namespace}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Receive Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 24,
>                     "x": 0,
>                     "y": 21
>                 },
>                 "id": 11,
>                 "legend": {
>                     "alignAsTable": true,
>                     "avg": true,
>                     "current": true,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": true,
>                     "min": true,
>                     "rightSide": true,
>                     "show": true,
>                     "total": false,
>                     "values": true
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 24,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 24,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{namespace}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Transmit Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 30
>                 },
>                 "id": 12,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 24,
>                             "x": 0,
>                             "y": 31
>                         },
>                         "id": 13,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": true,
>                             "min": true,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": true
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 24,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 24,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_receive_packets_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 24,
>                             "x": 0,
>                             "y": 40
>                         },
>                         "id": 14,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": true,
>                             "min": true,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": true
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 24,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 24,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Packets",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 31
>                 },
>                 "id": 15,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 24,
>                             "x": 0,
>                             "y": 50
>                         },
>                         "id": 16,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": true,
>                             "min": true,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": true
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 24,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 24,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 24,
>                             "x": 0,
>                             "y": 59
>                         },
>                         "id": 17,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": true,
>                             "min": true,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": true
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 24,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 24,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{namespace=~\".+\"}[$interval:$resolution])) by (namespace))",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Errors",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "refresh": "30s",
>         "rows": [
> 
>         ],
>         "schemaVersion": 18,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "resolution",
>                     "options": [
>                         {
>                             "selected": false,
>                             "text": "30s",
>                             "value": "30s"
>                         },
>                         {
>                             "selected": true,
>                             "text": "5m",
>                             "value": "5m"
>                         },
>                         {
>                             "selected": false,
>                             "text": "1h",
>                             "value": "1h"
>                         }
>                     ],
>                     "query": "30s,5m,1h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Networking / Cluster",
>         "uid": "ff635a025bcfea7bc3dd4f508990a3e9",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/controller-manager.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/controller-manager.yaml
0a1,1131
> {{- /*
> Generated from 'controller-manager' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.kubeControllerManager.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "controller-manager" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   controller-manager.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(up{job=\"kube-controller-manager\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Up",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 10,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(workqueue_adds_total{job=\"kube-controller-manager\", instance=~\"$instance\"}[5m])) by (instance, name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{name}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Work Queue Add Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(workqueue_depth{job=\"kube-controller-manager\", instance=~\"$instance\"}[5m])) by (instance, name)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{name}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Work Queue Depth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\"kube-controller-manager\", instance=~\"$instance\"}[5m])) by (instance, name, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{name}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Work Queue Latency",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"2..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "2xx",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"3..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "3xx",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"4..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "4xx",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"5..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "5xx",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Kube API Request Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 8,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_latency_seconds_bucket{job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"POST\"}[5m])) by (verb, url, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{verb}}`}} {{`{{url}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Post Request Latency 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_latency_seconds_bucket{job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"GET\"}[5m])) by (verb, url, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{verb}}`}} {{`{{url}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Get Request Latency 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "process_resident_memory_bytes{job=\"kube-controller-manager\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 10,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(process_cpu_seconds_total{job=\"kube-controller-manager\",instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 11,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "go_goroutines{job=\"kube-controller-manager\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Goroutines",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(process_cpu_seconds_total{job=\"kube-controller-manager\"}, instance)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Controller Manager",
>         "uid": "72e0e05bef5099e5f049b05fdc429ed4",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/etcd.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/etcd.yaml
0a1,1114
> {{- /*
> Generated from 'etcd' from https://raw.githubusercontent.com/etcd-io/etcd/master/Documentation/op-guide/grafana.json
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.kubeEtcd.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "etcd" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   etcd.json: |-
>     {
>         "annotations": {
>             "list": []
>         },
>         "description": "etcd sample Grafana dashboard with Prometheus",
>         "editable": true,
>         "gnetId": null,
>         "hideControls": false,
>         "id": 6,
>         "links": [],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "editable": true,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(245, 54, 54, 0.9)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(50, 172, 45, 0.97)"
>                         ],
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "id": 28,
>                         "interval": null,
>                         "isNew": true,
>                         "links": [],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "targets": [
>                             {
>                                 "expr": "sum(etcd_server_has_leader{job=\"$cluster\"})",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "metric": "etcd_server_has_leader",
>                                 "refId": "A",
>                                 "step": 20
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Up",
>                         "type": "singlestat",
>                         "valueFontSize": "200%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "avg"
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 23,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 5,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(grpc_server_started_total{job=\"$cluster\",grpc_type=\"unary\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "RPC Rate",
>                                 "metric": "grpc_server_started_total",
>                                 "refId": "A",
>                                 "step": 2
>                             },
>                             {
>                                 "expr": "sum(rate(grpc_server_handled_total{job=\"$cluster\",grpc_type=\"unary\",grpc_code!=\"OK\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "RPC Failed Rate",
>                                 "metric": "grpc_server_handled_total",
>                                 "refId": "B",
>                                 "step": 2
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "RPC Rate",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 41,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 4,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(grpc_server_started_total{job=\"$cluster\",grpc_service=\"etcdserverpb.Watch\",grpc_type=\"bidi_stream\"}) - sum(grpc_server_handled_total{job=\"$cluster\",grpc_service=\"etcdserverpb.Watch\",grpc_type=\"bidi_stream\"})",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Watch Streams",
>                                 "metric": "grpc_server_handled_total",
>                                 "refId": "A",
>                                 "step": 4
>                             },
>                             {
>                                 "expr": "sum(grpc_server_started_total{job=\"$cluster\",grpc_service=\"etcdserverpb.Lease\",grpc_type=\"bidi_stream\"}) - sum(grpc_server_handled_total{job=\"$cluster\",grpc_service=\"etcdserverpb.Lease\",grpc_type=\"bidi_stream\"})",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Lease Streams",
>                                 "metric": "grpc_server_handled_total",
>                                 "refId": "B",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Active Streams",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": "",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "showTitle": false,
>                 "title": "Row"
>             },
>             {
>                 "collapse": false,
>                 "editable": true,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "decimals": null,
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "grid": {},
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "etcd_mvcc_db_total_size_in_bytes{job=\"$cluster\"}",
>                                 "hide": false,
>                                 "interval": "",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} DB Size",
>                                 "metric": "",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "DB Size",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "cumulative"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "grid": {},
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 1,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": true,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=\"$cluster\"}[5m])) by (instance, le))",
>                                 "hide": false,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} WAL fsync",
>                                 "metric": "etcd_disk_wal_fsync_duration_seconds_bucket",
>                                 "refId": "A",
>                                 "step": 4
>                             },
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(etcd_disk_backend_commit_duration_seconds_bucket{job=\"$cluster\"}[5m])) by (instance, le))",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} DB fsync",
>                                 "metric": "etcd_disk_backend_commit_duration_seconds_bucket",
>                                 "refId": "B",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk Sync Duration",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "cumulative"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 29,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "process_resident_memory_bytes{job=\"$cluster\"}",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Resident Memory",
>                                 "metric": "process_resident_memory_bytes",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "title": "New row"
>             },
>             {
>                 "collapse": false,
>                 "editable": true,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 5,
>                         "id": 22,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 3,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(etcd_network_client_grpc_received_bytes_total{job=\"$cluster\"}[5m])",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Client Traffic In",
>                                 "metric": "etcd_network_client_grpc_received_bytes_total",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Client Traffic In",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 5,
>                         "id": 21,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 3,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(etcd_network_client_grpc_sent_bytes_total{job=\"$cluster\"}[5m])",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Client Traffic Out",
>                                 "metric": "etcd_network_client_grpc_sent_bytes_total",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Client Traffic Out",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 20,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 3,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(etcd_network_peer_received_bytes_total{job=\"$cluster\"}[5m])) by (instance)",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Peer Traffic In",
>                                 "metric": "etcd_network_peer_received_bytes_total",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Peer Traffic In",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "decimals": null,
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "grid": {},
>                         "id": 16,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 3,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(etcd_network_peer_sent_bytes_total{job=\"$cluster\"}[5m])) by (instance)",
>                                 "hide": false,
>                                 "interval": "",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Peer Traffic Out",
>                                 "metric": "etcd_network_peer_sent_bytes_total",
>                                 "refId": "A",
>                                 "step": 4
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Peer Traffic Out",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "cumulative"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "title": "New row"
>             },
>             {
>                 "collapse": false,
>                 "editable": true,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 40,
>                         "isNew": true,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(etcd_server_proposals_failed_total{job=\"$cluster\"}[5m]))",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Proposal Failure Rate",
>                                 "metric": "etcd_server_proposals_failed_total",
>                                 "refId": "A",
>                                 "step": 2
>                             },
>                             {
>                                 "expr": "sum(etcd_server_proposals_pending{job=\"$cluster\"})",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Proposal Pending Total",
>                                 "metric": "etcd_server_proposals_pending",
>                                 "refId": "B",
>                                 "step": 2
>                             },
>                             {
>                                 "expr": "sum(rate(etcd_server_proposals_committed_total{job=\"$cluster\"}[5m]))",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Proposal Commit Rate",
>                                 "metric": "etcd_server_proposals_committed_total",
>                                 "refId": "C",
>                                 "step": 2
>                             },
>                             {
>                                 "expr": "sum(rate(etcd_server_proposals_applied_total{job=\"$cluster\"}[5m]))",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Proposal Apply Rate",
>                                 "refId": "D",
>                                 "step": 2
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Raft Proposals",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": "",
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {},
>                         "bars": false,
>                         "datasource": "$datasource",
>                         "decimals": 0,
>                         "editable": true,
>                         "error": false,
>                         "fill": 0,
>                         "id": 19,
>                         "isNew": true,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [],
>                         "nullPointMode": "connected",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [],
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "changes(etcd_server_leader_changes_seen_total{job=\"$cluster\"}[1d])",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Total Leader Elections Per Day",
>                                 "metric": "etcd_server_leader_changes_seen_total",
>                                 "refId": "A",
>                                 "step": 2
>                             }
>                         ],
>                         "thresholds": [],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Total Leader Elections Per Day",
>                         "tooltip": {
>                             "msResolution": false,
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": []
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "title": "New row"
>             }
>         ],
>         "schemaVersion": 13,
>         "sharedCrosshair": false,
>         "style": "dark",
>         "tags": [],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [],
>                     "query": "label_values(etcd_server_has_leader, job)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-15m",
>             "to": "now"
>         },
>         "timepicker": {
>             "now": true,
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "browser",
>         "title": "etcd",
>         "version": 215
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/k8s-coredns.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/k8s-coredns.yaml
0a1,1325
> {{- /* Added manually, can be changed in-place. */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.coreDns.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-coredns" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-coredns.json: |-
>     {
>         "annotations": {
>             "list": [
>                 {
>                     "builtIn": 1,
>                     "datasource": "-- Grafana --",
>                     "enable": true,
>                     "hide": true,
>                     "iconColor": "rgba(0, 211, 255, 1)",
>                     "name": "Annotations & Alerts",
>                     "type": "dashboard"
>                 }
>             ]
>         },
>         "description": "A dashboard for the CoreDNS DNS server.",
>         "editable": true,
>         "gnetId": 5926,
>         "graphTooltip": 0,
>         "id": 9,
>         "iteration": 1539947521873,
>         "links": [],
>         "panels": [
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 8,
>                     "x": 0,
>                     "y": 0
>                 },
>                 "id": 1,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [
>                     {
>                         "alias": "total",
>                         "yaxis": 2
>                     }
>                 ],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(rate(coredns_dns_request_count_total{instance=~\"$instance\"}[5m])) by (proto)",
>                         "format": "time_series",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}",
>                         "refId": "A",
>                         "step": 60
>                     },
>                     {
>                         "expr": "sum(rate(coredns_dns_request_count_total{instance=~\"$instance\"}[5m]))",
>                         "format": "time_series",
>                         "intervalFactor": 2,
>                         "legendFormat": "total",
>                         "refId": "B",
>                         "step": 60
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Requests (total)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 8,
>                     "x": 8,
>                     "y": 0
>                 },
>                 "id": 12,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [
>                     {
>                         "alias": "total",
>                         "yaxis": 2
>                     },
>                     {
>                         "alias": "other",
>                         "yaxis": 2
>                     }
>                 ],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(rate(coredns_dns_request_type_count_total{instance=~\"$instance\"}[5m])) by (type)",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{type}}`}}",
>                         "refId": "A",
>                         "step": 60
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Requests (by qtype)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 8,
>                     "x": 16,
>                     "y": 0
>                 },
>                 "id": 2,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [
>                     {
>                         "alias": "total",
>                         "yaxis": 2
>                     }
>                 ],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(rate(coredns_dns_request_count_total{instance=~\"$instance\"}[5m])) by (zone)",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{zone}}`}}",
>                         "refId": "A",
>                         "step": 60
>                     },
>                     {
>                         "expr": "sum(rate(coredns_dns_request_count_total{instance=~\"$instance\"}[5m]))",
>                         "intervalFactor": 2,
>                         "legendFormat": "total",
>                         "refId": "B",
>                         "step": 60
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Requests (by zone)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 12,
>                     "x": 0,
>                     "y": 7
>                 },
>                 "id": 10,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [
>                     {
>                         "alias": "total",
>                         "yaxis": 2
>                     }
>                 ],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(rate(coredns_dns_request_do_count_total{instance=~\"$instance\"}[5m]))",
>                         "intervalFactor": 2,
>                         "legendFormat": "DO",
>                         "refId": "A",
>                         "step": 40
>                     },
>                     {
>                         "expr": "sum(rate(coredns_dns_request_count_total{instance=~\"$instance\"}[5m]))",
>                         "intervalFactor": 2,
>                         "legendFormat": "total",
>                         "refId": "B",
>                         "step": 40
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Requests (DO bit)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": null,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 6,
>                     "x": 12,
>                     "y": 7
>                 },
>                 "id": 9,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [
>                     {
>                         "alias": "tcp:90%",
>                         "yaxis": 2
>                     },
>                     {
>                         "alias": "tcp:99%",
>                         "yaxis": 2
>                     },
>                     {
>                         "alias": "tcp:50%",
>                         "yaxis": 2
>                     }
>                 ],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "histogram_quantile(0.99, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\"$instance\",proto=\"udp\"}[5m])) by (le,proto))",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:99%",
>                         "refId": "A",
>                         "step": 60
>                     },
>                     {
>                         "expr": "histogram_quantile(0.90, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\"$instance\",proto=\"udp\"}[5m])) by (le,proto))",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:90%",
>                         "refId": "B",
>                         "step": 60
>                     },
>                     {
>                         "expr": "histogram_quantile(0.50, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\"$instance\",proto=\"udp\"}[5m])) by (le,proto))",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:50%",
>                         "refId": "C",
>                         "step": 60
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Requests (size, udp)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "bytes",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "short",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 6,
>                     "x": 18,
>                     "y": 7
>                 },
>                 "id": 14,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [
>                     {
>                         "alias": "tcp:90%",
>                         "yaxis": 1
>                     },
>                     {
>                         "alias": "tcp:99%",
>                         "yaxis": 1
>                     },
>                     {
>                         "alias": "tcp:50%",
>                         "yaxis": 1
>                     }
>                 ],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "histogram_quantile(0.99, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\"$instance\",proto=\"tcp\"}[5m])) by (le,proto))",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:99%",
>                         "refId": "A",
>                         "step": 60
>                     },
>                     {
>                         "expr": "histogram_quantile(0.90, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\"$instance\",proto=\"tcp\"}[5m])) by (le,proto))",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:90%",
>                         "refId": "B",
>                         "step": 60
>                     },
>                     {
>                         "expr": "histogram_quantile(0.50, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\"$instance\",proto=\"tcp\"}[5m])) by (le,proto))",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:50%",
>                         "refId": "C",
>                         "step": 60
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Requests (size, tcp)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "bytes",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "short",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 12,
>                     "x": 0,
>                     "y": 14
>                 },
>                 "id": 5,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(rate(coredns_dns_response_rcode_count_total{instance=~\"$instance\"}[5m])) by (rcode)",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{rcode}}`}}",
>                         "refId": "A",
>                         "step": 40
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Responses (by rcode)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "short",
>                         "logBase": 1,
>                         "max": null,
>                         "min": null,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 12,
>                     "x": 12,
>                     "y": 14
>                 },
>                 "id": 3,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "histogram_quantile(0.99, sum(rate(coredns_dns_request_duration_seconds_bucket{instance=~\"$instance\"}[5m])) by (le, job))",
>                         "format": "time_series",
>                         "intervalFactor": 2,
>                         "legendFormat": "99%",
>                         "refId": "A",
>                         "step": 40
>                     },
>                     {
>                         "expr": "histogram_quantile(0.90, sum(rate(coredns_dns_request_duration_seconds_bucket{instance=~\"$instance\"}[5m])) by (le))",
>                         "format": "time_series",
>                         "intervalFactor": 2,
>                         "legendFormat": "90%",
>                         "refId": "B",
>                         "step": 40
>                     },
>                     {
>                         "expr": "histogram_quantile(0.50, sum(rate(coredns_dns_request_duration_seconds_bucket{instance=~\"$instance\"}[5m])) by (le))",
>                         "format": "time_series",
>                         "intervalFactor": 2,
>                         "legendFormat": "50%",
>                         "refId": "C",
>                         "step": 40
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Responses (duration)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "ms",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "short",
>                         "logBase": 1,
>                         "max": null,
>                         "min": null,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 12,
>                     "x": 0,
>                     "y": 21
>                 },
>                 "id": 8,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [
>                     {
>                         "alias": "udp:50%",
>                         "yaxis": 1
>                     },
>                     {
>                         "alias": "tcp:50%",
>                         "yaxis": 2
>                     },
>                     {
>                         "alias": "tcp:90%",
>                         "yaxis": 2
>                     },
>                     {
>                         "alias": "tcp:99%",
>                         "yaxis": 2
>                     }
>                 ],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "histogram_quantile(0.99, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\"$instance\",proto=\"udp\"}[5m])) by (le,proto)) ",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:99%",
>                         "refId": "A",
>                         "step": 40
>                     },
>                     {
>                         "expr": "histogram_quantile(0.90, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\"$instance\",proto=\"udp\"}[5m])) by (le,proto)) ",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:90%",
>                         "refId": "B",
>                         "step": 40
>                     },
>                     {
>                         "expr": "histogram_quantile(0.50, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\"$instance\",proto=\"udp\"}[5m])) by (le,proto)) ",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:50%",
>                         "metric": "",
>                         "refId": "C",
>                         "step": 40
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Responses (size, udp)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "bytes",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "short",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 12,
>                     "x": 12,
>                     "y": 21
>                 },
>                 "id": 13,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [
>                     {
>                         "alias": "udp:50%",
>                         "yaxis": 1
>                     },
>                     {
>                         "alias": "tcp:50%",
>                         "yaxis": 1
>                     },
>                     {
>                         "alias": "tcp:90%",
>                         "yaxis": 1
>                     },
>                     {
>                         "alias": "tcp:99%",
>                         "yaxis": 1
>                     }
>                 ],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "histogram_quantile(0.99, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\"$instance\",proto=\"tcp\"}[5m])) by (le,proto)) ",
>                         "format": "time_series",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:99%",
>                         "refId": "A",
>                         "step": 40
>                     },
>                     {
>                         "expr": "histogram_quantile(0.90, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\"$instance\",proto=\"tcp\"}[5m])) by (le,proto)) ",
>                         "format": "time_series",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:90%",
>                         "refId": "B",
>                         "step": 40
>                     },
>                     {
>                         "expr": "histogram_quantile(0.50, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\"$instance\",proto=\"tcp\"}[5m])) by (le, proto)) ",
>                         "format": "time_series",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{proto}}`}}:50%",
>                         "metric": "",
>                         "refId": "C",
>                         "step": 40
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Responses (size, tcp)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "bytes",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "short",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 12,
>                     "x": 0,
>                     "y": 28
>                 },
>                 "id": 15,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(coredns_cache_size{instance=~\"$instance\"}) by (type)",
>                         "intervalFactor": 2,
>                         "legendFormat": "{{`{{type}}`}}",
>                         "refId": "A",
>                         "step": 40
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Cache (size)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "short",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "short",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             },
>             {
>                 "aliasColors": {},
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "Prometheus",
>                 "editable": true,
>                 "error": false,
>                 "fill": 1,
>                 "grid": {},
>                 "gridPos": {
>                     "h": 7,
>                     "w": 12,
>                     "x": 12,
>                     "y": 28
>                 },
>                 "id": 16,
>                 "legend": {
>                     "avg": false,
>                     "current": false,
>                     "max": false,
>                     "min": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [],
>                 "nullPointMode": "connected",
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "seriesOverrides": [
>                     {
>                         "alias": "misses",
>                         "yaxis": 2
>                     }
>                 ],
>                 "spaceLength": 10,
>                 "stack": false,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(rate(coredns_cache_hits_total{instance=~\"$instance\"}[5m])) by (type)",
>                         "intervalFactor": 2,
>                         "legendFormat": "hits:{{`{{type}}`}}",
>                         "refId": "A",
>                         "step": 40
>                     },
>                     {
>                         "expr": "sum(rate(coredns_cache_misses_total{instance=~\"$instance\"}[5m])) by (type)",
>                         "intervalFactor": 2,
>                         "legendFormat": "misses",
>                         "refId": "B",
>                         "step": 40
>                     }
>                 ],
>                 "thresholds": [],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Cache (hitrate)",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 0,
>                     "value_type": "cumulative"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": []
>                 },
>                 "yaxes": [
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "pps",
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ],
>                 "yaxis": {
>                     "align": false,
>                     "alignLevel": null
>                 }
>             }
>         ],
>         "schemaVersion": 16,
>         "style": "dark",
>         "tags": [],
>         "templating": {
>             "list": [
>                 {
>                     "allValue": ".*",
>                     "current": {
>                         "selected": true,
>                         "tags": [],
>                         "text": "172.16.1.8:9153",
>                         "value": "172.16.1.8:9153"
>                     },
>                     "datasource": "Prometheus",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": "Instance",
>                     "multi": false,
>                     "name": "instance",
>                     "options": [],
>                     "query": "up{job=\"coredns\"}",
>                     "refresh": 1,
>                     "regex": ".*instance=\"(.*?)\".*",
>                     "skipUrlSync": false,
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-3h",
>             "to": "now"
>         },
>         "timepicker": {
>             "now": true,
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "utc",
>         "title": "CoreDNS",
>         "uid": "vkQ0UHxik",
>         "version": 1
>     }
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/k8s-resources-cluster.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/k8s-resources-cluster.yaml
0a1,2590
> {{- /*
> Generated from 'k8s-resources-cluster' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-cluster" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-cluster.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "100px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "1 - avg(rate(node_cpu_seconds_total{mode=\"idle\", cluster=\"$cluster\"}[1m]))",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_cpu_cores{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Requests Commitment",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_cpu_cores{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Limits Commitment",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "1 - sum(:node_memory_MemAvailable_bytes:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_memory_bytes{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_memory_bytes{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Requests Commitment",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "format": "percentunit",
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 2,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable_memory_bytes{cluster=\"$cluster\"})",
>                                 "format": "time_series",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "70,80",
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Limits Commitment",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "singlestat",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Headlines",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Pods",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Workloads",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to workloads",
>                                 "linkUrl": "./d/a87fb0d919ec0ea5f6543124e16c42a5/k8s-resources-workloads-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #G",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Namespace",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell",
>                                 "pattern": "namespace",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "count(mixin_pod_workload{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "count(avg(mixin_pod_workload{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "G",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", container!=\"\"}) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage (w/o cache)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 10,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Pods",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Workloads",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to workloads",
>                                 "linkUrl": "./d/a87fb0d919ec0ea5f6543124e16c42a5/k8s-resources-workloads-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #G",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Namespace",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell",
>                                 "pattern": "namespace",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "count(mixin_pod_workload{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "count(avg(mixin_pod_workload{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", container!=\"\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\"}) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "G",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Requests by Namespace",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Requests",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 11,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Current Receive Bandwidth",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "Bps"
>                             },
>                             {
>                                 "alias": "Current Transmit Bandwidth",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "Bps"
>                             },
>                             {
>                                 "alias": "Rate of Received Packets",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Transmitted Packets",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Received Packets Dropped",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Transmitted Packets Dropped",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Namespace",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell",
>                                 "pattern": "namespace",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Current Network Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 12,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Receive Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 13,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Transmit Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 14,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Average Container Bandwidth by Namespace: Received",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 15,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Average Container Bandwidth by Namespace: Transmitted",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 16,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 17,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 18,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 19,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\".+\"}[$interval])) by (namespace)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{namespace}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(node_cpu_seconds_total, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Cluster",
>         "uid": "efa86fd1d0c121a26444b636a3f509a8",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/k8s-resources-namespace.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/k8s-resources-namespace.yaml
0a1,1878
> {{- /*
> Generated from 'k8s-resources-namespace' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-namespace" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-namespace.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\"}) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage (w/o cache)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Usage (RSS)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Cache)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #G",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Swap)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #H",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod) / sum(kube_pod_container_resource_requests_memory_bytes{namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod) / sum(kube_pod_container_resource_limits_memory_bytes{namespace=\"$namespace\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_cache{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "G",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_swap{cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "H",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Current Receive Bandwidth",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "Bps"
>                             },
>                             {
>                                 "alias": "Current Transmit Bandwidth",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "Bps"
>                             },
>                             {
>                                 "alias": "Rate of Received Packets",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Transmitted Packets",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Received Packets Dropped",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Transmitted Packets Dropped",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Current Network Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Receive Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Transmit Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 10,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 11,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Namespace (Pods)",
>         "uid": "85a562078cdf77779eaa1add43ccec1e",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/k8s-resources-node.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/k8s-resources-node.yaml
0a1,961
> {{- /*
> Generated from 'k8s-resources-node' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-node" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-node.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", node=\"$node\"}) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", node=\"$node\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", node=\"$node\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", node=\"$node\"}) by (pod) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", node=\"$node\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", node=\"$node\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", node=\"$node\"}) by (pod) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", node=\"$node\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=\"$node\", container!=\"\"}) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage (w/o cache)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Usage (RSS)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Cache)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #G",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Swap)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #H",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=\"$node\",container!=\"\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", node=\"$node\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=\"$node\",container!=\"\"}) by (pod) / sum(kube_pod_container_resource_requests_memory_bytes{node=\"$node\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", node=\"$node\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=\"$node\",container!=\"\"}) by (pod) / sum(kube_pod_container_resource_limits_memory_bytes{node=\"$node\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_memory_rss{cluster=\"$cluster\", node=\"$node\",container!=\"\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_memory_cache{cluster=\"$cluster\", node=\"$node\",container!=\"\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "G",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_memory_swap{cluster=\"$cluster\", node=\"$node\",container!=\"\"}) by (pod)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "H",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Quota",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "node",
>                     "multi": false,
>                     "name": "node",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, node)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Node (Pods)",
>         "uid": "200ac8fdbfbb74b39aff88118e4d1c2c",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/k8s-resources-pod.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/k8s-resources-pod.yaml
0a1,1627
> {{- /*
> Generated from 'k8s-resources-pod' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-pod" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-pod.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", cluster=\"$cluster\"}) by (container)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{container}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Container",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "container",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", container!=\"\"}) by (container)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{container}}`}} (RSS)",
>                                 "legendLink": null,
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_cache{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", container!=\"\"}) by (container)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{container}}`}} (Cache)",
>                                 "legendLink": null,
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_swap{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", container!=\"\"}) by (container)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{container}}`}} (Swap)",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Usage (RSS)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Cache)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #G",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Usage (Swap)",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #H",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Container",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "container",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"POD\", container!=\"\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_container_resource_requests_memory_bytes{namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container) / sum(kube_pod_container_resource_limits_memory_bytes{namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_rss{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_cache{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "G",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(container_memory_swap{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "H",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Receive Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Transmit Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_dropped_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 10,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "pod",
>                     "multi": false,
>                     "name": "pod",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\", namespace=\"$namespace\"}, pod)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Pod",
>         "uid": "6581e46e4e5c7ba40a07646395ef7b23",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/k8s-resources-workload.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/k8s-resources-workload.yaml
0a1,2047
> {{- /*
> Generated from 'k8s-resources-workload' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-workload" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-workload.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=\"$type\"}\n) by (pod)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Current Receive Bandwidth",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "Bps"
>                             },
>                             {
>                                 "alias": "Current Transmit Bandwidth",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "Bps"
>                             },
>                             {
>                                 "alias": "Rate of Received Packets",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Transmitted Packets",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Received Packets Dropped",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Transmitted Packets Dropped",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Pod",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell",
>                                 "pattern": "pod",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Current Network Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Receive Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Transmit Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Average Container Bandwidth by Pod: Received",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Average Container Bandwidth by Pod: Transmitted",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 10,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 11,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 12,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 13,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod) \ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "workload",
>                     "multi": false,
>                     "name": "workload",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\"}, workload)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "type",
>                     "multi": false,
>                     "name": "type",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\"}, workload_type)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Workload",
>         "uid": "a164a7f0339f99e89cea5cb47e9be617",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/k8s-resources-workloads-namespace.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/k8s-resources-workloads-namespace.yaml
0a1,2133
> {{- /*
> Generated from 'k8s-resources-workloads-namespace' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "k8s-resources-workloads-namespace" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   k8s-resources-workloads-namespace.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}} - {{`{{workload_type}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Running Pods",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "CPU Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "CPU Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Workload",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2",
>                                 "pattern": "workload",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Workload Type",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "workload_type",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "count(mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}) by (workload, workload_type)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits_cpu_cores{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}} - {{`{{workload_type}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Usage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Running Pods",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 0,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Memory Usage",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Requests %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Memory Limits",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "bytes"
>                             },
>                             {
>                                 "alias": "Memory Limits %",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "percentunit"
>                             },
>                             {
>                                 "alias": "Workload",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2",
>                                 "pattern": "workload",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Workload Type",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "workload_type",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "count(mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}) by (workload, workload_type)",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n  kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits_memory_bytes{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=\"$type\"}\n) by (workload, workload_type)\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Quota",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory Quota",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Current Receive Bandwidth",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "Bps"
>                             },
>                             {
>                                 "alias": "Current Transmit Bandwidth",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "Bps"
>                             },
>                             {
>                                 "alias": "Rate of Received Packets",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #C",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Transmitted Packets",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #D",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Received Packets Dropped",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #E",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Rate of Transmitted Packets Dropped",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #F",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "pps"
>                             },
>                             {
>                                 "alias": "Workload",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": true,
>                                 "linkTooltip": "Drill down to pods",
>                                 "linkUrl": "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$type",
>                                 "pattern": "workload",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Workload Type",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "workload_type",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "C",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "D",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "E",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "F",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Current Network Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Receive Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Transmit Bandwidth",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Average Container Bandwidth by Workload: Received",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Average Container Bandwidth by Workload: Transmitted",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 10,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 11,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 12,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 13,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=~\"$namespace\"}[$interval])\n* on (namespace,pod) \ngroup_left(workload,workload_type) mixin_pod_workload{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info, cluster)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "deployment",
>                         "value": "deployment"
>                     },
>                     "datasource": "$datasource",
>                     "definition": "label_values(mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\"}, workload_type)",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "type",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\"}, workload_type)",
>                     "refresh": 1,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Compute Resources / Namespace (Workloads)",
>         "uid": "a87fb0d919ec0ea5f6543124e16c42a5",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/kubelet.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/kubelet.yaml
0a1,2495
> {{- /*
> Generated from 'kubelet' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.kubelet.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "kubelet" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   kubelet.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(up{cluster=\"$cluster\", job=\"kubelet\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Up",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(kubelet_running_pod_count{cluster=\"$cluster\", job=\"kubelet\", instance=~\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Running Pods",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(kubelet_running_container_count{cluster=\"$cluster\", job=\"kubelet\", instance=~\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Running Container",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"kubelet\", instance=~\"$instance\", state=\"actual_state_of_world\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Actual Volume Count",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"kubelet\", instance=~\"$instance\",state=\"desired_state_of_world\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Desired Volume Count",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(kubelet_node_config_error{cluster=\"$cluster\", job=\"kubelet\", instance=~\"$instance\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Config Error Count",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(kubelet_runtime_operations_total{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (operation_type, instance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{operation_type}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Operation Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(kubelet_runtime_operations_errors_total{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance, operation_type)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{operation_type}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Operation Error Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 10,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(kubelet_runtime_operations_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance, operation_type, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{operation_type}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Operation duration 99th quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 11,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} pod",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum(rate(kubelet_pod_worker_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} worker",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Pod Start Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 12,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} pod",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} worker",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Pod Start Duration",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 13,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "hideEmpty": "true",
>                             "hideZero": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(storage_operation_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance, operation_name, volume_plugin)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{operation_name}}`}} {{`{{volume_plugin}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Storage Operation Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 14,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "hideEmpty": "true",
>                             "hideZero": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(storage_operation_errors_total{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance, operation_name, volume_plugin)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{operation_name}}`}} {{`{{volume_plugin}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Storage Operation Error Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 15,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "hideEmpty": "true",
>                             "hideZero": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": true,
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(storage_operation_duration_seconds_bucket{cluster=\"$cluster\", job=\"kubelet\", instance=~\"$instance\"}[5m])) by (instance, operation_name, volume_plugin, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{operation_name}}`}} {{`{{volume_plugin}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Storage Operation Duration 99th quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 16,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(kubelet_cgroup_manager_duration_seconds_count{cluster=\"$cluster\", job=\"kubelet\", instance=~\"$instance\"}[5m])) by (instance, operation_type)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{operation_type}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Cgroup manager operation rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 17,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(kubelet_cgroup_manager_duration_seconds_bucket{cluster=\"$cluster\", job=\"kubelet\", instance=~\"$instance\"}[5m])) by (instance, operation_type, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{operation_type}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Cgroup manager 99th quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "description": "Pod lifecycle event generator",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 18,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(kubelet_pleg_relist_duration_seconds_count{cluster=\"$cluster\", job=\"kubelet\", instance=~\"$instance\"}[5m])) by (instance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "PLEG relist rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 19,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_interval_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "PLEG relist interval",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 20,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "PLEG relist duration",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 21,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", instance=~\"$instance\",code=~\"2..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "2xx",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", instance=~\"$instance\",code=~\"3..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "3xx",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", instance=~\"$instance\",code=~\"4..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "4xx",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", instance=~\"$instance\",code=~\"5..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "5xx",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "RPC Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 22,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_latency_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", instance=~\"$instance\"}[5m])) by (instance, verb, url, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{verb}}`}} {{`{{url}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Request duration 99th quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 23,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "process_resident_memory_bytes{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 24,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 25,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "go_goroutines{cluster=\"$cluster\",job=\"kubelet\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Goroutines",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info, cluster)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kubelet_runtime_operations{cluster=\"$cluster\", job=\"kubelet\"}, instance)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Kubelet",
>         "uid": "3138fa155d5915769fbded898ac09fd9",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/namespace-by-pod.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/namespace-by-pod.yaml
0a1,1418
> {{- /*
> Generated from 'namespace-by-pod' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "namespace-by-pod" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   namespace-by-pod.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
>                 {
>                     "builtIn": 1,
>                     "datasource": "-- Grafana --",
>                     "enable": true,
>                     "hide": true,
>                     "iconColor": "rgba(0, 211, 255, 1)",
>                     "name": "Annotations & Alerts",
>                     "type": "dashboard"
>                 }
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "panels": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 0
>                 },
>                 "id": 2,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Current Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "cacheTimeout": null,
>                 "colorBackground": false,
>                 "colorValue": false,
>                 "colors": [
>                     "#299c46",
>                     "rgba(237, 129, 40, 0.89)",
>                     "#d44a3a"
>                 ],
>                 "datasource": "$datasource",
>                 "decimals": 0,
>                 "format": "time_series",
>                 "gauge": {
>                     "maxValue": 100,
>                     "minValue": 0,
>                     "show": false,
>                     "thresholdLabels": false,
>                     "thresholdMarkers": true
>                 },
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 0,
>                     "y": 1
>                 },
>                 "height": 9,
>                 "id": 3,
>                 "interval": null,
>                 "links": [
> 
>                 ],
>                 "mappingType": 1,
>                 "mappingTypes": [
>                     {
>                         "name": "value to text",
>                         "value": 1
>                     },
>                     {
>                         "name": "range to text",
>                         "value": 2
>                     }
>                 ],
>                 "maxDataPoints": 100,
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "nullText": null,
>                 "options": {
>                     "fieldOptions": {
>                         "calcs": [
>                             "last"
>                         ],
>                         "defaults": {
>                             "max": 10000000000,
>                             "min": 0,
>                             "title": "$namespace",
>                             "unit": "Bps"
>                         },
>                         "mappings": [
> 
>                         ],
>                         "override": {
> 
>                         },
>                         "thresholds": [
>                             {
>                                 "color": "dark-green",
>                                 "index": 0,
>                                 "value": null
>                             },
>                             {
>                                 "color": "dark-yellow",
>                                 "index": 1,
>                                 "value": 5000000000
>                             },
>                             {
>                                 "color": "dark-red",
>                                 "index": 2,
>                                 "value": 7000000000
>                             }
>                         ],
>                         "values": false
>                     }
>                 },
>                 "postfix": "",
>                 "postfixFontSize": "50%",
>                 "prefix": "",
>                 "prefixFontSize": "50%",
>                 "rangeMaps": [
>                     {
>                         "from": "null",
>                         "text": "N/A",
>                         "to": "null"
>                     }
>                 ],
>                 "span": 12,
>                 "sparkline": {
>                     "fillColor": "rgba(31, 118, 189, 0.18)",
>                     "full": false,
>                     "lineColor": "rgb(31, 120, 193)",
>                     "show": false
>                 },
>                 "tableColumn": "",
>                 "targets": [
>                     {
>                         "expr": "sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution]))",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "",
>                         "refId": "A"
>                     }
>                 ],
>                 "thresholds": "",
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Current Rate of Bytes Received",
>                 "type": "gauge",
>                 "valueFontSize": "80%",
>                 "valueMaps": [
>                     {
>                         "op": "=",
>                         "text": "N/A",
>                         "value": "null"
>                     }
>                 ],
>                 "valueName": "current"
>             },
>             {
>                 "cacheTimeout": null,
>                 "colorBackground": false,
>                 "colorValue": false,
>                 "colors": [
>                     "#299c46",
>                     "rgba(237, 129, 40, 0.89)",
>                     "#d44a3a"
>                 ],
>                 "datasource": "$datasource",
>                 "decimals": 0,
>                 "format": "time_series",
>                 "gauge": {
>                     "maxValue": 100,
>                     "minValue": 0,
>                     "show": false,
>                     "thresholdLabels": false,
>                     "thresholdMarkers": true
>                 },
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 12,
>                     "y": 1
>                 },
>                 "height": 9,
>                 "id": 4,
>                 "interval": null,
>                 "links": [
> 
>                 ],
>                 "mappingType": 1,
>                 "mappingTypes": [
>                     {
>                         "name": "value to text",
>                         "value": 1
>                     },
>                     {
>                         "name": "range to text",
>                         "value": 2
>                     }
>                 ],
>                 "maxDataPoints": 100,
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "nullText": null,
>                 "options": {
>                     "fieldOptions": {
>                         "calcs": [
>                             "last"
>                         ],
>                         "defaults": {
>                             "max": 10000000000,
>                             "min": 0,
>                             "title": "$namespace",
>                             "unit": "Bps"
>                         },
>                         "mappings": [
> 
>                         ],
>                         "override": {
> 
>                         },
>                         "thresholds": [
>                             {
>                                 "color": "dark-green",
>                                 "index": 0,
>                                 "value": null
>                             },
>                             {
>                                 "color": "dark-yellow",
>                                 "index": 1,
>                                 "value": 5000000000
>                             },
>                             {
>                                 "color": "dark-red",
>                                 "index": 2,
>                                 "value": 7000000000
>                             }
>                         ],
>                         "values": false
>                     }
>                 },
>                 "postfix": "",
>                 "postfixFontSize": "50%",
>                 "prefix": "",
>                 "prefixFontSize": "50%",
>                 "rangeMaps": [
>                     {
>                         "from": "null",
>                         "text": "N/A",
>                         "to": "null"
>                     }
>                 ],
>                 "span": 12,
>                 "sparkline": {
>                     "fillColor": "rgba(31, 118, 189, 0.18)",
>                     "full": false,
>                     "lineColor": "rgb(31, 120, 193)",
>                     "show": false
>                 },
>                 "tableColumn": "",
>                 "targets": [
>                     {
>                         "expr": "sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution]))",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "",
>                         "refId": "A"
>                     }
>                 ],
>                 "thresholds": "",
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Current Rate of Bytes Transmitted",
>                 "type": "gauge",
>                 "valueFontSize": "80%",
>                 "valueMaps": [
>                     {
>                         "op": "=",
>                         "text": "N/A",
>                         "value": "null"
>                     }
>                 ],
>                 "valueName": "current"
>             },
>             {
>                 "columns": [
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     }
>                 ],
>                 "datasource": "$datasource",
>                 "fill": 1,
>                 "fontSize": "100%",
>                 "gridPos": {
>                     "h": 9,
>                     "w": 24,
>                     "x": 0,
>                     "y": 10
>                 },
>                 "id": 5,
>                 "lines": true,
>                 "linewidth": 1,
>                 "minSpan": 24,
>                 "nullPointMode": "null as zero",
>                 "renderer": "flot",
>                 "scroll": true,
>                 "showHeader": true,
>                 "sort": {
>                     "col": 0,
>                     "desc": false
>                 },
>                 "spaceLength": 10,
>                 "span": 24,
>                 "styles": [
>                     {
>                         "alias": "Time",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Time",
>                         "thresholds": [
> 
>                         ],
>                         "type": "hidden",
>                         "unit": "short"
>                     },
>                     {
>                         "alias": "Bandwidth Received",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #A",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Bandwidth Transmitted",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #B",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Rate of Received Packets",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #C",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Rate of Transmitted Packets",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #D",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Rate of Received Packets Dropped",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #E",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Rate of Transmitted Packets Dropped",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #F",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Pod",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": true,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "d/7a18067ce943a40ae25454675c19ff5c/kubernetes-networking-pod?orgId=1&refresh=30s&var-namespace=$namespace&var-pod=$__cell",
>                         "pattern": "pod",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "short"
>                     }
>                 ],
>                 "targets": [
>                     {
>                         "expr": "sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "A",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "B",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sum(irate(container_network_receive_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "C",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sum(irate(container_network_transmit_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "D",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sum(irate(container_network_receive_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "E",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "F",
>                         "step": 10
>                     }
>                 ],
>                 "title": "Current Status",
>                 "transform": "table",
>                 "type": "table"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 19
>                 },
>                 "id": 6,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 0,
>                     "y": 20
>                 },
>                 "id": 7,
>                 "legend": {
>                     "alignAsTable": false,
>                     "avg": false,
>                     "current": false,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": false,
>                     "min": false,
>                     "rightSide": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 12,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{pod}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Receive Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 12,
>                     "y": 20
>                 },
>                 "id": 8,
>                 "legend": {
>                     "alignAsTable": false,
>                     "avg": false,
>                     "current": false,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": false,
>                     "min": false,
>                     "rightSide": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 12,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{pod}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Transmit Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 29
>                 },
>                 "id": 9,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 10,
>                             "w": 12,
>                             "x": 0,
>                             "y": 30
>                         },
>                         "id": 10,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 10,
>                             "w": 12,
>                             "x": 12,
>                             "y": 30
>                         },
>                         "id": 11,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Packets",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 30
>                 },
>                 "id": 12,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 10,
>                             "w": 12,
>                             "x": 0,
>                             "y": 40
>                         },
>                         "id": 13,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 10,
>                             "w": 12,
>                             "x": 12,
>                             "y": 40
>                         },
>                         "id": 14,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Errors",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "refresh": "30s",
>         "rows": [
> 
>         ],
>         "schemaVersion": 18,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": ".+",
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "kube-system",
>                         "value": "kube-system"
>                     },
>                     "datasource": "$datasource",
>                     "definition": "label_values(container_network_receive_packets_total, namespace)",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(container_network_receive_packets_total, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "resolution",
>                     "options": [
>                         {
>                             "selected": false,
>                             "text": "30s",
>                             "value": "30s"
>                         },
>                         {
>                             "selected": true,
>                             "text": "5m",
>                             "value": "5m"
>                         },
>                         {
>                             "selected": false,
>                             "text": "1h",
>                             "value": "1h"
>                         }
>                     ],
>                     "query": "30s,5m,1h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Networking / Namespace (Pods)",
>         "uid": "8b7a8b326d7a6f1f04244066368c67af",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/namespace-by-workload.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/namespace-by-workload.yaml
0a1,1458
> {{- /*
> Generated from 'namespace-by-workload' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "namespace-by-workload" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   namespace-by-workload.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
>                 {
>                     "builtIn": 1,
>                     "datasource": "-- Grafana --",
>                     "enable": true,
>                     "hide": true,
>                     "iconColor": "rgba(0, 211, 255, 1)",
>                     "name": "Annotations & Alerts",
>                     "type": "dashboard"
>                 }
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "panels": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 0
>                 },
>                 "id": 2,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Current Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "breakpoint": "50%",
>                 "cacheTimeout": null,
>                 "combine": {
>                     "label": "Others",
>                     "threshold": 0
>                 },
>                 "datasource": "$datasource",
>                 "fontSize": "80%",
>                 "format": "Bps",
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 0,
>                     "y": 1
>                 },
>                 "id": 3,
>                 "interval": null,
>                 "legend": {
>                     "percentage": true,
>                     "percentageDecimals": null,
>                     "show": true,
>                     "values": true
>                 },
>                 "legendType": "Right side",
>                 "maxDataPoints": 3,
>                 "nullPointMode": "connected",
>                 "pieType": "donut",
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{workload}}`}}",
>                         "refId": "A"
>                     }
>                 ],
>                 "title": "Current Rate of Bytes Received",
>                 "type": "grafana-piechart-panel",
>                 "valueName": "current"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "breakpoint": "50%",
>                 "cacheTimeout": null,
>                 "combine": {
>                     "label": "Others",
>                     "threshold": 0
>                 },
>                 "datasource": "$datasource",
>                 "fontSize": "80%",
>                 "format": "Bps",
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 12,
>                     "y": 1
>                 },
>                 "id": 4,
>                 "interval": null,
>                 "legend": {
>                     "percentage": true,
>                     "percentageDecimals": null,
>                     "show": true,
>                     "values": true
>                 },
>                 "legendType": "Right side",
>                 "maxDataPoints": 3,
>                 "nullPointMode": "connected",
>                 "pieType": "donut",
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{workload}}`}}",
>                         "refId": "A"
>                     }
>                 ],
>                 "title": "Current Rate of Bytes Transmitted",
>                 "type": "grafana-piechart-panel",
>                 "valueName": "current"
>             },
>             {
>                 "columns": [
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     },
>                     {
>                         "text": "",
>                         "value": ""
>                     }
>                 ],
>                 "datasource": "$datasource",
>                 "fill": 1,
>                 "fontSize": "90%",
>                 "gridPos": {
>                     "h": 9,
>                     "w": 24,
>                     "x": 0,
>                     "y": 10
>                 },
>                 "id": 5,
>                 "lines": true,
>                 "linewidth": 1,
>                 "minSpan": 24,
>                 "nullPointMode": "null as zero",
>                 "renderer": "flot",
>                 "scroll": true,
>                 "showHeader": true,
>                 "sort": {
>                     "col": 0,
>                     "desc": false
>                 },
>                 "spaceLength": 10,
>                 "span": 24,
>                 "styles": [
>                     {
>                         "alias": "Time",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Time",
>                         "thresholds": [
> 
>                         ],
>                         "type": "hidden",
>                         "unit": "short"
>                     },
>                     {
>                         "alias": "Current Bandwidth Received",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #A",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Current Bandwidth Transmitted",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #B",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Average Bandwidth Received",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #C",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Average Bandwidth Transmitted",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #D",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "Bps"
>                     },
>                     {
>                         "alias": "Rate of Received Packets",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #E",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Rate of Transmitted Packets",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #F",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Rate of Received Packets Dropped",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #G",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Rate of Transmitted Packets Dropped",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": false,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "",
>                         "pattern": "Value #H",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "pps"
>                     },
>                     {
>                         "alias": "Workload",
>                         "colorMode": null,
>                         "colors": [
> 
>                         ],
>                         "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                         "decimals": 2,
>                         "link": true,
>                         "linkTooltip": "Drill down",
>                         "linkUrl": "d/728bf77cc1166d2f3133bf25846876cc/kubernetes-networking-workload?orgId=1&refresh=30s&var-namespace=$namespace&var-type=$type&var-workload=$__cell",
>                         "pattern": "workload",
>                         "thresholds": [
> 
>                         ],
>                         "type": "number",
>                         "unit": "short"
>                     }
>                 ],
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "A",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "B",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "C",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "D",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "E",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "F",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "G",
>                         "step": 10
>                     },
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "table",
>                         "instant": true,
>                         "intervalFactor": 2,
>                         "legendFormat": "",
>                         "refId": "H",
>                         "step": 10
>                     }
>                 ],
>                 "title": "Current Status",
>                 "transform": "table",
>                 "type": "table"
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 19
>                 },
>                 "id": 6,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "breakpoint": "50%",
>                         "cacheTimeout": null,
>                         "combine": {
>                             "label": "Others",
>                             "threshold": 0
>                         },
>                         "datasource": "$datasource",
>                         "fontSize": "80%",
>                         "format": "Bps",
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 0,
>                             "y": 20
>                         },
>                         "id": 7,
>                         "interval": null,
>                         "legend": {
>                             "percentage": true,
>                             "percentageDecimals": null,
>                             "show": true,
>                             "values": true
>                         },
>                         "legendType": "Right side",
>                         "maxDataPoints": 3,
>                         "nullPointMode": "connected",
>                         "pieType": "donut",
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "instant": null,
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "title": "Average Rate of Bytes Received",
>                         "type": "grafana-piechart-panel",
>                         "valueName": "current"
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "breakpoint": "50%",
>                         "cacheTimeout": null,
>                         "combine": {
>                             "label": "Others",
>                             "threshold": 0
>                         },
>                         "datasource": "$datasource",
>                         "fontSize": "80%",
>                         "format": "Bps",
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 12,
>                             "y": 20
>                         },
>                         "id": 8,
>                         "interval": null,
>                         "legend": {
>                             "percentage": true,
>                             "percentageDecimals": null,
>                             "show": true,
>                             "values": true
>                         },
>                         "legendType": "Right side",
>                         "maxDataPoints": 3,
>                         "nullPointMode": "connected",
>                         "pieType": "donut",
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "instant": null,
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "title": "Average Rate of Bytes Transmitted",
>                         "type": "grafana-piechart-panel",
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Average Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 29
>                 },
>                 "id": 9,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Bandwidth HIstory",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 0,
>                     "y": 38
>                 },
>                 "id": 10,
>                 "legend": {
>                     "alignAsTable": false,
>                     "avg": false,
>                     "current": false,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": false,
>                     "min": false,
>                     "rightSide": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 12,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{workload}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Receive Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 12,
>                     "y": 38
>                 },
>                 "id": 11,
>                 "legend": {
>                     "alignAsTable": false,
>                     "avg": false,
>                     "current": false,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": false,
>                     "min": false,
>                     "rightSide": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 12,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{workload}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Transmit Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 39
>                 },
>                 "id": 12,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 0,
>                             "y": 40
>                         },
>                         "id": 13,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_receive_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 12,
>                             "y": 40
>                         },
>                         "id": 14,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Packets",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 40
>                 },
>                 "id": 15,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 0,
>                             "y": 41
>                         },
>                         "id": 16,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 12,
>                             "y": 41
>                         },
>                         "id": 17,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\", workload_type=\"$type\"}) by (workload))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{workload}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Errors",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "refresh": "30s",
>         "rows": [
> 
>         ],
>         "schemaVersion": 18,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "kube-system",
>                         "value": "kube-system"
>                     },
>                     "datasource": "$datasource",
>                     "definition": "label_values(container_network_receive_packets_total, namespace)",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(container_network_receive_packets_total, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "deployment",
>                         "value": "deployment"
>                     },
>                     "datasource": "$datasource",
>                     "definition": "label_values(mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\"}, workload_type)",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "type",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(mixin_pod_workload{namespace=~\"$namespace\", workload=~\".+\"}, workload_type)",
>                     "refresh": 1,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "resolution",
>                     "options": [
>                         {
>                             "selected": false,
>                             "text": "30s",
>                             "value": "30s"
>                         },
>                         {
>                             "selected": true,
>                             "text": "5m",
>                             "value": "5m"
>                         },
>                         {
>                             "selected": false,
>                             "text": "1h",
>                             "value": "1h"
>                         }
>                     ],
>                     "query": "30s,5m,1h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Networking / Namespace (Workload)",
>         "uid": "bbb2a765a623ae38130206c7d94a160f",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/node-cluster-rsrc-use.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/node-cluster-rsrc-use.yaml
0a1,962
> {{- /*
> Generated from 'node-cluster-rsrc-use' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.nodeExporter.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "node-cluster-rsrc-use" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   node-cluster-rsrc-use.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  instance:node_cpu_utilisation:rate1m{job=\"node-exporter\"}\n*\n  instance:node_num_cpu:sum{job=\"node-exporter\"}\n/ ignoring (instance) group_left\n  sum without (instance) (instance:node_num_cpu:sum{job=\"node-exporter\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  instance:node_load1_per_cpu:ratio{job=\"node-exporter\"}\n/ ignoring (instance) group_left\n  count without (instance) (instance:node_load1_per_cpu:ratio{job=\"node-exporter\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Saturation (load1 per CPU)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  instance:node_memory_utilisation:ratio{job=\"node-exporter\"}\n/ ignoring (instance) group_left\n  count without (instance) (instance:node_memory_utilisation:ratio{job=\"node-exporter\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance:node_vmstat_pgmajfault:rate1m{job=\"node-exporter\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Saturation (Major Page Faults)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "rps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
>                             {
>                                 "alias": "/ Receive/",
>                                 "stack": "A"
>                             },
>                             {
>                                 "alias": "/ Transmit/",
>                                 "stack": "B",
>                                 "transform": "negative-Y"
>                             }
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance:node_network_receive_bytes_excluding_lo:rate1m{job=\"node-exporter\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Receive",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "instance:node_network_transmit_bytes_excluding_lo:rate1m{job=\"node-exporter\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Transmit",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Net Utilisation (Bytes Receive/Transmit)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
>                             {
>                                 "alias": "/ Receive/",
>                                 "stack": "A"
>                             },
>                             {
>                                 "alias": "/ Transmit/",
>                                 "stack": "B",
>                                 "transform": "negative-Y"
>                             }
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance:node_network_receive_drop_excluding_lo:rate1m{job=\"node-exporter\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Receive",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "instance:node_network_transmit_drop_excluding_lo:rate1m{job=\"node-exporter\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} Transmit",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Net Saturation (Drops Receive/Transmit)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "rps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Network",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  instance_device:node_disk_io_time_seconds:rate1m{job=\"node-exporter\"}\n/ ignoring (instance, device) group_left\n  count without (instance, device) (instance_device:node_disk_io_time_seconds:rate1m{job=\"node-exporter\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{device}}`}}",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk IO Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  instance_device:node_disk_io_time_weighted_seconds:rate1m{job=\"node-exporter\"}\n/ ignoring (instance, device) group_left\n  count without (instance, device) (instance_device:node_disk_io_time_weighted_seconds:rate1m{job=\"node-exporter\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} {{`{{device}}`}}",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk IO Saturation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Disk IO",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  sum without (device) (\n    max without (fstype, mountpoint) (\n      node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\"} - node_filesystem_avail_bytes{job=\"node-exporter\", fstype!=\"\"}\n    )\n  ) \n/ ignoring (instance) group_left\n  sum without (instance, device) (\n    max without (fstype, mountpoint) (\n      node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\"}\n    )\n  )\n)  \n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "legendLink": "/dashboard/file/node-rsrc-use.json",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk Space Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Disk Space",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
> 
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "USE Method / Cluster",
>         "uid": "3e97d1d02672cdd0861f4c97c64f89b2",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/node-rsrc-use.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/node-rsrc-use.yaml
0a1,989
> {{- /*
> Generated from 'node-rsrc-use' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.nodeExporter.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "node-rsrc-use" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   node-rsrc-use.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance:node_cpu_utilisation:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Utilisation",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance:node_load1_per_cpu:ratio{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Saturation",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Saturation (Load1 per CPU)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "CPU",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance:node_memory_utilisation:ratio{job=\"node-exporter\", job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Memory",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance:node_vmstat_pgmajfault:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Major page faults",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Saturation (Major Page Faults)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Memory",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
>                             {
>                                 "alias": "/Receive/",
>                                 "stack": "A"
>                             },
>                             {
>                                 "alias": "/Transmit/",
>                                 "stack": "B",
>                                 "transform": "negative-Y"
>                             }
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance:node_network_receive_bytes_excluding_lo:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Receive",
>                                 "legendLink": null,
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "instance:node_network_transmit_bytes_excluding_lo:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Transmit",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Net Utilisation (Bytes Receive/Transmit)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "Bps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
>                             {
>                                 "alias": "/Receive/",
>                                 "stack": "A"
>                             },
>                             {
>                                 "alias": "/Transmit/",
>                                 "stack": "B",
>                                 "transform": "negative-Y"
>                             }
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance:node_network_receive_drop_excluding_lo:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Receive drops",
>                                 "legendLink": null,
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "instance:node_network_transmit_drop_excluding_lo:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Transmit drops",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Net Saturation (Drops Receive/Transmit)",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "rps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Net",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance_device:node_disk_io_time_seconds:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk IO Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "instance_device:node_disk_io_time_weighted_seconds:rate1m{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk IO Saturation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Disk IO",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": false,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "1 -\n(\n  max without (mountpoint, fstype) (node_filesystem_avail_bytes{job=\"node-exporter\", fstype!=\"\", instance=\"$instance\"})\n/\n  max without (mountpoint, fstype) (node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\", instance=\"$instance\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk Space Utilisation",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Disk Space",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
> 
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": "prod",
>                         "value": "prod"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "instance",
>                     "multi": false,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(up{job=\"node-exporter\"}, instance)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "USE Method / Node",
>         "uid": "fac67cfbe174d3ef53eb473d73d9212f",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/nodes.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/nodes.yaml
0a1,985
> {{- /*
> Generated from 'nodes' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "nodes" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   nodes.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  (1 - rate(node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\"}[$__interval]))\n/ ignoring(cpu) group_left\n  count without (cpu)( node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\"})\n)\n",
>                                 "format": "time_series",
>                                 "interval": "1m",
>                                 "intervalFactor": 5,
>                                 "legendFormat": "{{`{{cpu}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "percentunit",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": 1,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 0,
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "node_load1{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "1m load average",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "node_load5{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "5m load average",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "node_load15{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "15m load average",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "count(node_cpu_seconds_total{job=\"node-exporter\", instance=\"$instance\", mode=\"idle\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "logical cores",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Load Average",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 9,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  node_memory_MemTotal_bytes{job=\"node-exporter\", instance=\"$instance\"}\n-\n  node_memory_MemFree_bytes{job=\"node-exporter\", instance=\"$instance\"}\n-\n  node_memory_Buffers_bytes{job=\"node-exporter\", instance=\"$instance\"}\n-\n  node_memory_Cached_bytes{job=\"node-exporter\", instance=\"$instance\"}\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "memory used",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "node_memory_Buffers_bytes{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "memory buffers",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "node_memory_Cached_bytes{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "memory cached",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "node_memory_MemFree_bytes{job=\"node-exporter\", instance=\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "memory free",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(50, 172, 45, 0.97)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(245, 54, 54, 0.9)"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "percent",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": true,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "100 -\n(\n  node_memory_MemAvailable_bytes{job=\"node-exporter\", instance=\"$instance\"}\n/\n  node_memory_MemTotal_bytes{job=\"node-exporter\", instance=\"$instance\"}\n* 100\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "80, 90",
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 0,
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
>                             {
>                                 "alias": "/ read| written/",
>                                 "yaxis": 1
>                             },
>                             {
>                                 "alias": "/ io time/",
>                                 "yaxis": 2
>                             }
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(node_disk_read_bytes_total{job=\"node-exporter\", instance=\"$instance\", device=~\"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+\"}[$__interval])",
>                                 "format": "time_series",
>                                 "interval": "1m",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}} read",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "rate(node_disk_written_bytes_total{job=\"node-exporter\", instance=\"$instance\", device=~\"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+\"}[$__interval])",
>                                 "format": "time_series",
>                                 "interval": "1m",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}} written",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "rate(node_disk_io_time_seconds_total{job=\"node-exporter\", instance=\"$instance\", device=~\"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+\"}[$__interval])",
>                                 "format": "time_series",
>                                 "interval": "1m",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}} io time",
>                                 "refId": "C"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk I/O",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
>                             {
>                                 "alias": "used",
>                                 "color": "#E0B400"
>                             },
>                             {
>                                 "alias": "available",
>                                 "color": "#73BF69"
>                             }
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(\n  max by (device) (\n    node_filesystem_size_bytes{job=\"node-exporter\", instance=\"$instance\", fstype!=\"\"}\n  -\n    node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", fstype!=\"\"}\n  )\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "used",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum(\n  max by (device) (\n    node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", fstype!=\"\"}\n  )\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "available",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Disk Space Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 0,
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(node_network_receive_bytes_total{job=\"node-exporter\", instance=\"$instance\", device!=\"lo\"}[$__interval])",
>                                 "format": "time_series",
>                                 "interval": "1m",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Network Received",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 0,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(node_network_transmit_bytes_total{job=\"node-exporter\", instance=\"$instance\", device!=\"lo\"}[$__interval])",
>                                 "format": "time_series",
>                                 "interval": "1m",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{device}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Network Transmitted",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
> 
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(node_exporter_build_info{job=\"node-exporter\"}, instance)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Nodes",
>         "uid": "fa49a4706d07a042595b664c87fb33ea",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/persistentvolumesusage.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/persistentvolumesusage.yaml
0a1,571
> {{- /*
> Generated from 'persistentvolumesusage' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "persistentvolumesusage" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   persistentvolumesusage.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": true,
>                             "min": true,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": true
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 9,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  sum without(instance, node) (kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  sum without(instance, node) (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "Used Space",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum without(instance, node) (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "Free Space",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Volume Space Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(50, 172, 45, 0.97)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(245, 54, 54, 0.9)"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "percent",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": true,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "(\n  kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n  -\n  kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n)\n/\nkubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n* 100\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "80, 90",
>                         "title": "Volume Space Usage",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": true,
>                             "min": true,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": true
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 9,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum without(instance, node) (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "Used inodes",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "(\n  sum without(instance, node) (kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  sum without(instance, node) (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": " Free inodes",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Volume inodes Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "none",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "none",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "rgba(50, 172, 45, 0.97)",
>                             "rgba(237, 129, 40, 0.89)",
>                             "rgba(245, 54, 54, 0.9)"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "percent",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": true,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n/\nkubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"}\n* 100\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "80, 90",
>                         "title": "Volume inodes Usage",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kubelet_volume_stats_capacity_bytes, cluster)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\"}, namespace)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "PersistentVolumeClaim",
>                     "multi": false,
>                     "name": "volume",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", namespace=\"$namespace\"}, persistentvolumeclaim)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-7d",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Persistent Volumes",
>         "uid": "919b92a8e8041bd567af9edab12c840c",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/pod-total.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/pod-total.yaml
0a1,1186
> {{- /*
> Generated from 'pod-total' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "pod-total" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   pod-total.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
>                 {
>                     "builtIn": 1,
>                     "datasource": "-- Grafana --",
>                     "enable": true,
>                     "hide": true,
>                     "iconColor": "rgba(0, 211, 255, 1)",
>                     "name": "Annotations & Alerts",
>                     "type": "dashboard"
>                 }
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "panels": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 0
>                 },
>                 "id": 2,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Current Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "cacheTimeout": null,
>                 "colorBackground": false,
>                 "colorValue": false,
>                 "colors": [
>                     "#299c46",
>                     "rgba(237, 129, 40, 0.89)",
>                     "#d44a3a"
>                 ],
>                 "datasource": "$datasource",
>                 "decimals": 0,
>                 "format": "time_series",
>                 "gauge": {
>                     "maxValue": 100,
>                     "minValue": 0,
>                     "show": false,
>                     "thresholdLabels": false,
>                     "thresholdMarkers": true
>                 },
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 0,
>                     "y": 1
>                 },
>                 "height": 9,
>                 "id": 3,
>                 "interval": null,
>                 "links": [
> 
>                 ],
>                 "mappingType": 1,
>                 "mappingTypes": [
>                     {
>                         "name": "value to text",
>                         "value": 1
>                     },
>                     {
>                         "name": "range to text",
>                         "value": 2
>                     }
>                 ],
>                 "maxDataPoints": 100,
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "nullText": null,
>                 "options": {
>                     "fieldOptions": {
>                         "calcs": [
>                             "last"
>                         ],
>                         "defaults": {
>                             "max": 10000000000,
>                             "min": 0,
>                             "title": "$namespace: $pod",
>                             "unit": "Bps"
>                         },
>                         "mappings": [
> 
>                         ],
>                         "override": {
> 
>                         },
>                         "thresholds": [
>                             {
>                                 "color": "dark-green",
>                                 "index": 0,
>                                 "value": null
>                             },
>                             {
>                                 "color": "dark-yellow",
>                                 "index": 1,
>                                 "value": 5000000000
>                             },
>                             {
>                                 "color": "dark-red",
>                                 "index": 2,
>                                 "value": 7000000000
>                             }
>                         ],
>                         "values": false
>                     }
>                 },
>                 "postfix": "",
>                 "postfixFontSize": "50%",
>                 "prefix": "",
>                 "prefixFontSize": "50%",
>                 "rangeMaps": [
>                     {
>                         "from": "null",
>                         "text": "N/A",
>                         "to": "null"
>                     }
>                 ],
>                 "span": 12,
>                 "sparkline": {
>                     "fillColor": "rgba(31, 118, 189, 0.18)",
>                     "full": false,
>                     "lineColor": "rgb(31, 120, 193)",
>                     "show": false
>                 },
>                 "tableColumn": "",
>                 "targets": [
>                     {
>                         "expr": "sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution]))",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "",
>                         "refId": "A"
>                     }
>                 ],
>                 "thresholds": "",
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Current Rate of Bytes Received",
>                 "type": "gauge",
>                 "valueFontSize": "80%",
>                 "valueMaps": [
>                     {
>                         "op": "=",
>                         "text": "N/A",
>                         "value": "null"
>                     }
>                 ],
>                 "valueName": "current"
>             },
>             {
>                 "cacheTimeout": null,
>                 "colorBackground": false,
>                 "colorValue": false,
>                 "colors": [
>                     "#299c46",
>                     "rgba(237, 129, 40, 0.89)",
>                     "#d44a3a"
>                 ],
>                 "datasource": "$datasource",
>                 "decimals": 0,
>                 "format": "time_series",
>                 "gauge": {
>                     "maxValue": 100,
>                     "minValue": 0,
>                     "show": false,
>                     "thresholdLabels": false,
>                     "thresholdMarkers": true
>                 },
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 12,
>                     "y": 1
>                 },
>                 "height": 9,
>                 "id": 4,
>                 "interval": null,
>                 "links": [
> 
>                 ],
>                 "mappingType": 1,
>                 "mappingTypes": [
>                     {
>                         "name": "value to text",
>                         "value": 1
>                     },
>                     {
>                         "name": "range to text",
>                         "value": 2
>                     }
>                 ],
>                 "maxDataPoints": 100,
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "nullText": null,
>                 "options": {
>                     "fieldOptions": {
>                         "calcs": [
>                             "last"
>                         ],
>                         "defaults": {
>                             "max": 10000000000,
>                             "min": 0,
>                             "title": "$namespace: $pod",
>                             "unit": "Bps"
>                         },
>                         "mappings": [
> 
>                         ],
>                         "override": {
> 
>                         },
>                         "thresholds": [
>                             {
>                                 "color": "dark-green",
>                                 "index": 0,
>                                 "value": null
>                             },
>                             {
>                                 "color": "dark-yellow",
>                                 "index": 1,
>                                 "value": 5000000000
>                             },
>                             {
>                                 "color": "dark-red",
>                                 "index": 2,
>                                 "value": 7000000000
>                             }
>                         ],
>                         "values": false
>                     }
>                 },
>                 "postfix": "",
>                 "postfixFontSize": "50%",
>                 "prefix": "",
>                 "prefixFontSize": "50%",
>                 "rangeMaps": [
>                     {
>                         "from": "null",
>                         "text": "N/A",
>                         "to": "null"
>                     }
>                 ],
>                 "span": 12,
>                 "sparkline": {
>                     "fillColor": "rgba(31, 118, 189, 0.18)",
>                     "full": false,
>                     "lineColor": "rgb(31, 120, 193)",
>                     "show": false
>                 },
>                 "tableColumn": "",
>                 "targets": [
>                     {
>                         "expr": "sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution]))",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "",
>                         "refId": "A"
>                     }
>                 ],
>                 "thresholds": "",
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Current Rate of Bytes Transmitted",
>                 "type": "gauge",
>                 "valueFontSize": "80%",
>                 "valueMaps": [
>                     {
>                         "op": "=",
>                         "text": "N/A",
>                         "value": "null"
>                     }
>                 ],
>                 "valueName": "current"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 10
>                 },
>                 "id": 5,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 0,
>                     "y": 11
>                 },
>                 "id": 6,
>                 "legend": {
>                     "alignAsTable": false,
>                     "avg": false,
>                     "current": false,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": false,
>                     "min": false,
>                     "rightSide": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 12,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{pod}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Receive Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 12,
>                     "y": 11
>                 },
>                 "id": 7,
>                 "legend": {
>                     "alignAsTable": false,
>                     "avg": false,
>                     "current": false,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": false,
>                     "min": false,
>                     "rightSide": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 12,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{pod}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Transmit Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 20
>                 },
>                 "id": 8,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 10,
>                             "w": 12,
>                             "x": 0,
>                             "y": 21
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 10,
>                             "w": 12,
>                             "x": 12,
>                             "y": 21
>                         },
>                         "id": 10,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Packets",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 21
>                 },
>                 "id": 11,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 10,
>                             "w": 12,
>                             "x": 0,
>                             "y": 32
>                         },
>                         "id": 12,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_receive_packets_dropped_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 10,
>                             "w": 12,
>                             "x": 12,
>                             "y": 32
>                         },
>                         "id": 13,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Errors",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "refresh": "30s",
>         "rows": [
> 
>         ],
>         "schemaVersion": 18,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": ".+",
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "kube-system",
>                         "value": "kube-system"
>                     },
>                     "datasource": "$datasource",
>                     "definition": "label_values(container_network_receive_packets_total, namespace)",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(container_network_receive_packets_total, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": ".+",
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "",
>                         "value": ""
>                     },
>                     "datasource": "$datasource",
>                     "definition": "label_values(container_network_receive_packets_total{namespace=~\"$namespace\"}, pod)",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "pod",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(container_network_receive_packets_total{namespace=~\"$namespace\"}, pod)",
>                     "refresh": 1,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "resolution",
>                     "options": [
>                         {
>                             "selected": false,
>                             "text": "30s",
>                             "value": "30s"
>                         },
>                         {
>                             "selected": true,
>                             "text": "5m",
>                             "value": "5m"
>                         },
>                         {
>                             "selected": false,
>                             "text": "1h",
>                             "value": "1h"
>                         }
>                     ],
>                     "query": "30s,5m,1h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Networking / Pod",
>         "uid": "7a18067ce943a40ae25454675c19ff5c",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/pods.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/pods.yaml
0a1,678
> {{- /*
> Generated from 'pods' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "pods" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   pods.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
>                 {
>                     "builtIn": 1,
>                     "datasource": "$datasource",
>                     "enable": true,
>                     "expr": "time() == BOOL timestamp(rate(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[2m]) > 0)",
>                     "hide": false,
>                     "iconColor": "rgba(215, 44, 44, 1)",
>                     "name": "Restarts",
>                     "showIn": 0,
>                     "tags": [
>                         "restart"
>                     ],
>                     "type": "rows"
>                 }
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum by(container) (container_memory_usage_bytes{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container=~\"$container\", container!=\"POD\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Current: {{`{{ container }}`}}",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum by(container) (kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Requested: {{`{{ container }}`}}",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum by(container) (kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Limit: {{`{{ container }}`}}",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "sum by(container) (container_memory_cache{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\", container=~\"$container\", container!=\"POD\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Cache: {{`{{ container }}`}}",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum by (container) (irate(container_cpu_usage_seconds_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", image!=\"\", pod=\"$pod\", container=~\"$container\", container!=\"POD\"}[4m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Current: {{`{{ container }}`}}",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum by(container) (kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Requested: {{`{{ container }}`}}",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum by(container) (kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Limit: {{`{{ container }}`}}",
>                                 "refId": "C"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU Usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum by (pod) (irate(container_network_receive_bytes_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[4m])))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "RX: {{`{{ pod }}`}}",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sort_desc(sum by (pod) (irate(container_network_transmit_bytes_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[4m])))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "TX: {{`{{ pod }}`}}",
>                                 "refId": "B"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Network I/O",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "legend": {
>                             "alignAsTable": true,
>                             "avg": true,
>                             "current": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": true,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max by (container) (kube_pod_container_status_restarts_total{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container=~\"$container\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Restarts: {{`{{ container }}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Total Restarts Per Container",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info, cluster)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Pod",
>                     "multi": false,
>                     "name": "pod",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_info{cluster=\"$cluster\", namespace=~\"$namespace\"}, pod)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": "Container",
>                     "multi": false,
>                     "name": "container",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_container_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}, container)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Pods",
>         "uid": "ab4f13a9892a76a4d21ce8c2445bf4ea",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/prometheus-remote-write.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/prometheus-remote-write.yaml
0a1,1398
> {{- /*
> Generated from 'prometheus-remote-write' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.prometheus.prometheusSpec.remoteWriteDashboards }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "prometheus-remote-write" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   prometheus-remote-write.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  prometheus_remote_storage_highest_timestamp_in_seconds{cluster=~\"$cluster\", instance=~\"$instance\"} \n-  \n  ignoring(queue) group_right(instance) prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\"}\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Highest Timestamp In vs. Highest Timestamp Sent",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "(\n  rate(prometheus_remote_storage_highest_timestamp_in_seconds{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])  \n- \n  ignoring (queue) group_right(instance) rate(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])\n)\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate[5m]",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Timestamps",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(\n  prometheus_remote_storage_samples_in_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])\n- \n  ignoring(queue) group_right(instance) rate(prometheus_remote_storage_succeeded_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m]) \n- \n  rate(prometheus_remote_storage_dropped_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate, in vs. succeeded or dropped [5m]",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Samples",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "minSpan": 6,
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": "queue",
>                         "seriesOverrides": [
>                             {
>                                 "alias": "/max_shards/",
>                                 "yaxis": 2
>                             }
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "prometheus_remote_storage_shards_max{cluster=~\"$cluster\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "max_shards:{{`{{queue}}`}}",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "prometheus_remote_storage_shards_min{cluster=~\"$cluster\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "min_shards:{{`{{queue}}`}}",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "prometheus_remote_storage_shards_desired{cluster=~\"$cluster\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "desired_shards:{{`{{queue}}`}}",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "prometheus_remote_storage_shards{cluster=~\"$cluster\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "current_shards:{{`{{queue}}`}}",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Shards: $queue",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Shards",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": "queue",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "prometheus_remote_storage_shard_capacity{cluster=~\"$cluster\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Shard Capacity: $queue",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": "queue",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "prometheus_remote_storage_pending_samples{cluster=~\"$cluster\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Pending Samples: $queue",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Shard Details",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "prometheus_tsdb_wal_segment_current{cluster=~\"$cluster\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "TSDB Current Segment",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "none",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "prometheus_wal_watcher_current_segment{cluster=~\"$cluster\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Remote Write Current Segment",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "none",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Segments",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 10,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 3,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(prometheus_remote_storage_dropped_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Dropped Samples",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 11,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 3,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(prometheus_remote_storage_failed_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Failed Samples",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 12,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 3,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(prometheus_remote_storage_retried_samples_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Retried Samples",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 13,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 3,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(prometheus_remote_storage_enqueue_retries_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{cluster}}`}}:{{`{{instance}}`}}-{{`{{queue}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Enqueue Retries",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Misc. Rates",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
> 
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": {
>                             "selected": true,
>                             "text": "All",
>                             "value": "$__all"
>                         },
>                         "value": {
>                             "selected": true,
>                             "text": "All",
>                             "value": "$__all"
>                         }
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(prometheus_build_info, instance)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": {
>                             "selected": true,
>                             "text": "All",
>                             "value": "$__all"
>                         },
>                         "value": {
>                             "selected": true,
>                             "text": "All",
>                             "value": "$__all"
>                         }
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_pod_container_info{image=~\".*prometheus.*\"}, cluster)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "text": {
>                             "selected": true,
>                             "text": "All",
>                             "value": "$__all"
>                         },
>                         "value": {
>                             "selected": true,
>                             "text": "All",
>                             "value": "$__all"
>                         }
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "queue",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(prometheus_remote_storage_shards, queue)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-6h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "browser",
>         "title": "Prometheus Remote Write",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/prometheus.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/prometheus.yaml
0a1,1220
> {{- /*
> Generated from 'prometheus' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "prometheus" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   prometheus.json: |-
>     {
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "links": [
> 
>         ],
>         "refresh": "10s",
>         "rows": [
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 1,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "styles": [
>                             {
>                                 "alias": "Time",
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "pattern": "Time",
>                                 "type": "hidden"
>                             },
>                             {
>                                 "alias": "Count",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #A",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "hidden",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Uptime",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "Value #B",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Instance",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "instance",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Job",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "job",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "Version",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "link": false,
>                                 "linkTooltip": "Drill down",
>                                 "linkUrl": "",
>                                 "pattern": "version",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "number",
>                                 "unit": "short"
>                             },
>                             {
>                                 "alias": "",
>                                 "colorMode": null,
>                                 "colors": [
> 
>                                 ],
>                                 "dateFormat": "YYYY-MM-DD HH:mm:ss",
>                                 "decimals": 2,
>                                 "pattern": "/.*/",
>                                 "thresholds": [
> 
>                                 ],
>                                 "type": "string",
>                                 "unit": "short"
>                             }
>                         ],
>                         "targets": [
>                             {
>                                 "expr": "count by (job, instance, version) (prometheus_build_info{job=~\"$job\", instance=~\"$instance\"})",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A",
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "max by (job, instance) (time() - process_start_time_seconds{job=~\"$job\", instance=~\"$instance\"})",
>                                 "format": "table",
>                                 "instant": true,
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "B",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Prometheus Stats",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "transform": "table",
>                         "type": "table",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Prometheus Stats",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 2,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(prometheus_target_sync_length_seconds_sum{job=~\"$job\",instance=~\"$instance\"}[5m])) by (scrape_job) * 1e3",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{scrape_job}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Target Sync",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ms",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 3,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(prometheus_sd_discovered_targets{job=~\"$job\",instance=~\"$instance\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "Targets",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Targets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Discovery",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "id": 4,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(prometheus_target_interval_length_seconds_sum{job=~\"$job\",instance=~\"$instance\"}[5m]) / rate(prometheus_target_interval_length_seconds_count{job=~\"$job\",instance=~\"$instance\"}[5m]) * 1e3",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{interval}}`}} configured",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Average Scrape Interval Duration",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ms",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 5,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum by (job) (rate(prometheus_target_scrapes_exceeded_sample_limit_total[1m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "exceeded sample limit: {{`{{job}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum by (job) (rate(prometheus_target_scrapes_sample_duplicate_timestamp_total[1m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "duplicate timestamp: {{`{{job}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum by (job) (rate(prometheus_target_scrapes_sample_out_of_bounds_total[1m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "out of bounds: {{`{{job}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             },
>                             {
>                                 "expr": "sum by (job) (rate(prometheus_target_scrapes_sample_out_of_order_total[1m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "out of order: {{`{{job}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Scrape failures",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 6,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(prometheus_tsdb_head_samples_appended_total{job=~\"$job\",instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{job}}`}} {{`{{instance}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Appended Samples",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Retrieval",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 7,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "prometheus_tsdb_head_series{job=~\"$job\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{job}}`}} {{`{{instance}}`}} head series",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Head Series",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 8,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "prometheus_tsdb_head_chunks{job=~\"$job\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{job}}`}} {{`{{instance}}`}} head chunks",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Head Chunks",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Storage",
>                 "titleSize": "h6"
>             },
>             {
>                 "collapse": false,
>                 "height": "250px",
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 9,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(prometheus_engine_query_duration_seconds_count{job=~\"$job\",instance=~\"$instance\",slice=\"inner_eval\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{job}}`}} {{`{{instance}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Query Rate",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 10,
>                         "id": 10,
>                         "legend": {
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 0,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null as zero",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max by (slice) (prometheus_engine_query_duration_seconds{quantile=\"0.9\",job=~\"$job\",instance=~\"$instance\"}) * 1e3",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{slice}}`}}",
>                                 "legendLink": null,
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Stage Duration",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ms",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": false
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Query",
>                 "titleSize": "h6"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
> 
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "selected": true,
>                         "text": "All",
>                         "value": "$__all"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": "job",
>                     "multi": true,
>                     "name": "job",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(prometheus_build_info, job)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
>                         "selected": true,
>                         "text": "All",
>                         "value": "$__all"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": "instance",
>                     "multi": true,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(prometheus_build_info, instance)",
>                     "refresh": 1,
>                     "regex": "",
>                     "sort": 2,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "utc",
>         "title": "Prometheus",
>         "uid": "",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/proxy.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/proxy.yaml
0a1,1209
> {{- /*
> Generated from 'proxy' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.kubeProxy.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "proxy" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   proxy.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(up{job=\"kube-proxy\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Up",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 5,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(kubeproxy_sync_proxy_rules_duration_seconds_count{job=\"kube-proxy\", instance=~\"$instance\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "rate",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rules Sync Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 5,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99,rate(kubeproxy_sync_proxy_rules_duration_seconds_bucket{job=\"kube-proxy\", instance=~\"$instance\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rule Sync Latency 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(kubeproxy_network_programming_duration_seconds_count{job=\"kube-proxy\", instance=~\"$instance\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "rate",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Network Programming Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 6,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(kubeproxy_network_programming_duration_seconds_bucket{job=\"kube-proxy\", instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Network Programming Latency 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-proxy\", instance=~\"$instance\",code=~\"2..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "2xx",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-proxy\", instance=~\"$instance\",code=~\"3..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "3xx",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-proxy\", instance=~\"$instance\",code=~\"4..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "4xx",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-proxy\", instance=~\"$instance\",code=~\"5..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "5xx",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Kube API Request Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 8,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_latency_seconds_bucket{job=\"kube-proxy\",instance=~\"$instance\",verb=\"POST\"}[5m])) by (verb, url, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{verb}}`}} {{`{{url}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Post Request Latency 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_latency_seconds_bucket{job=\"kube-proxy\", instance=~\"$instance\", verb=\"GET\"}[5m])) by (verb, url, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{verb}}`}} {{`{{url}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Get Request Latency 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 10,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "process_resident_memory_bytes{job=\"kube-proxy\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 11,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(process_cpu_seconds_total{job=\"kube-proxy\",instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 12,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "go_goroutines{job=\"kube-proxy\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Goroutines",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kubeproxy_network_programming_duration_seconds_bucket{job=\"kube-proxy\"}, instance)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Proxy",
>         "uid": "632e265de029684c40b21cb76bca4f94",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/scheduler.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/scheduler.yaml
0a1,1056
> {{- /*
> Generated from 'scheduler' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled .Values.kubeScheduler.enabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "scheduler" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   scheduler.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 2,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(up{job=\"kube-scheduler\"})",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Up",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "N/A",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "min"
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 5,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(scheduler_e2e_scheduling_duration_seconds_count{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])) by (instance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} e2e",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum(rate(scheduler_binding_duration_seconds_count{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])) by (instance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} binding",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum(rate(scheduler_scheduling_algorithm_duration_seconds_count{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])) by (instance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} scheduling algorithm",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "sum(rate(scheduler_volume_scheduling_duration_seconds_count{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])) by (instance)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} volume",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Scheduling Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 5,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} e2e",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} binding",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} scheduling algorithm",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(scheduler_volume_scheduling_duration_seconds_bucket{job=\"kube-scheduler\",instance=~\"$instance\"}[5m])) by (instance, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}} volume",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Scheduling latency 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-scheduler\", instance=~\"$instance\",code=~\"2..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "2xx",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-scheduler\", instance=~\"$instance\",code=~\"3..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "3xx",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-scheduler\", instance=~\"$instance\",code=~\"4..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "4xx",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "sum(rate(rest_client_requests_total{job=\"kube-scheduler\", instance=~\"$instance\",code=~\"5..\"}[5m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "5xx",
>                                 "refId": "D"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Kube API Request Rate",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "ops",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 8,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_latency_seconds_bucket{job=\"kube-scheduler\", instance=~\"$instance\", verb=\"POST\"}[5m])) by (verb, url, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{verb}}`}} {{`{{url}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Post Request Latency 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "legend": {
>                             "alignAsTable": "true",
>                             "avg": false,
>                             "current": "true",
>                             "max": false,
>                             "min": false,
>                             "rightSide": "true",
>                             "show": "true",
>                             "total": false,
>                             "values": "true"
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_latency_seconds_bucket{job=\"kube-scheduler\", instance=~\"$instance\", verb=\"GET\"}[5m])) by (verb, url, le))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{verb}}`}} {{`{{url}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Get Request Latency 99th Quantile",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "s",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "process_resident_memory_bytes{job=\"kube-scheduler\", instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Memory",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "rate(process_cpu_seconds_total{job=\"kube-scheduler\", instance=~\"$instance\"}[5m])",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "CPU usage",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "bytes",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 10,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 4,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "go_goroutines{job=\"kube-scheduler\",instance=~\"$instance\"}",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "{{`{{instance}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Goroutines",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "instance",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(process_cpu_seconds_total{job=\"kube-scheduler\"}, instance)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Scheduler",
>         "uid": "2e6b6a3b4bddf1427b3a55aa1311c656",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/statefulset.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/statefulset.yaml
0a1,924
> {{- /*
> Generated from 'statefulset' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "statefulset" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   statefulset.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
> 
>             ]
>         },
>         "editable": false,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "refresh": "",
>         "rows": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 2,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "cores",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 4,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": true
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$statefulset.*\"}[3m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "CPU",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 3,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "GB",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 4,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": true
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(container_memory_usage_bytes{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$statefulset.*\"}) / 1024^3",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Memory",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 4,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "Bps",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 4,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": true
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$statefulset.*\"}[3m])) + sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\",pod=~\"$statefulset.*\"}[3m]))",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Network",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "height": "100px",
>                 "panels": [
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 5,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "max(kube_statefulset_replicas{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", statefulset=\"$statefulset\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Desired Replicas",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 6,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "min(kube_statefulset_status_replicas_current{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", statefulset=\"$statefulset\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Replicas of current version",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 7,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "max(kube_statefulset_status_observed_generation{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", statefulset=\"$statefulset\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Observed Generation",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     },
>                     {
>                         "cacheTimeout": null,
>                         "colorBackground": false,
>                         "colorValue": false,
>                         "colors": [
>                             "#299c46",
>                             "rgba(237, 129, 40, 0.89)",
>                             "#d44a3a"
>                         ],
>                         "datasource": "$datasource",
>                         "format": "none",
>                         "gauge": {
>                             "maxValue": 100,
>                             "minValue": 0,
>                             "show": false,
>                             "thresholdLabels": false,
>                             "thresholdMarkers": true
>                         },
>                         "gridPos": {
> 
>                         },
>                         "id": 8,
>                         "interval": null,
>                         "links": [
> 
>                         ],
>                         "mappingType": 1,
>                         "mappingTypes": [
>                             {
>                                 "name": "value to text",
>                                 "value": 1
>                             },
>                             {
>                                 "name": "range to text",
>                                 "value": 2
>                             }
>                         ],
>                         "maxDataPoints": 100,
>                         "nullPointMode": "connected",
>                         "nullText": null,
>                         "postfix": "",
>                         "postfixFontSize": "50%",
>                         "prefix": "",
>                         "prefixFontSize": "50%",
>                         "rangeMaps": [
>                             {
>                                 "from": "null",
>                                 "text": "N/A",
>                                 "to": "null"
>                             }
>                         ],
>                         "span": 3,
>                         "sparkline": {
>                             "fillColor": "rgba(31, 118, 189, 0.18)",
>                             "full": false,
>                             "lineColor": "rgb(31, 120, 193)",
>                             "show": false
>                         },
>                         "tableColumn": "",
>                         "targets": [
>                             {
>                                 "expr": "max(kube_statefulset_metadata_generation{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "",
>                                 "refId": "A"
>                             }
>                         ],
>                         "thresholds": "",
>                         "title": "Metadata Generation",
>                         "tooltip": {
>                             "shared": false
>                         },
>                         "type": "singlestat",
>                         "valueFontSize": "80%",
>                         "valueMaps": [
>                             {
>                                 "op": "=",
>                                 "text": "0",
>                                 "value": "null"
>                             }
>                         ],
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 1,
>                         "gridPos": {
> 
>                         },
>                         "id": 9,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 1,
>                         "links": [
> 
>                         ],
>                         "nullPointMode": "null",
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "stack": false,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "max(kube_statefulset_replicas{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "replicas specified",
>                                 "refId": "A"
>                             },
>                             {
>                                 "expr": "max(kube_statefulset_status_replicas{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "replicas created",
>                                 "refId": "B"
>                             },
>                             {
>                                 "expr": "min(kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "ready",
>                                 "refId": "C"
>                             },
>                             {
>                                 "expr": "min(kube_statefulset_status_replicas_current{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "replicas of current version",
>                                 "refId": "D"
>                             },
>                             {
>                                 "expr": "min(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\", statefulset=\"$statefulset\", cluster=\"$cluster\", namespace=\"$namespace\"}) without (instance, pod)",
>                                 "format": "time_series",
>                                 "intervalFactor": 2,
>                                 "legendFormat": "updated",
>                                 "refId": "E"
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Replicas",
>                         "tooltip": {
>                             "shared": false,
>                             "sort": 0,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             },
>                             {
>                                 "format": "short",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": null,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": false,
>                 "title": "Dashboard Row",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "schemaVersion": 14,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [
> 
>                     ],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": "cluster",
>                     "multi": false,
>                     "name": "cluster",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_statefulset_metadata_generation, cluster)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Namespace",
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_statefulset_metadata_generation{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "current": {
> 
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": "Name",
>                     "multi": false,
>                     "name": "statefulset",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(kube_statefulset_metadata_generation{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\"}, statefulset)",
>                     "refresh": 2,
>                     "regex": "",
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / StatefulSets",
>         "uid": "a31c1f46e6f727cb37c0d731a7245005",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/dashboards-1.14/workload-total.yaml packages/monitoring/charts/templates/grafana/dashboards-1.14/workload-total.yaml
0a1,1164
> {{- /*
> Generated from 'workload-total' from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/grafana-dashboardDefinitions.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled }}
> apiVersion: v1
> kind: ConfigMap
> metadata:
>   namespace: {{ $.Release.Namespace }}
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" $) "workload-total" | trunc 63 | trimSuffix "-" }}
>   labels:
>     {{- if $.Values.grafana.sidecar.dashboards.label }}
>     {{ $.Values.grafana.sidecar.dashboards.label }}: "1"
>     {{- end }}
>     app: {{ template "prometheus-operator.name" $ }}-grafana
> {{ include "prometheus-operator.labels" $ | indent 4 }}
> data:
>   workload-total.json: |-
>     {
>         "__inputs": [
> 
>         ],
>         "__requires": [
> 
>         ],
>         "annotations": {
>             "list": [
>                 {
>                     "builtIn": 1,
>                     "datasource": "-- Grafana --",
>                     "enable": true,
>                     "hide": true,
>                     "iconColor": "rgba(0, 211, 255, 1)",
>                     "name": "Annotations & Alerts",
>                     "type": "dashboard"
>                 }
>             ]
>         },
>         "editable": true,
>         "gnetId": null,
>         "graphTooltip": 0,
>         "hideControls": false,
>         "id": null,
>         "links": [
> 
>         ],
>         "panels": [
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 0
>                 },
>                 "id": 2,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Current Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "breakpoint": "50%",
>                 "cacheTimeout": null,
>                 "combine": {
>                     "label": "Others",
>                     "threshold": 0
>                 },
>                 "datasource": "$datasource",
>                 "fontSize": "80%",
>                 "format": "Bps",
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 0,
>                     "y": 1
>                 },
>                 "id": 3,
>                 "interval": null,
>                 "legend": {
>                     "percentage": true,
>                     "percentageDecimals": null,
>                     "show": true,
>                     "values": true
>                 },
>                 "legendType": "Right side",
>                 "maxDataPoints": 3,
>                 "nullPointMode": "connected",
>                 "pieType": "donut",
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{pod}}`}}",
>                         "refId": "A"
>                     }
>                 ],
>                 "title": "Current Rate of Bytes Received",
>                 "type": "grafana-piechart-panel",
>                 "valueName": "current"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "breakpoint": "50%",
>                 "cacheTimeout": null,
>                 "combine": {
>                     "label": "Others",
>                     "threshold": 0
>                 },
>                 "datasource": "$datasource",
>                 "fontSize": "80%",
>                 "format": "Bps",
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 12,
>                     "y": 1
>                 },
>                 "id": 4,
>                 "interval": null,
>                 "legend": {
>                     "percentage": true,
>                     "percentageDecimals": null,
>                     "show": true,
>                     "values": true
>                 },
>                 "legendType": "Right side",
>                 "maxDataPoints": 3,
>                 "nullPointMode": "connected",
>                 "pieType": "donut",
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                         "format": "time_series",
>                         "instant": null,
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{pod}}`}}",
>                         "refId": "A"
>                     }
>                 ],
>                 "title": "Current Rate of Bytes Transmitted",
>                 "type": "grafana-piechart-panel",
>                 "valueName": "current"
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 10
>                 },
>                 "id": 5,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "breakpoint": "50%",
>                         "cacheTimeout": null,
>                         "combine": {
>                             "label": "Others",
>                             "threshold": 0
>                         },
>                         "datasource": "$datasource",
>                         "fontSize": "80%",
>                         "format": "Bps",
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 0,
>                             "y": 11
>                         },
>                         "id": 6,
>                         "interval": null,
>                         "legend": {
>                             "percentage": true,
>                             "percentageDecimals": null,
>                             "show": true,
>                             "values": true
>                         },
>                         "legendType": "Right side",
>                         "maxDataPoints": 3,
>                         "nullPointMode": "connected",
>                         "pieType": "donut",
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "instant": null,
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "title": "Average Rate of Bytes Received",
>                         "type": "grafana-piechart-panel",
>                         "valueName": "current"
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "breakpoint": "50%",
>                         "cacheTimeout": null,
>                         "combine": {
>                             "label": "Others",
>                             "threshold": 0
>                         },
>                         "datasource": "$datasource",
>                         "fontSize": "80%",
>                         "format": "Bps",
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 12,
>                             "y": 11
>                         },
>                         "id": 7,
>                         "interval": null,
>                         "legend": {
>                             "percentage": true,
>                             "percentageDecimals": null,
>                             "show": true,
>                             "values": true
>                         },
>                         "legendType": "Right side",
>                         "maxDataPoints": 3,
>                         "nullPointMode": "connected",
>                         "pieType": "donut",
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "instant": null,
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A"
>                             }
>                         ],
>                         "title": "Average Rate of Bytes Transmitted",
>                         "type": "grafana-piechart-panel",
>                         "valueName": "current"
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Average Bandwidth",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": false,
>                 "collapsed": false,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 11
>                 },
>                 "id": 8,
>                 "panels": [
> 
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Bandwidth HIstory",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 0,
>                     "y": 12
>                 },
>                 "id": 9,
>                 "legend": {
>                     "alignAsTable": false,
>                     "avg": false,
>                     "current": false,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": false,
>                     "min": false,
>                     "rightSide": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 12,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{pod}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Receive Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "aliasColors": {
> 
>                 },
>                 "bars": false,
>                 "dashLength": 10,
>                 "dashes": false,
>                 "datasource": "$datasource",
>                 "fill": 2,
>                 "gridPos": {
>                     "h": 9,
>                     "w": 12,
>                     "x": 12,
>                     "y": 12
>                 },
>                 "id": 10,
>                 "legend": {
>                     "alignAsTable": false,
>                     "avg": false,
>                     "current": false,
>                     "hideEmpty": true,
>                     "hideZero": true,
>                     "max": false,
>                     "min": false,
>                     "rightSide": false,
>                     "show": true,
>                     "total": false,
>                     "values": false
>                 },
>                 "lines": true,
>                 "linewidth": 2,
>                 "links": [
> 
>                 ],
>                 "minSpan": 12,
>                 "nullPointMode": "connected",
>                 "paceLength": 10,
>                 "percentage": false,
>                 "pointradius": 5,
>                 "points": false,
>                 "renderer": "flot",
>                 "repeat": null,
>                 "seriesOverrides": [
> 
>                 ],
>                 "spaceLength": 10,
>                 "span": 12,
>                 "stack": true,
>                 "steppedLine": false,
>                 "targets": [
>                     {
>                         "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                         "format": "time_series",
>                         "intervalFactor": 1,
>                         "legendFormat": "{{`{{pod}}`}}",
>                         "refId": "A",
>                         "step": 10
>                     }
>                 ],
>                 "thresholds": [
> 
>                 ],
>                 "timeFrom": null,
>                 "timeShift": null,
>                 "title": "Transmit Bandwidth",
>                 "tooltip": {
>                     "shared": true,
>                     "sort": 2,
>                     "value_type": "individual"
>                 },
>                 "type": "graph",
>                 "xaxis": {
>                     "buckets": null,
>                     "mode": "time",
>                     "name": null,
>                     "show": true,
>                     "values": [
> 
>                     ]
>                 },
>                 "yaxes": [
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     },
>                     {
>                         "format": "Bps",
>                         "label": null,
>                         "logBase": 1,
>                         "max": null,
>                         "min": 0,
>                         "show": true
>                     }
>                 ]
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 21
>                 },
>                 "id": 11,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 0,
>                             "y": 22
>                         },
>                         "id": 12,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_receive_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 12,
>                             "y": 22
>                         },
>                         "id": 13,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Packets",
>                 "titleSize": "h6",
>                 "type": "row"
>             },
>             {
>                 "collapse": true,
>                 "collapsed": true,
>                 "gridPos": {
>                     "h": 1,
>                     "w": 24,
>                     "x": 0,
>                     "y": 22
>                 },
>                 "id": 14,
>                 "panels": [
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 0,
>                             "y": 23
>                         },
>                         "id": 15,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Received Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     },
>                     {
>                         "aliasColors": {
> 
>                         },
>                         "bars": false,
>                         "dashLength": 10,
>                         "dashes": false,
>                         "datasource": "$datasource",
>                         "fill": 2,
>                         "gridPos": {
>                             "h": 9,
>                             "w": 12,
>                             "x": 12,
>                             "y": 23
>                         },
>                         "id": 16,
>                         "legend": {
>                             "alignAsTable": false,
>                             "avg": false,
>                             "current": false,
>                             "hideEmpty": true,
>                             "hideZero": true,
>                             "max": false,
>                             "min": false,
>                             "rightSide": false,
>                             "show": true,
>                             "total": false,
>                             "values": false
>                         },
>                         "lines": true,
>                         "linewidth": 2,
>                         "links": [
> 
>                         ],
>                         "minSpan": 12,
>                         "nullPointMode": "connected",
>                         "paceLength": 10,
>                         "percentage": false,
>                         "pointradius": 5,
>                         "points": false,
>                         "renderer": "flot",
>                         "repeat": null,
>                         "seriesOverrides": [
> 
>                         ],
>                         "spaceLength": 10,
>                         "span": 12,
>                         "stack": true,
>                         "steppedLine": false,
>                         "targets": [
>                             {
>                                 "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\", workload_type=\"$type\"}) by (pod))\n",
>                                 "format": "time_series",
>                                 "intervalFactor": 1,
>                                 "legendFormat": "{{`{{pod}}`}}",
>                                 "refId": "A",
>                                 "step": 10
>                             }
>                         ],
>                         "thresholds": [
> 
>                         ],
>                         "timeFrom": null,
>                         "timeShift": null,
>                         "title": "Rate of Transmitted Packets Dropped",
>                         "tooltip": {
>                             "shared": true,
>                             "sort": 2,
>                             "value_type": "individual"
>                         },
>                         "type": "graph",
>                         "xaxis": {
>                             "buckets": null,
>                             "mode": "time",
>                             "name": null,
>                             "show": true,
>                             "values": [
> 
>                             ]
>                         },
>                         "yaxes": [
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             },
>                             {
>                                 "format": "pps",
>                                 "label": null,
>                                 "logBase": 1,
>                                 "max": null,
>                                 "min": 0,
>                                 "show": true
>                             }
>                         ]
>                     }
>                 ],
>                 "repeat": null,
>                 "repeatIteration": null,
>                 "repeatRowId": null,
>                 "showTitle": true,
>                 "title": "Errors",
>                 "titleSize": "h6",
>                 "type": "row"
>             }
>         ],
>         "refresh": "30s",
>         "rows": [
> 
>         ],
>         "schemaVersion": 18,
>         "style": "dark",
>         "tags": [
>             "kubernetes-mixin"
>         ],
>         "templating": {
>             "list": [
>                 {
>                     "current": {
>                         "text": "Prometheus",
>                         "value": "Prometheus"
>                     },
>                     "hide": 0,
>                     "label": null,
>                     "name": "datasource",
>                     "options": [],
>                     "query": "prometheus",
>                     "refresh": 1,
>                     "regex": "",
>                     "type": "datasource"
>                 },
>                 {
>                     "allValue": ".+",
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "kube-system",
>                         "value": "kube-system"
>                     },
>                     "datasource": "$datasource",
>                     "definition": "label_values(container_network_receive_packets_total, namespace)",
>                     "hide": 0,
>                     "includeAll": true,
>                     "label": null,
>                     "multi": false,
>                     "name": "namespace",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(container_network_receive_packets_total, namespace)",
>                     "refresh": 1,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "",
>                         "value": ""
>                     },
>                     "datasource": "$datasource",
>                     "definition": "label_values(mixin_pod_workload{namespace=~\"$namespace\"}, workload)",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "workload",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(mixin_pod_workload{namespace=~\"$namespace\"}, workload)",
>                     "refresh": 1,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "deployment",
>                         "value": "deployment"
>                     },
>                     "datasource": "$datasource",
>                     "definition": "label_values(mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\"}, workload_type)",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "type",
>                     "options": [
> 
>                     ],
>                     "query": "label_values(mixin_pod_workload{namespace=~\"$namespace\", workload=~\"$workload\"}, workload_type)",
>                     "refresh": 1,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 0,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "query",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 0,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "resolution",
>                     "options": [
>                         {
>                             "selected": false,
>                             "text": "30s",
>                             "value": "30s"
>                         },
>                         {
>                             "selected": true,
>                             "text": "5m",
>                             "value": "5m"
>                         },
>                         {
>                             "selected": false,
>                             "text": "1h",
>                             "value": "1h"
>                         }
>                     ],
>                     "query": "30s,5m,1h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 },
>                 {
>                     "allValue": null,
>                     "auto": false,
>                     "auto_count": 30,
>                     "auto_min": "10s",
>                     "current": {
>                         "text": "5m",
>                         "value": "5m"
>                     },
>                     "datasource": "$datasource",
>                     "hide": 2,
>                     "includeAll": false,
>                     "label": null,
>                     "multi": false,
>                     "name": "interval",
>                     "options": [
>                         {
>                             "selected": true,
>                             "text": "4h",
>                             "value": "4h"
>                         }
>                     ],
>                     "query": "4h",
>                     "refresh": 2,
>                     "regex": "",
>                     "skipUrlSync": false,
>                     "sort": 1,
>                     "tagValuesQuery": "",
>                     "tags": [
> 
>                     ],
>                     "tagsQuery": "",
>                     "type": "interval",
>                     "useTags": false
>                 }
>             ]
>         },
>         "time": {
>             "from": "now-1h",
>             "to": "now"
>         },
>         "timepicker": {
>             "refresh_intervals": [
>                 "5s",
>                 "10s",
>                 "30s",
>                 "1m",
>                 "5m",
>                 "15m",
>                 "30m",
>                 "1h",
>                 "2h",
>                 "1d"
>             ],
>             "time_options": [
>                 "5m",
>                 "15m",
>                 "1h",
>                 "6h",
>                 "12h",
>                 "24h",
>                 "2d",
>                 "7d",
>                 "30d"
>             ]
>         },
>         "timezone": "",
>         "title": "Kubernetes / Networking / Workload",
>         "uid": "728bf77cc1166d2f3133bf25846876cc",
>         "version": 0
>     }
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/grafana/servicemonitor.yaml packages/monitoring/charts/templates/grafana/servicemonitor.yaml
0a1,32
> {{- if and .Values.grafana.enabled .Values.grafana.serviceMonitor.selfMonitor }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-grafana
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-grafana
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   selector:
>     matchLabels:
>       app.kubernetes.io/name: grafana
>       app.kubernetes.io/instance: {{ $.Release.Name | quote }}
>   namespaceSelector:
>     matchNames:
>       - {{ $.Release.Namespace | quote }}
>   endpoints:
>   - port: {{ .Values.grafana.service.portName }}
>     {{- if .Values.grafana.serviceMonitor.interval }}
>     interval: {{ .Values.grafana.serviceMonitor.interval }}
>     {{- end }}
>     path: "/metrics"
> {{- if .Values.grafana.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.grafana.serviceMonitor.metricRelabelings | indent 6) . }}
> {{- end }}
> {{- if .Values.grafana.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.grafana.serviceMonitor.relabelings | indent 6 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/additionalAlertRelabelConfigs.yaml packages/monitoring/charts/templates/prometheus/additionalAlertRelabelConfigs.yaml
0a1,16
> {{- if and .Values.prometheus.enabled .Values.prometheus.prometheusSpec.additionalAlertRelabelConfigs }}
> apiVersion: v1
> kind: Secret
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus-am-relabel-confg
>   namespace: {{ $.Release.Namespace }}
> {{- if .Values.prometheus.prometheusSpec.additionalPrometheusSecretsAnnotations }}
>   annotations:
> {{ toYaml .Values.prometheus.prometheusSpec.additionalPrometheusSecretsAnnotations | indent 4 }}
> {{- end }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus-am-relabel-confg
> {{ include "prometheus-operator.labels" . | indent 4 }}
> data:
>   additional-alert-relabel-configs.yaml: {{ toYaml .Values.prometheus.prometheusSpec.additionalAlertRelabelConfigs | b64enc | quote }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/additionalAlertmanagerConfigs.yaml packages/monitoring/charts/templates/prometheus/additionalAlertmanagerConfigs.yaml
0a1,16
> {{- if and .Values.prometheus.enabled .Values.prometheus.prometheusSpec.additionalAlertManagerConfigs }}
> apiVersion: v1
> kind: Secret
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus-am-confg
>   namespace: {{ $.Release.Namespace }}
> {{- if .Values.prometheus.prometheusSpec.additionalPrometheusSecretsAnnotations }}
>   annotations:
> {{ toYaml .Values.prometheus.prometheusSpec.additionalPrometheusSecretsAnnotations | indent 4 }}
> {{- end }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus-am-confg
> {{ include "prometheus-operator.labels" . | indent 4 }}
> data:
>   additional-alertmanager-configs.yaml: {{ toYaml .Values.prometheus.prometheusSpec.additionalAlertManagerConfigs | b64enc | quote }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/additionalPrometheusRules.yaml packages/monitoring/charts/templates/prometheus/additionalPrometheusRules.yaml
0a1,40
> {{- if or .Values.additionalPrometheusRules .Values.additionalPrometheusRulesMap}}
> apiVersion: v1
> kind: List
> items:
> {{- if .Values.additionalPrometheusRulesMap }}
> {{- range $prometheusRuleName, $prometheusRule := .Values.additionalPrometheusRulesMap }}
>   - apiVersion: monitoring.coreos.com/v1
>     kind: PrometheusRule
>     metadata:
>       name: {{ template "prometheus-operator.name" $ }}-{{ $prometheusRuleName }}
>       namespace: {{ $.Release.Namespace }}
>       labels:
>         app: {{ template "prometheus-operator.name" $ }}
> {{ include "prometheus-operator.labels" $ | indent 8 }}
>     {{- if $prometheusRule.additionalLabels }}
> {{ toYaml $prometheusRule.additionalLabels | indent 8 }}
>     {{- end }}
>     spec:
>       groups:
> {{ toYaml $prometheusRule.groups| indent 8 }}
> {{- end }}
> {{- else }}
> {{- range .Values.additionalPrometheusRules }}
>   - apiVersion: monitoring.coreos.com/v1
>     kind: PrometheusRule
>     metadata:
>       name: {{ template "prometheus-operator.name" $ }}-{{ .name }}
>       namespace: {{ $.Release.Namespace }}
>       labels:
>         app: {{ template "prometheus-operator.name" $ }}
> {{ include "prometheus-operator.labels" $ | indent 8 }}
>     {{- if .additionalLabels }}
> {{ toYaml .additionalLabels | indent 8 }}
>     {{- end }}
>     spec:
>       groups:
> {{ toYaml .groups| indent 8 }}
> {{- end }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/additionalScrapeConfigs.yaml packages/monitoring/charts/templates/prometheus/additionalScrapeConfigs.yaml
0a1,16
> {{- if and .Values.prometheus.enabled .Values.prometheus.prometheusSpec.additionalScrapeConfigs }}
> apiVersion: v1
> kind: Secret
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus-scrape-confg
>   namespace: {{ .Release.Namespace }}
> {{- if .Values.prometheus.prometheusSpec.additionalPrometheusSecretsAnnotations }}
>   annotations:
> {{ toYaml .Values.prometheus.prometheusSpec.additionalPrometheusSecretsAnnotations | indent 4 }}
> {{- end }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus-scrape-confg
> {{ include "prometheus-operator.labels" . | indent 4 }}
> data:
>   additional-scrape-configs.yaml: {{ toYaml .Values.prometheus.prometheusSpec.additionalScrapeConfigs | b64enc | quote }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/clusterrole.yaml packages/monitoring/charts/templates/prometheus/clusterrole.yaml
0a1,36
> {{- if and .Values.prometheus.enabled .Values.global.rbac.create }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> rules:
> - apiGroups:
>   - ""
>   resources:
>   - nodes/metrics
>   verbs:
>   - get
>   - list
>   - watch
> # This permission are not in the prometheus-operator repo
> # they're grabbed from https://github.com/prometheus/prometheus/blob/master/documentation/examples/rbac-setup.yml
> - apiGroups: [""]
>   resources:
>   - nodes
>   - nodes/proxy
>   - services
>   - endpoints
>   - pods
>   verbs: ["get", "list", "watch"]
> - apiGroups:
>   - extensions
>   - "networking.k8s.io"
>   resources:
>   - ingresses
>   verbs: ["get", "list", "watch"]
> - nonResourceURLs: ["/metrics"]
>   verbs: ["get"]
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/clusterrolebinding.yaml packages/monitoring/charts/templates/prometheus/clusterrolebinding.yaml
0a1,18
> {{- if and .Values.prometheus.enabled .Values.global.rbac.create }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus
> subjects:
>   - kind: ServiceAccount
>     name: {{ template "prometheus-operator.prometheus.serviceAccountName" . }}
>     namespace: {{ $.Release.Namespace }}
> {{- end }}
> 
diff -Nr packages/monitoring/charts-original/templates/prometheus/ingress.yaml packages/monitoring/charts/templates/prometheus/ingress.yaml
0a1,49
> {{- if and .Values.prometheus.enabled .Values.prometheus.ingress.enabled }}
> {{- $serviceName := printf "%s-%s" (include "prometheus-operator.fullname" .) "prometheus" }}
> {{- $servicePort := .Values.prometheus.service.port -}}
> {{- $routePrefix := list .Values.prometheus.prometheusSpec.routePrefix }}
> {{- $paths := .Values.prometheus.ingress.paths | default $routePrefix -}}
> apiVersion: extensions/v1beta1
> kind: Ingress
> metadata:
> {{- if .Values.prometheus.ingress.annotations }}
>   annotations:
> {{ toYaml .Values.prometheus.ingress.annotations | indent 4 }}
> {{- end }}
>   name: {{ $serviceName }}
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.prometheus.ingress.labels }}
> {{ toYaml .Values.prometheus.ingress.labels | indent 4 }}
> {{- end }}
> spec:
>   rules:
>   {{- if .Values.prometheus.ingress.hosts }}
>   {{- range $host := .Values.prometheus.ingress.hosts }}
>     - host: {{ tpl $host $ }}
>       http:
>         paths:
>   {{- range $p := $paths }}
>           - path: {{ tpl $p $ }}
>             backend:
>               serviceName: {{ $serviceName }}
>               servicePort: {{ $servicePort }}
>   {{- end -}}
>   {{- end -}}
>   {{- else }}
>     - http:
>         paths:
>   {{- range $p := $paths }}
>           - path: {{ tpl $p $ }}
>             backend:
>               serviceName: {{ $serviceName }}
>               servicePort: {{ $servicePort }}
>   {{- end -}}
>   {{- end -}}
>   {{- if .Values.prometheus.ingress.tls }}
>   tls:
> {{ toYaml .Values.prometheus.ingress.tls | indent 4 }}
>   {{- end -}}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/templates/prometheus/ingressperreplica.yaml packages/monitoring/charts/templates/prometheus/ingressperreplica.yaml
0a1,45
> {{- if and .Values.prometheus.enabled .Values.prometheus.servicePerReplica.enabled .Values.prometheus.ingressPerReplica.enabled }}
> {{- $count := .Values.prometheus.prometheusSpec.replicas | int -}}
> {{- $servicePort := .Values.prometheus.service.port -}}
> {{- $ingressValues := .Values.prometheus.ingressPerReplica -}}
> apiVersion: extensions/v1beta1
> kind: IngressList
> metadata:
>   name: {{ include "prometheus-operator.fullname" $ }}-prometheus-ingressperreplica
>   namespace: {{ $.Release.Namespace }}
> items:
> {{ range $i, $e := until $count }}
>   - apiVersion: extensions/v1beta1
>     kind: Ingress
>     metadata:
>       name: {{ include "prometheus-operator.fullname" $ }}-prometheus-{{ $i }}
>       namespace: {{ $.Release.Namespace }}
>       labels:
>         app: {{ include "prometheus-operator.name" $ }}-prometheus
> {{ include "prometheus-operator.labels" $ | indent 8 }}
>       {{- if $ingressValues.labels }}
>       {{ toYaml $ingressValues.labels | indent 8 }}
>       {{- end }}
>       {{- if $ingressValues.annotations }}
>       annotations:
> {{ toYaml $ingressValues.annotations | indent 8 }}
>       {{- end }}
>     spec:
>       rules:
>         - host: {{ $ingressValues.hostPrefix }}-{{ $i }}.{{ $ingressValues.hostDomain }}
>           http:
>             paths:
>       {{- range $p := $ingressValues.paths }}
>               - path: {{ tpl $p $ }}
>                 backend:
>                   serviceName: {{ include "prometheus-operator.fullname" $ }}-prometheus-{{ $i }}
>                   servicePort: {{ $servicePort }}
>       {{- end -}}
>       {{- if $ingressValues.tlsSecretName }}
>       tls:
>         - hosts:
>             - {{ $ingressValues.hostPrefix }}-{{ $i }}.{{ $ingressValues.hostDomain }}
>           secretName: {{ $ingressValues.tlsSecretName }}
>       {{- end }}
> {{- end -}}
> {{- end -}}
diff -Nr packages/monitoring/charts-original/templates/prometheus/podDisruptionBudget.yaml packages/monitoring/charts/templates/prometheus/podDisruptionBudget.yaml
0a1,21
> {{- if and .Values.prometheus.enabled .Values.prometheus.podDisruptionBudget.enabled }}
> apiVersion: policy/v1beta1
> kind: PodDisruptionBudget
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   {{- if .Values.prometheus.podDisruptionBudget.minAvailable }}
>   minAvailable: {{ .Values.prometheus.podDisruptionBudget.minAvailable }}
>   {{- end  }}
>   {{- if .Values.prometheus.podDisruptionBudget.maxUnavailable }}
>   maxUnavailable: {{ .Values.prometheus.podDisruptionBudget.maxUnavailable }}
>   {{- end  }}
>   selector:
>     matchLabels:
>       app: prometheus
>       prometheus: {{ template "prometheus-operator.fullname" . }}-prometheus
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/podmonitors.yaml packages/monitoring/charts/templates/prometheus/podmonitors.yaml
0a1,37
> {{- if and .Values.prometheus.enabled .Values.prometheus.additionalPodMonitors }}
> apiVersion: v1
> kind: List
> items:
> {{- range .Values.prometheus.additionalPodMonitors }}
>   - apiVersion: monitoring.coreos.com/v1
>     kind: PodMonitor
>     metadata:
>       name: {{ .name }}
>       namespace: {{ $.Release.Namespace }}
>       labels:
>         app: {{ template "prometheus-operator.name" $ }}-prometheus
> {{ include "prometheus-operator.labels" $ | indent 8 }}
>         {{- if .additionalLabels }}
> {{ toYaml .additionalLabels | indent 8 }}
>         {{- end }}
>     spec:
>       podMetricsEndpoints:
> {{ toYaml .podMetricsEndpoints | indent 8 }}
>     {{- if .jobLabel }}
>       jobLabel: {{ .jobLabel }}
>     {{- end }}
>     {{- if .namespaceSelector }}
>       namespaceSelector:
> {{ toYaml .namespaceSelector | indent 8 }}
>     {{- end }}
>       selector:
> {{ toYaml .selector | indent 8 }}
>     {{- if .podTargetLabels }}
>       podTargetLabels:
> {{ toYaml .podTargetLabels | indent 8 }}
>     {{- end }}
>     {{- if .sampleLimit }}
>       sampleLimit: {{ .sampleLimit }}
>     {{- end }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/prometheus.yaml packages/monitoring/charts/templates/prometheus/prometheus.yaml
0a1,234
> {{- if .Values.prometheus.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: Prometheus
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.prometheus.annotations }}
>   annotations:
> {{ toYaml .Values.prometheus.annotations | indent 4 }}
> {{- end }}
> spec:
>   alerting:
>     alertmanagers:
> {{- if .Values.prometheus.prometheusSpec.alertingEndpoints }}
> {{ toYaml .Values.prometheus.prometheusSpec.alertingEndpoints | indent 6 }}
> {{- else if .Values.alertmanager.enabled }}
>       - namespace: {{ $.Release.Namespace }}
>         name: {{ template "prometheus-operator.fullname" . }}-alertmanager
>         port: {{ .Values.alertmanager.alertmanagerSpec.portName }}
>         {{- if .Values.alertmanager.alertmanagerSpec.routePrefix }}
>         pathPrefix: "{{ .Values.alertmanager.alertmanagerSpec.routePrefix }}"
>         {{- end }}
>         apiVersion: {{ .Values.alertmanager.apiVersion }}
> {{- else }}
>       []
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.apiserverConfig }}
>   apiserverConfig:
> {{ toYaml .Values.prometheus.prometheusSpec.apiserverConfig | indent 4}}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.image }}
>   baseImage: {{ .Values.prometheus.prometheusSpec.image.repository }}
>   version: {{ .Values.prometheus.prometheusSpec.image.tag }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.externalLabels }}
>   externalLabels:
> {{ toYaml .Values.prometheus.prometheusSpec.externalLabels | indent 4}}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.prometheusExternalLabelNameClear }}
>   prometheusExternalLabelName: ""
> {{- else if .Values.prometheus.prometheusSpec.prometheusExternalLabelName }}
>   prometheusExternalLabelName: "{{ .Values.prometheus.prometheusSpec.prometheusExternalLabelName }}"
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.replicaExternalLabelNameClear }}
>   replicaExternalLabelName: ""
> {{- else if .Values.prometheus.prometheusSpec.replicaExternalLabelName }}
>   replicaExternalLabelName: "{{ .Values.prometheus.prometheusSpec.replicaExternalLabelName }}"
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.externalUrl }}
>   externalUrl: "{{ .Values.prometheus.prometheusSpec.externalUrl }}"
> {{- else if and .Values.prometheus.ingress.enabled .Values.prometheus.ingress.hosts }}
>   externalUrl: "http://{{ index .Values.prometheus.ingress.hosts 0 }}{{ .Values.prometheus.prometheusSpec.routePrefix }}"
> {{- else }}
>   externalUrl: http://{{ template "prometheus-operator.fullname" . }}-prometheus.{{ $.Release.Namespace }}:{{ .Values.prometheus.service.port }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.nodeSelector }}
>   nodeSelector:
> {{ toYaml .Values.prometheus.prometheusSpec.nodeSelector | indent 4 }}
> {{- end }}
>   paused: {{ .Values.prometheus.prometheusSpec.paused }}
>   replicas: {{ .Values.prometheus.prometheusSpec.replicas }}
>   logLevel:  {{ .Values.prometheus.prometheusSpec.logLevel }}
>   logFormat:  {{ .Values.prometheus.prometheusSpec.logFormat }}
>   listenLocal: {{ .Values.prometheus.prometheusSpec.listenLocal }}
>   enableAdminAPI: {{ .Values.prometheus.prometheusSpec.enableAdminAPI }}
> {{- if .Values.prometheus.prometheusSpec.scrapeInterval }}
>   scrapeInterval: {{ .Values.prometheus.prometheusSpec.scrapeInterval }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.evaluationInterval }}
>   evaluationInterval: {{ .Values.prometheus.prometheusSpec.evaluationInterval }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.resources }}
>   resources:
> {{ toYaml .Values.prometheus.prometheusSpec.resources | indent 4 }}
> {{- end }}
>   retention: {{ .Values.prometheus.prometheusSpec.retention | quote  }}
> {{- if .Values.prometheus.prometheusSpec.retentionSize }}
>   retentionSize: {{ .Values.prometheus.prometheusSpec.retentionSize | quote }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.walCompression }}
>   walCompression: {{ .Values.prometheus.prometheusSpec.walCompression }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.routePrefix }}
>   routePrefix: {{ .Values.prometheus.prometheusSpec.routePrefix | quote  }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.secrets }}
>   secrets:
> {{ toYaml .Values.prometheus.prometheusSpec.secrets | indent 4 }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.configMaps }}
>   configMaps:
> {{ toYaml .Values.prometheus.prometheusSpec.configMaps | indent 4 }}
> {{- end }}
>   serviceAccountName: {{ template "prometheus-operator.prometheus.serviceAccountName" . }}
> {{- if .Values.prometheus.prometheusSpec.serviceMonitorSelector }}
>   serviceMonitorSelector:
> {{ toYaml .Values.prometheus.prometheusSpec.serviceMonitorSelector | indent 4 }}
> {{ else if .Values.prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues  }}
>   serviceMonitorSelector:
>     matchLabels:
>       release: {{ $.Release.Name | quote }}
> {{ else }}
>   serviceMonitorSelector: {}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.serviceMonitorNamespaceSelector }}
>   serviceMonitorNamespaceSelector:
> {{ toYaml .Values.prometheus.prometheusSpec.serviceMonitorNamespaceSelector | indent 4 }}
> {{ else }}
>   serviceMonitorNamespaceSelector: {}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.podMonitorSelector }}
>   podMonitorSelector:
> {{ toYaml .Values.prometheus.prometheusSpec.podMonitorSelector | indent 4 }}
> {{ else if .Values.prometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValues  }}
>   podMonitorSelector:
>     matchLabels:
>       release: {{ $.Release.Name | quote }}
> {{ else }}
>   podMonitorSelector: {}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.podMonitorNamespaceSelector }}
>   podMonitorNamespaceSelector:
> {{ toYaml .Values.prometheus.prometheusSpec.podMonitorNamespaceSelector | indent 4 }}
> {{ else }}
>   podMonitorNamespaceSelector: {}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.remoteRead }}
>   remoteRead:
> {{ toYaml .Values.prometheus.prometheusSpec.remoteRead | indent 4 }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.remoteWrite }}
>   remoteWrite:
> {{ toYaml .Values.prometheus.prometheusSpec.remoteWrite | indent 4 }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.securityContext }}
>   securityContext:
> {{ toYaml .Values.prometheus.prometheusSpec.securityContext | indent 4 }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.ruleNamespaceSelector }}
>   ruleNamespaceSelector:
> {{ toYaml .Values.prometheus.prometheusSpec.ruleNamespaceSelector | indent 4 }}
> {{ else }}
>   ruleNamespaceSelector: {}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.ruleSelector }}
>   ruleSelector:
> {{ toYaml .Values.prometheus.prometheusSpec.ruleSelector | indent 4}}
> {{- else if .Values.prometheus.prometheusSpec.ruleSelectorNilUsesHelmValues }}
>   ruleSelector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}
>       release: {{ $.Release.Name | quote }}
> {{ else }}
>   ruleSelector: {}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.storageSpec }}
>   storage:
> {{ toYaml .Values.prometheus.prometheusSpec.storageSpec | indent 4 }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.podMetadata }}
>   podMetadata:
> {{ toYaml .Values.prometheus.prometheusSpec.podMetadata | indent 4 }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.query }}
>   query:
> {{ toYaml .Values.prometheus.prometheusSpec.query | indent 4}}
> {{- end }}
> {{- if or .Values.prometheus.prometheusSpec.podAntiAffinity .Values.prometheus.prometheusSpec.affinity }}
>   affinity:
> {{- if .Values.prometheus.prometheusSpec.affinity }}
> {{ toYaml .Values.prometheus.prometheusSpec.affinity | indent 4 }}
> {{- end }}
> {{- if eq .Values.prometheus.prometheusSpec.podAntiAffinity "hard" }}
>     podAntiAffinity:
>       requiredDuringSchedulingIgnoredDuringExecution:
>       - topologyKey: {{ .Values.prometheus.prometheusSpec.podAntiAffinityTopologyKey }}
>         labelSelector:
>           matchLabels:
>             app: prometheus
>             prometheus: {{ template "prometheus-operator.fullname" . }}-prometheus
> {{- else if eq .Values.prometheus.prometheusSpec.podAntiAffinity "soft" }}
>     podAntiAffinity:
>       preferredDuringSchedulingIgnoredDuringExecution:
>       - weight: 100
>         podAffinityTerm:
>           topologyKey: {{ .Values.prometheus.prometheusSpec.podAntiAffinityTopologyKey }}
>           labelSelector:
>             matchLabels:
>               app: prometheus
>               prometheus: {{ template "prometheus-operator.fullname" . }}-prometheus
> {{- end }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.tolerations }}
>   tolerations:
> {{ toYaml .Values.prometheus.prometheusSpec.tolerations | indent 4 }}
> {{- end }}
> {{- if .Values.global.imagePullSecrets }}
>   imagePullSecrets:
> {{ toYaml .Values.global.imagePullSecrets | indent 4 }}
> {{- end }}
> {{- if or .Values.prometheus.prometheusSpec.additionalScrapeConfigs .Values.prometheus.prometheusSpec.additionalScrapeConfigsExternal }}
>   additionalScrapeConfigs:
>     name: {{ template "prometheus-operator.fullname" . }}-prometheus-scrape-confg
>     key: additional-scrape-configs.yaml
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.additionalAlertManagerConfigs }}
>   additionalAlertManagerConfigs:
>     name: {{ template "prometheus-operator.fullname" . }}-prometheus-am-confg
>     key: additional-alertmanager-configs.yaml
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.additionalAlertRelabelConfigs }}
>   additionalAlertRelabelConfigs:
>     name: {{ template "prometheus-operator.fullname" . }}-prometheus-am-relabel-confg
>     key: additional-alert-relabel-configs.yaml
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.containers }}
>   containers:
> {{ toYaml .Values.prometheus.prometheusSpec.containers | indent 4 }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.priorityClassName }}
>   priorityClassName: {{ .Values.prometheus.prometheusSpec.priorityClassName }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.thanos }}
>   thanos:
> {{ toYaml .Values.prometheus.prometheusSpec.thanos | indent 4 }}
> {{- end }}
>   portName: {{ .Values.prometheus.prometheusSpec.portName }}
> {{- end }}
> {{- if .Values.prometheus.prometheusSpec.enforcedNamespaceLabel }}
>   enforcedNamespaceLabel: {{ .Values.prometheus.prometheusSpec.enforcedNamespaceLabel }}
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/psp-clusterrole.yaml packages/monitoring/charts/templates/prometheus/psp-clusterrole.yaml
0a1,20
> {{- if and .Values.prometheus.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> kind: ClusterRole
> apiVersion: rbac.authorization.k8s.io/v1
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus-psp
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> rules:
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if semverCompare "> 1.15.0-0" $kubeTargetVersion }}
> - apiGroups: ['policy']
> {{- else }}
> - apiGroups: ['extensions']
> {{- end }}
>   resources: ['podsecuritypolicies']
>   verbs:     ['use']
>   resourceNames:
>   - {{ template "prometheus-operator.fullname" . }}-prometheus
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/psp-clusterrolebinding.yaml packages/monitoring/charts/templates/prometheus/psp-clusterrolebinding.yaml
0a1,18
> {{- if and .Values.prometheus.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus-psp
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus-psp
> subjects:
>   - kind: ServiceAccount
>     name: {{ template "prometheus-operator.prometheus.serviceAccountName" . }}
>     namespace: {{ $.Release.Namespace }}
> {{- end }}
> 
diff -Nr packages/monitoring/charts-original/templates/prometheus/psp.yaml packages/monitoring/charts/templates/prometheus/psp.yaml
0a1,52
> {{- if and .Values.prometheus.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> apiVersion: policy/v1beta1
> kind: PodSecurityPolicy
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   privileged: false
>   # Required to prevent escalations to root.
>   # allowPrivilegeEscalation: false
>   # This is redundant with non-root + disallow privilege escalation,
>   # but we can provide it for defense in depth.
>   #requiredDropCapabilities:
>   #  - ALL
>   # Allow core volume types.
>   volumes:
>     - 'configMap'
>     - 'emptyDir'
>     - 'projected'
>     - 'secret'
>     - 'downwardAPI'
>     - 'persistentVolumeClaim'
>   hostNetwork: false
>   hostIPC: false
>   hostPID: false
>   runAsUser:
>     # Permits the container to run with root privileges as well.
>     rule: 'RunAsAny'
>   seLinux:
>     # This policy assumes the nodes are using AppArmor rather than SELinux.
>     rule: 'RunAsAny'
>   supplementalGroups:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   fsGroup:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   readOnlyRootFilesystem: false
> {{- if .Values.prometheus.podSecurityPolicy.allowedCapabilities }}
>   allowedCapabilities:
> {{ toYaml .Values.prometheus.podSecurityPolicy.allowedCapabilities | indent 4 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/alertmanager.rules.yaml packages/monitoring/charts/templates/prometheus/rules/alertmanager.rules.yaml
0a1,54
> {{- /*
> Generated from 'alertmanager.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.alertmanager }}
> {{- $operatorJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "operator" }}
> {{- $alertmanagerJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "alertmanager" }}
> {{- $namespace := .Release.Namespace }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "alertmanager.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: alertmanager.rules
>     rules:
>     - alert: AlertmanagerConfigInconsistent
>       annotations:
>         message: The configuration of the instances of the Alertmanager cluster `{{`{{$labels.service}}`}}` are out of sync.
>       expr: count_values("config_hash", alertmanager_config_hash{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"}) BY (service) / ON(service) GROUP_LEFT() label_replace(max(prometheus_operator_spec_replicas{job="{{ $operatorJob }}",namespace="{{ $namespace }}",controller="alertmanager"}) by (name, job, namespace, controller), "service", "$1", "name", "(.*)") != 1
>       for: 5m
>       labels:
>         severity: critical
>     - alert: AlertmanagerFailedReload
>       annotations:
>         message: Reloading Alertmanager's configuration has failed for {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod}}`}}.
>       expr: alertmanager_config_last_reload_successful{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"} == 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: AlertmanagerMembersInconsistent
>       annotations:
>         message: Alertmanager has not found all other members of the cluster.
>       expr: |-
>         alertmanager_cluster_members{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"}
>           != on (service) GROUP_LEFT()
>         count by (service) (alertmanager_cluster_members{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"})
>       for: 5m
>       labels:
>         severity: critical
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/etcd.yaml packages/monitoring/charts/templates/prometheus/rules/etcd.yaml
0a1,140
> {{- /*
> Generated from 'etcd' group from https://raw.githubusercontent.com/etcd-io/etcd/master/Documentation/op-guide/etcd3_alert.rules.yml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeEtcd.enabled .Values.defaultRules.rules.etcd }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "etcd" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: etcd
>     rules:
>     - alert: etcdInsufficientMembers
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": insufficient members ({{`{{ $value }}`}}).'
>       expr: sum(up{job=~".*etcd.*"} == bool 1) by (job) < ((count(up{job=~".*etcd.*"}) by (job) + 1) / 2)
>       for: 3m
>       labels:
>         severity: critical
>     - alert: etcdNoLeader
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": member {{`{{ $labels.instance }}`}} has no leader.'
>       expr: etcd_server_has_leader{job=~".*etcd.*"} == 0
>       for: 1m
>       labels:
>         severity: critical
>     - alert: etcdHighNumberOfLeaderChanges
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": instance {{`{{ $labels.instance }}`}} has seen {{`{{ $value }}`}} leader changes within the last hour.'
>       expr: rate(etcd_server_leader_changes_seen_total{job=~".*etcd.*"}[15m]) > 3
>       for: 15m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedGRPCRequests
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": {{`{{ $value }}`}}% of requests for {{`{{ $labels.grpc_method }}`}} failed on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         100 * sum(rate(grpc_server_handled_total{job=~".*etcd.*", grpc_code!="OK"}[5m])) BY (job, instance, grpc_service, grpc_method)
>           /
>         sum(rate(grpc_server_handled_total{job=~".*etcd.*"}[5m])) BY (job, instance, grpc_service, grpc_method)
>           > 1
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedGRPCRequests
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": {{`{{ $value }}`}}% of requests for {{`{{ $labels.grpc_method }}`}} failed on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         100 * sum(rate(grpc_server_handled_total{job=~".*etcd.*", grpc_code!="OK"}[5m])) BY (job, instance, grpc_service, grpc_method)
>           /
>         sum(rate(grpc_server_handled_total{job=~".*etcd.*"}[5m])) BY (job, instance, grpc_service, grpc_method)
>           > 5
>       for: 5m
>       labels:
>         severity: critical
>     - alert: etcdGRPCRequestsSlow
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": gRPC requests to {{`{{ $labels.grpc_method }}`}} are taking {{`{{ $value }}`}}s on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         histogram_quantile(0.99, sum(rate(grpc_server_handling_seconds_bucket{job=~".*etcd.*", grpc_type="unary"}[5m])) by (job, instance, grpc_service, grpc_method, le))
>         > 0.15
>       for: 10m
>       labels:
>         severity: critical
>     - alert: etcdMemberCommunicationSlow
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": member communication with {{`{{ $labels.To }}`}} is taking {{`{{ $value }}`}}s on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket{job=~".*etcd.*"}[5m]))
>         > 0.15
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedProposals
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": {{`{{ $value }}`}} proposal failures within the last hour on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: rate(etcd_server_proposals_failed_total{job=~".*etcd.*"}[15m]) > 5
>       for: 15m
>       labels:
>         severity: warning
>     - alert: etcdHighFsyncDurations
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": 99th percentile fync durations are {{`{{ $value }}`}}s on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=~".*etcd.*"}[5m]))
>         > 0.5
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighCommitDurations
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": 99th percentile commit durations {{`{{ $value }}`}}s on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket{job=~".*etcd.*"}[5m]))
>         > 0.25
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedHTTPRequests
>       annotations:
>         message: '{{`{{ $value }}`}}% of requests for {{`{{ $labels.method }}`}} failed on etcd instance {{`{{ $labels.instance }}`}}'
>       expr: |-
>         sum(rate(etcd_http_failed_total{job=~".*etcd.*", code!="404"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job=~".*etcd.*"}[5m]))
>         BY (method) > 0.01
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedHTTPRequests
>       annotations:
>         message: '{{`{{ $value }}`}}% of requests for {{`{{ $labels.method }}`}} failed on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         sum(rate(etcd_http_failed_total{job=~".*etcd.*", code!="404"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job=~".*etcd.*"}[5m]))
>         BY (method) > 0.05
>       for: 10m
>       labels:
>         severity: critical
>     - alert: etcdHTTPRequestsSlow
>       annotations:
>         message: etcd instance {{`{{ $labels.instance }}`}} HTTP requests to {{`{{ $labels.method }}`}} are slow.
>       expr: |-
>         histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m]))
>         > 0.15
>       for: 10m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/general.rules.yaml packages/monitoring/charts/templates/prometheus/rules/general.rules.yaml
0a1,50
> {{- /*
> Generated from 'general.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.general }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "general.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: general.rules
>     rules:
>     - alert: TargetDown
>       annotations:
>         message: '{{`{{ $value }}`}}% of the {{`{{ $labels.job }}`}} targets are down.'
>       expr: 100 * (count(up == 0) BY (job) / count(up) BY (job)) > 10
>       for: 10m
>       labels:
>         severity: warning
>     - alert: Watchdog
>       annotations:
>         message: 'This is an alert meant to ensure that the entire alerting pipeline is functional.
> 
>           This alert is always firing, therefore it should always be firing in Alertmanager
> 
>           and always fire against a receiver. There are integrations with various notification
> 
>           mechanisms that send a notification when this alert is not firing. For example the
> 
>           "DeadMansSnitch" integration in PagerDuty.
> 
>           '
>       expr: vector(1)
>       labels:
>         severity: none
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/k8s.rules.yaml packages/monitoring/charts/templates/prometheus/rules/k8s.rules.yaml
0a1,83
> {{- /*
> Generated from 'k8s.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.k8s }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "k8s.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: k8s.rules
>     rules:
>     - expr: sum(rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""}[5m])) by (namespace)
>       record: namespace:container_cpu_usage_seconds_total:sum_rate
>     - expr: sum(container_memory_usage_bytes{job="kubelet", image!="", container_name!=""}) by (namespace)
>       record: namespace:container_memory_usage_bytes:sum
>     - expr: |-
>         sum by (namespace, pod_name, container_name) (
>           rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""}[5m])
>         )
>       record: namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate
>     - expr: |-
>         sum by(namespace) (
>             kube_pod_container_resource_requests_memory_bytes{job="kube-state-metrics"}
>           * on (endpoint, instance, job, namespace, pod, service)
>             group_left(phase) (kube_pod_status_phase{phase=~"^(Pending|Running)$"} == 1)
>         )
>       record: namespace_name:kube_pod_container_resource_requests_memory_bytes:sum
>     - expr: |-
>         sum by (namespace) (
>             kube_pod_container_resource_requests_cpu_cores{job="kube-state-metrics"}
>           * on (endpoint, instance, job, namespace, pod, service)
>             group_left(phase) (kube_pod_status_phase{phase=~"^(Pending|Running)$"} == 1)
>         )
>       record: namespace_name:kube_pod_container_resource_requests_cpu_cores:sum
>     - expr: |-
>         sum(
>           label_replace(
>             label_replace(
>               kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"},
>               "replicaset", "$1", "owner_name", "(.*)"
>             ) * on(replicaset, namespace) group_left(owner_name) kube_replicaset_owner{job="kube-state-metrics"},
>             "workload", "$1", "owner_name", "(.*)"
>           )
>         ) by (namespace, workload, pod)
>       labels:
>         workload_type: deployment
>       record: mixin_pod_workload
>     - expr: |-
>         sum(
>           label_replace(
>             kube_pod_owner{job="kube-state-metrics", owner_kind="DaemonSet"},
>             "workload", "$1", "owner_name", "(.*)"
>           )
>         ) by (namespace, workload, pod)
>       labels:
>         workload_type: daemonset
>       record: mixin_pod_workload
>     - expr: |-
>         sum(
>           label_replace(
>             kube_pod_owner{job="kube-state-metrics", owner_kind="StatefulSet"},
>             "workload", "$1", "owner_name", "(.*)"
>           )
>         ) by (namespace, workload, pod)
>       labels:
>         workload_type: statefulset
>       record: mixin_pod_workload
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/kube-apiserver.rules.yaml packages/monitoring/charts/templates/prometheus/rules/kube-apiserver.rules.yaml
0a1,39
> {{- /*
> Generated from 'kube-apiserver.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeApiServer.enabled .Values.defaultRules.rules.kubeApiserver }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kube-apiserver.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kube-apiserver.rules
>     rules:
>     - expr: histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{job="apiserver"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.99'
>       record: cluster_quantile:apiserver_request_latencies:histogram_quantile
>     - expr: histogram_quantile(0.9, sum(rate(apiserver_request_latencies_bucket{job="apiserver"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.9'
>       record: cluster_quantile:apiserver_request_latencies:histogram_quantile
>     - expr: histogram_quantile(0.5, sum(rate(apiserver_request_latencies_bucket{job="apiserver"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.5'
>       record: cluster_quantile:apiserver_request_latencies:histogram_quantile
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/kube-prometheus-node-alerting.rules.yaml packages/monitoring/charts/templates/prometheus/rules/kube-prometheus-node-alerting.rules.yaml
0a1,41
> {{- /*
> Generated from 'kube-prometheus-node-alerting.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubePrometheusNodeAlerting }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kube-prometheus-node-alerting.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kube-prometheus-node-alerting.rules
>     rules:
>     - alert: NodeDiskRunningFull
>       annotations:
>         message: Device {{`{{ $labels.device }}`}} of node-exporter {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}} will be full within the next 24 hours.
>       expr: '(node:node_filesystem_usage: > 0.85) and (predict_linear(node:node_filesystem_avail:[6h], 3600 * 24) < 0)'
>       for: 30m
>       labels:
>         severity: warning
>     - alert: NodeDiskRunningFull
>       annotations:
>         message: Device {{`{{ $labels.device }}`}} of node-exporter {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}} will be full within the next 2 hours.
>       expr: '(node:node_filesystem_usage: > 0.85) and (predict_linear(node:node_filesystem_avail:[30m], 3600 * 2) < 0)'
>       for: 10m
>       labels:
>         severity: critical
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/kube-prometheus-node-recording.rules.yaml packages/monitoring/charts/templates/prometheus/rules/kube-prometheus-node-recording.rules.yaml
0a1,41
> {{- /*
> Generated from 'kube-prometheus-node-recording.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubePrometheusNodeRecording }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kube-prometheus-node-recording.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kube-prometheus-node-recording.rules
>     rules:
>     - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait"}[3m])) BY (instance)
>       record: instance:node_cpu:rate:sum
>     - expr: sum((node_filesystem_size_bytes{mountpoint="/"} - node_filesystem_free_bytes{mountpoint="/"})) BY (instance)
>       record: instance:node_filesystem_usage:sum
>     - expr: sum(rate(node_network_receive_bytes_total[3m])) BY (instance)
>       record: instance:node_network_receive_bytes:rate:sum
>     - expr: sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)
>       record: instance:node_network_transmit_bytes:rate:sum
>     - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait"}[5m])) WITHOUT (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total) BY (instance, cpu)) BY (instance)
>       record: instance:node_cpu:ratio
>     - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait"}[5m]))
>       record: cluster:node_cpu:sum_rate5m
>     - expr: cluster:node_cpu_seconds_total:rate5m / count(sum(node_cpu_seconds_total) BY (instance, cpu))
>       record: cluster:node_cpu:ratio
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/kube-scheduler.rules.yaml packages/monitoring/charts/templates/prometheus/rules/kube-scheduler.rules.yaml
0a1,63
> {{- /*
> Generated from 'kube-scheduler.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeScheduler.enabled .Values.defaultRules.rules.kubeScheduler }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kube-scheduler.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kube-scheduler.rules
>     rules:
>     - expr: histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.99'
>       record: cluster_quantile:scheduler_e2e_scheduling_latency:histogram_quantile
>     - expr: histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.99'
>       record: cluster_quantile:scheduler_scheduling_algorithm_latency:histogram_quantile
>     - expr: histogram_quantile(0.99, sum(rate(scheduler_binding_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.99'
>       record: cluster_quantile:scheduler_binding_latency:histogram_quantile
>     - expr: histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.9'
>       record: cluster_quantile:scheduler_e2e_scheduling_latency:histogram_quantile
>     - expr: histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.9'
>       record: cluster_quantile:scheduler_scheduling_algorithm_latency:histogram_quantile
>     - expr: histogram_quantile(0.9, sum(rate(scheduler_binding_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.9'
>       record: cluster_quantile:scheduler_binding_latency:histogram_quantile
>     - expr: histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.5'
>       record: cluster_quantile:scheduler_e2e_scheduling_latency:histogram_quantile
>     - expr: histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.5'
>       record: cluster_quantile:scheduler_scheduling_algorithm_latency:histogram_quantile
>     - expr: histogram_quantile(0.5, sum(rate(scheduler_binding_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
>       labels:
>         quantile: '0.5'
>       record: cluster_quantile:scheduler_binding_latency:histogram_quantile
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/kubernetes-absent.yaml packages/monitoring/charts/templates/prometheus/rules/kubernetes-absent.yaml
0a1,129
> {{- /*
> Generated from 'kubernetes-absent' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesAbsent }}
> {{- $operatorJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "operator" }}
> {{- $prometheusJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "prometheus" }}
> {{- $alertmanagerJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "alertmanager" }}
> {{- $namespace := .Release.Namespace }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-absent" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-absent
>     rules:
> {{- if .Values.alertmanager.enabled }}
>     - alert: AlertmanagerDown
>       annotations:
>         message: Alertmanager has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-alertmanagerdown
>       expr: absent(up{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeDns.enabled }}
>     - alert: CoreDNSDown
>       annotations:
>         message: CoreDNS has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-corednsdown
>       expr: absent(up{job="kube-dns"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeApiServer.enabled }}
>     - alert: KubeAPIDown
>       annotations:
>         message: KubeAPI has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapidown
>       expr: absent(up{job="apiserver"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeControllerManager.enabled }}
>     - alert: KubeControllerManagerDown
>       annotations:
>         message: KubeControllerManager has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecontrollermanagerdown
>       expr: absent(up{job="kube-controller-manager"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeScheduler.enabled }}
>     - alert: KubeSchedulerDown
>       annotations:
>         message: KubeScheduler has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeschedulerdown
>       expr: absent(up{job="kube-scheduler"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeStateMetrics.enabled }}
>     - alert: KubeStateMetricsDown
>       annotations:
>         message: KubeStateMetrics has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubestatemetricsdown
>       expr: absent(up{job="kube-state-metrics"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.prometheusOperator.kubeletService.enabled }}
>     - alert: KubeletDown
>       annotations:
>         message: Kubelet has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeletdown
>       expr: absent(up{job="kubelet"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.nodeExporter.enabled }}
>     - alert: NodeExporterDown
>       annotations:
>         message: NodeExporter has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodeexporterdown
>       expr: absent(up{job="node-exporter"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
>     - alert: PrometheusDown
>       annotations:
>         message: Prometheus has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-prometheusdown
>       expr: absent(up{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- if .Values.prometheusOperator.enabled }}
>     - alert: PrometheusOperatorDown
>       annotations:
>         message: PrometheusOperator has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-prometheusoperatordown
>       expr: absent(up{job="{{ $operatorJob }}",namespace="{{ $namespace }}"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/kubernetes-apps.yaml packages/monitoring/charts/templates/prometheus/rules/kubernetes-apps.yaml
0a1,161
> {{- /*
> Generated from 'kubernetes-apps' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeStateMetrics.enabled .Values.defaultRules.rules.kubernetesApps }}
> {{- $targetNamespace := .Values.defaultRules.appNamespacesTarget }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-apps" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-apps
>     rules:
>     - alert: KubePodCrashLooping
>       annotations:
>         message: Pod {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}} ({{`{{ $labels.container }}`}}) is restarting {{`{{ printf "%.2f" $value }}`}} times / 5 minutes.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepodcrashlooping
>       expr: rate(kube_pod_container_status_restarts_total{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[15m]) * 60 * 5 > 0
>       for: 1h
>       labels:
>         severity: critical
>     - alert: KubePodNotReady
>       annotations:
>         message: Pod {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}} has been in a non-ready state for longer than an hour.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepodnotready
>       expr: sum by (namespace, pod) (kube_pod_status_phase{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}", phase=~"Pending|Unknown"}) > 0
>       for: 1h
>       labels:
>         severity: critical
>     - alert: KubeDeploymentGenerationMismatch
>       annotations:
>         message: Deployment generation for {{`{{ $labels.namespace }}`}}/{{`{{ $labels.deployment }}`}} does not match, this indicates that the Deployment has failed but has not been rolled back.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedeploymentgenerationmismatch
>       expr: |-
>         kube_deployment_status_observed_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           !=
>         kube_deployment_metadata_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeDeploymentReplicasMismatch
>       annotations:
>         message: Deployment {{`{{ $labels.namespace }}`}}/{{`{{ $labels.deployment }}`}} has not matched the expected number of replicas for longer than an hour.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedeploymentreplicasmismatch
>       expr: |-
>         kube_deployment_spec_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           !=
>         kube_deployment_status_replicas_available{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>       for: 1h
>       labels:
>         severity: critical
>     - alert: KubeStatefulSetReplicasMismatch
>       annotations:
>         message: StatefulSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.statefulset }}`}} has not matched the expected number of replicas for longer than 15 minutes.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubestatefulsetreplicasmismatch
>       expr: |-
>         kube_statefulset_status_replicas_ready{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           !=
>         kube_statefulset_status_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeStatefulSetGenerationMismatch
>       annotations:
>         message: StatefulSet generation for {{`{{ $labels.namespace }}`}}/{{`{{ $labels.statefulset }}`}} does not match, this indicates that the StatefulSet has failed but has not been rolled back.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubestatefulsetgenerationmismatch
>       expr: |-
>         kube_statefulset_status_observed_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           !=
>         kube_statefulset_metadata_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeStatefulSetUpdateNotRolledOut
>       annotations:
>         message: StatefulSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.statefulset }}`}} update has not been rolled out.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubestatefulsetupdatenotrolledout
>       expr: |-
>         max without (revision) (
>           kube_statefulset_status_current_revision{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>             unless
>           kube_statefulset_status_update_revision{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>         )
>           *
>         (
>           kube_statefulset_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>             !=
>           kube_statefulset_status_replicas_updated{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>         )
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeDaemonSetRolloutStuck
>       annotations:
>         message: Only {{`{{ $value }}`}}% of the desired Pods of DaemonSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.daemonset }}`}} are scheduled and ready.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedaemonsetrolloutstuck
>       expr: |-
>         kube_daemonset_status_number_ready{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           /
>         kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} * 100 < 100
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeDaemonSetNotScheduled
>       annotations:
>         message: '{{`{{ $value }}`}} Pods of DaemonSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.daemonset }}`}} are not scheduled.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedaemonsetnotscheduled
>       expr: |-
>         kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           -
>         kube_daemonset_status_current_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} > 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: KubeDaemonSetMisScheduled
>       annotations:
>         message: '{{`{{ $value }}`}} Pods of DaemonSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.daemonset }}`}} are running where they are not supposed to run.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedaemonsetmisscheduled
>       expr: kube_daemonset_status_number_misscheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} > 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: KubeCronJobRunning
>       annotations:
>         message: CronJob {{`{{ $labels.namespace }}`}}/{{`{{ $labels.cronjob }}`}} is taking more than 1h to complete.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecronjobrunning
>       expr: time() - kube_cronjob_next_schedule_time{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} > 3600
>       for: 1h
>       labels:
>         severity: warning
>     - alert: KubeJobCompletion
>       annotations:
>         message: Job {{`{{ $labels.namespace }}`}}/{{`{{ $labels.job_name }}`}} is taking more than one hour to complete.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubejobcompletion
>       expr: kube_job_spec_completions{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} - kube_job_status_succeeded{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}  > 0
>       for: 1h
>       labels:
>         severity: warning
>     - alert: KubeJobFailed
>       annotations:
>         message: Job {{`{{ $labels.namespace }}`}}/{{`{{ $labels.job_name }}`}} failed to complete.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubejobfailed
>       expr: kube_job_status_failed{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}  > 0
>       for: 1h
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/kubernetes-resources.yaml packages/monitoring/charts/templates/prometheus/rules/kubernetes-resources.yaml
0a1,103
> {{- /*
> Generated from 'kubernetes-resources' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesResources }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-resources" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-resources
>     rules:
>     - alert: KubeCPUOvercommit
>       annotations:
>         message: Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecpuovercommit
>       expr: |-
>         sum(namespace_name:kube_pod_container_resource_requests_cpu_cores:sum)
>           /
>         sum(node:node_num_cpu:sum)
>           >
>         (count(node:node_num_cpu:sum)-1) / count(node:node_num_cpu:sum)
>       for: 5m
>       labels:
>         severity: warning
>     - alert: KubeMemOvercommit
>       annotations:
>         message: Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubememovercommit
>       expr: |-
>         sum(namespace_name:kube_pod_container_resource_requests_memory_bytes:sum)
>           /
>         sum(node_memory_MemTotal_bytes)
>           >
>         (count(node:node_num_cpu:sum)-1)
>           /
>         count(node:node_num_cpu:sum)
>       for: 5m
>       labels:
>         severity: warning
>     - alert: KubeCPUOvercommit
>       annotations:
>         message: Cluster has overcommitted CPU resource requests for Namespaces.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecpuovercommit
>       expr: |-
>         sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="cpu"})
>           /
>         sum(node:node_num_cpu:sum)
>           > 1.5
>       for: 5m
>       labels:
>         severity: warning
>     - alert: KubeMemOvercommit
>       annotations:
>         message: Cluster has overcommitted memory resource requests for Namespaces.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubememovercommit
>       expr: |-
>         sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="memory"})
>           /
>         sum(node_memory_MemTotal_bytes{job="node-exporter"})
>           > 1.5
>       for: 5m
>       labels:
>         severity: warning
>     - alert: KubeQuotaExceeded
>       annotations:
>         message: Namespace {{`{{ $labels.namespace }}`}} is using {{`{{ printf "%0.0f" $value }}`}}% of its {{`{{ $labels.resource }}`}} quota.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubequotaexceeded
>       expr: |-
>         100 * kube_resourcequota{job="kube-state-metrics", type="used"}
>           / ignoring(instance, job, type)
>         (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
>           > 90
>       for: 15m
>       labels:
>         severity: warning
>     - alert: CPUThrottlingHigh
>       annotations:
>         message: '{{`{{ printf "%0.0f" $value }}`}}% throttling of CPU in namespace {{`{{ $labels.namespace }}`}} for container {{`{{ $labels.container_name }}`}} in pod {{`{{ $labels.pod_name }}`}}.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-cputhrottlinghigh
>       expr: |-
>         100 * sum(increase(container_cpu_cfs_throttled_periods_total{container_name!="", }[5m])) by (container_name, pod_name, namespace)
>           /
>         sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container_name, pod_name, namespace)
>           > 25
>       for: 15m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/kubernetes-storage.yaml packages/monitoring/charts/templates/prometheus/rules/kubernetes-storage.yaml
0a1,63
> {{- /*
> Generated from 'kubernetes-storage' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesStorage }}
> {{- $targetNamespace := .Values.defaultRules.appNamespacesTarget }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-storage" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-storage
>     rules:
>     - alert: KubePersistentVolumeUsageCritical
>       annotations:
>         message: The PersistentVolume claimed by {{`{{ $labels.persistentvolumeclaim }}`}} in Namespace {{`{{ $labels.namespace }}`}} is only {{`{{ printf "%0.2f" $value }}`}}% free.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepersistentvolumeusagecritical
>       expr: |-
>         100 * kubelet_volume_stats_available_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}"}
>           /
>         kubelet_volume_stats_capacity_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}"}
>           < 3
>       for: 1m
>       labels:
>         severity: critical
>     - alert: KubePersistentVolumeFullInFourDays
>       annotations:
>         message: Based on recent sampling, the PersistentVolume claimed by {{`{{ $labels.persistentvolumeclaim }}`}} in Namespace {{`{{ $labels.namespace }}`}} is expected to fill up within four days. Currently {{`{{ printf "%0.2f" $value }}`}}% is available.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepersistentvolumefullinfourdays
>       expr: |-
>         100 * (
>           kubelet_volume_stats_available_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}"}
>             /
>           kubelet_volume_stats_capacity_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}"}
>         ) < 15
>         and
>         predict_linear(kubelet_volume_stats_available_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}"}[6h], 4 * 24 * 3600) < 0
>       for: 5m
>       labels:
>         severity: critical
>     - alert: KubePersistentVolumeErrors
>       annotations:
>         message: The persistent volume {{`{{ $labels.persistentvolume }}`}} has status {{`{{ $labels.phase }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepersistentvolumeerrors
>       expr: kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="kube-state-metrics"} > 0
>       for: 5m
>       labels:
>         severity: critical
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/kubernetes-system.yaml packages/monitoring/charts/templates/prometheus/rules/kubernetes-system.yaml
0a1,145
> {{- /*
> Generated from 'kubernetes-system' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesSystem }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-system" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-system
>     rules:
>     - alert: KubeNodeNotReady
>       annotations:
>         message: '{{`{{ $labels.node }}`}} has been unready for more than an hour.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubenodenotready
>       expr: kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
>       for: 1h
>       labels:
>         severity: warning
>     - alert: KubeVersionMismatch
>       annotations:
>         message: There are {{`{{ $value }}`}} different semantic versions of Kubernetes components running.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeversionmismatch
>       expr: count(count by (gitVersion) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"gitVersion","$1","gitVersion","(v[0-9]*.[0-9]*.[0-9]*).*"))) > 1
>       for: 1h
>       labels:
>         severity: warning
>     - alert: KubeClientErrors
>       annotations:
>         message: Kubernetes API server client '{{`{{ $labels.job }}`}}/{{`{{ $labels.instance }}`}}' is experiencing {{`{{ printf "%0.0f" $value }}`}}% errors.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeclienterrors
>       expr: |-
>         (sum(rate(rest_client_requests_total{code=~"5.."}[5m])) by (instance, job)
>           /
>         sum(rate(rest_client_requests_total[5m])) by (instance, job))
>         * 100 > 1
>       for: 15m
>       labels:
>         severity: warning
>     - alert: KubeClientErrors
>       annotations:
>         message: Kubernetes API server client '{{`{{ $labels.job }}`}}/{{`{{ $labels.instance }}`}}' is experiencing {{`{{ printf "%0.0f" $value }}`}} errors / second.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeclienterrors
>       expr: sum(rate(ksm_scrape_error_total{job="kube-state-metrics"}[5m])) by (instance, job) > 0.1
>       for: 15m
>       labels:
>         severity: warning
>     - alert: KubeletTooManyPods
>       annotations:
>         message: Kubelet {{`{{ $labels.instance }}`}} is running {{`{{ $value }}`}} Pods, close to the limit of 110.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubelettoomanypods
>       expr: kubelet_running_pod_count{job="kubelet"} > 110 * 0.9
>       for: 15m
>       labels:
>         severity: warning
>     - alert: KubeAPILatencyHigh
>       annotations:
>         message: The API server has a 99th percentile latency of {{`{{ $value }}`}} seconds for {{`{{ $labels.verb }}`}} {{`{{ $labels.resource }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapilatencyhigh
>       expr: cluster_quantile:apiserver_request_latencies:histogram_quantile{job="apiserver",quantile="0.99",subresource!="log",verb!~"^(?:LIST|WATCH|WATCHLIST|PROXY|CONNECT)$"} > 1
>       for: 10m
>       labels:
>         severity: warning
>     - alert: KubeAPILatencyHigh
>       annotations:
>         message: The API server has a 99th percentile latency of {{`{{ $value }}`}} seconds for {{`{{ $labels.verb }}`}} {{`{{ $labels.resource }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapilatencyhigh
>       expr: cluster_quantile:apiserver_request_latencies:histogram_quantile{job="apiserver",quantile="0.99",subresource!="log",verb!~"^(?:LIST|WATCH|WATCHLIST|PROXY|CONNECT)$"} > 4
>       for: 10m
>       labels:
>         severity: critical
>     - alert: KubeAPIErrorsHigh
>       annotations:
>         message: API server is returning errors for {{`{{ $value }}`}}% of requests.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapierrorshigh
>       expr: |-
>         sum(rate(apiserver_request_count{job="apiserver",code=~"^(?:5..)$"}[5m]))
>           /
>         sum(rate(apiserver_request_count{job="apiserver"}[5m])) * 100 > 3
>       for: 10m
>       labels:
>         severity: critical
>     - alert: KubeAPIErrorsHigh
>       annotations:
>         message: API server is returning errors for {{`{{ $value }}`}}% of requests.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapierrorshigh
>       expr: |-
>         sum(rate(apiserver_request_count{job="apiserver",code=~"^(?:5..)$"}[5m]))
>           /
>         sum(rate(apiserver_request_count{job="apiserver"}[5m])) * 100 > 1
>       for: 10m
>       labels:
>         severity: warning
>     - alert: KubeAPIErrorsHigh
>       annotations:
>         message: API server is returning errors for {{`{{ $value }}`}}% of requests for {{`{{ $labels.verb }}`}} {{`{{ $labels.resource }}`}} {{`{{ $labels.subresource }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapierrorshigh
>       expr: |-
>         sum(rate(apiserver_request_count{job="apiserver",code=~"^(?:5..)$"}[5m])) by (resource,subresource,verb)
>           /
>         sum(rate(apiserver_request_count{job="apiserver"}[5m])) by (resource,subresource,verb) * 100 > 10
>       for: 10m
>       labels:
>         severity: critical
>     - alert: KubeAPIErrorsHigh
>       annotations:
>         message: API server is returning errors for {{`{{ $value }}`}}% of requests for {{`{{ $labels.verb }}`}} {{`{{ $labels.resource }}`}} {{`{{ $labels.subresource }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapierrorshigh
>       expr: |-
>         sum(rate(apiserver_request_count{job="apiserver",code=~"^(?:5..)$"}[5m])) by (resource,subresource,verb)
>           /
>         sum(rate(apiserver_request_count{job="apiserver"}[5m])) by (resource,subresource,verb) * 100 > 5
>       for: 10m
>       labels:
>         severity: warning
>     - alert: KubeClientCertificateExpiration
>       annotations:
>         message: A client certificate used to authenticate to the apiserver is expiring in less than 7.0 days.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeclientcertificateexpiration
>       expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 604800
>       labels:
>         severity: warning
>     - alert: KubeClientCertificateExpiration
>       annotations:
>         message: A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeclientcertificateexpiration
>       expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 86400
>       labels:
>         severity: critical
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/node-network.yaml packages/monitoring/charts/templates/prometheus/rules/node-network.yaml
0a1,48
> {{- /*
> Generated from 'node-network' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.network }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "node-network" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: node-network
>     rules:
>     - alert: NetworkReceiveErrors
>       annotations:
>         message: Network interface "{{`{{ $labels.device }}`}}" showing receive errors on node-exporter {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}}"
>       expr: rate(node_network_receive_errs_total{job="node-exporter",device!~"veth.+"}[2m]) > 0
>       for: 2m
>       labels:
>         severity: warning
>     - alert: NetworkTransmitErrors
>       annotations:
>         message: Network interface "{{`{{ $labels.device }}`}}" showing transmit errors on node-exporter {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}}"
>       expr: rate(node_network_transmit_errs_total{job="node-exporter",device!~"veth.+"}[2m]) > 0
>       for: 2m
>       labels:
>         severity: warning
>     - alert: NodeNetworkInterfaceFlapping
>       annotations:
>         message: Network interface "{{`{{ $labels.device }}`}}" changing it's up status often on node-exporter {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}}"
>       expr: changes(node_network_up{job="node-exporter",device!~"veth.+"}[2m]) > 2
>       for: 2m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/node-time.yaml packages/monitoring/charts/templates/prometheus/rules/node-time.yaml
0a1,34
> {{- /*
> Generated from 'node-time' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.time }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "node-time" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: node-time
>     rules:
>     - alert: ClockSkewDetected
>       annotations:
>         message: Clock skew detected on node-exporter {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}}. Ensure NTP is configured correctly on this host.
>       expr: abs(node_timex_offset_seconds{job="node-exporter"}) > 0.03
>       for: 2m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/node.rules.yaml packages/monitoring/charts/templates/prometheus/rules/node.rules.yaml
0a1,202
> {{- /*
> Generated from 'node.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.nodeExporter.enabled .Values.defaultRules.rules.node }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "node.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: node.rules
>     rules:
>     - expr: sum(min(kube_pod_info) by (node))
>       record: ':kube_pod_info_node_count:'
>     - expr: max(label_replace(kube_pod_info{job="kube-state-metrics"}, "pod", "$1", "pod", "(.*)")) by (node, namespace, pod)
>       record: 'node_namespace_pod:kube_pod_info:'
>     - expr: |-
>         count by (node) (sum by (node, cpu) (
>           node_cpu_seconds_total{job="node-exporter"}
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:
>         ))
>       record: node:node_num_cpu:sum
>     - expr: 1 - avg(rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m]))
>       record: :node_cpu_utilisation:avg1m
>     - expr: |-
>         1 - avg by (node) (
>           rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m])
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:)
>       record: node:node_cpu_utilisation:avg1m
>     - expr: |-
>         node:node_cpu_utilisation:avg1m
>           *
>         node:node_num_cpu:sum
>           /
>         scalar(sum(node:node_num_cpu:sum))
>       record: node:cluster_cpu_utilisation:ratio
>     - expr: |-
>         sum(node_load1{job="node-exporter"})
>         /
>         sum(node:node_num_cpu:sum)
>       record: ':node_cpu_saturation_load1:'
>     - expr: |-
>         sum by (node) (
>           node_load1{job="node-exporter"}
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:
>         )
>         /
>         node:node_num_cpu:sum
>       record: 'node:node_cpu_saturation_load1:'
>     - expr: |-
>         1 -
>         sum(node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
>         /
>         sum(node_memory_MemTotal_bytes{job="node-exporter"})
>       record: ':node_memory_utilisation:'
>     - expr: sum(node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
>       record: :node_memory_MemFreeCachedBuffers_bytes:sum
>     - expr: sum(node_memory_MemTotal_bytes{job="node-exporter"})
>       record: :node_memory_MemTotal_bytes:sum
>     - expr: |-
>         sum by (node) (
>           (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
>           * on (namespace, pod) group_left(node)
>             node_namespace_pod:kube_pod_info:
>         )
>       record: node:node_memory_bytes_available:sum
>     - expr: |-
>         sum by (node) (
>           node_memory_MemTotal_bytes{job="node-exporter"}
>           * on (namespace, pod) group_left(node)
>             node_namespace_pod:kube_pod_info:
>         )
>       record: node:node_memory_bytes_total:sum
>     - expr: |-
>         (node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)
>         /
>         node:node_memory_bytes_total:sum
>       record: node:node_memory_utilisation:ratio
>     - expr: |-
>         (node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)
>         /
>         scalar(sum(node:node_memory_bytes_total:sum))
>       record: node:cluster_memory_utilisation:ratio
>     - expr: |-
>         1e3 * sum(
>           (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
>          + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
>         )
>       record: :node_memory_swap_io_bytes:sum_rate
>     - expr: |-
>         1 -
>         sum by (node) (
>           (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:
>         )
>         /
>         sum by (node) (
>           node_memory_MemTotal_bytes{job="node-exporter"}
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:
>         )
>       record: 'node:node_memory_utilisation:'
>     - expr: 1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)
>       record: 'node:node_memory_utilisation_2:'
>     - expr: |-
>         1e3 * sum by (node) (
>           (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
>          + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
>          * on (namespace, pod) group_left(node)
>            node_namespace_pod:kube_pod_info:
>         )
>       record: node:node_memory_swap_io_bytes:sum_rate
>     - expr: avg(irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
>       record: :node_disk_utilisation:avg_irate
>     - expr: |-
>         avg by (node) (
>           irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:
>         )
>       record: node:node_disk_utilisation:avg_irate
>     - expr: avg(irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
>       record: :node_disk_saturation:avg_irate
>     - expr: |-
>         avg by (node) (
>           irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:
>         )
>       record: node:node_disk_saturation:avg_irate
>     - expr: |-
>         max by (instance, namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
>         - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
>         / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
>       record: 'node:node_filesystem_usage:'
>     - expr: max by (instance, namespace, pod, device) (node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"} / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
>       record: 'node:node_filesystem_avail:'
>     - expr: |-
>         sum(irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m])) +
>         sum(irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
>       record: :node_net_utilisation:sum_irate
>     - expr: |-
>         sum by (node) (
>           (irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m]) +
>           irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:
>         )
>       record: node:node_net_utilisation:sum_irate
>     - expr: |-
>         sum(irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m])) +
>         sum(irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
>       record: :node_net_saturation:sum_irate
>     - expr: |-
>         sum by (node) (
>           (irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m]) +
>           irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:
>         )
>       record: node:node_net_saturation:sum_irate
>     - expr: |-
>         max(
>           max(
>             kube_pod_info{job="kube-state-metrics", host_ip!=""}
>           ) by (node, host_ip)
>           * on (host_ip) group_right (node)
>           label_replace(
>             (max(node_filesystem_files{job="node-exporter", mountpoint="/"}) by (instance)), "host_ip", "$1", "instance", "(.*):.*"
>           )
>         ) by (node)
>       record: 'node:node_inodes_total:'
>     - expr: |-
>         max(
>           max(
>             kube_pod_info{job="kube-state-metrics", host_ip!=""}
>           ) by (node, host_ip)
>           * on (host_ip) group_right (node)
>           label_replace(
>             (max(node_filesystem_files_free{job="node-exporter", mountpoint="/"}) by (instance)), "host_ip", "$1", "instance", "(.*):.*"
>           )
>         ) by (node)
>       record: 'node:node_inodes_free:'
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/prometheus-operator.yaml packages/monitoring/charts/templates/prometheus/rules/prometheus-operator.yaml
0a1,43
> {{- /*
> Generated from 'prometheus-operator' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.prometheusOperator }}
> {{- $operatorJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "operator" }}
> {{- $namespace := .Release.Namespace }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "prometheus-operator" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: prometheus-operator
>     rules:
>     - alert: PrometheusOperatorReconcileErrors
>       annotations:
>         message: Errors while reconciling {{`{{ $labels.controller }}`}} in {{`{{ $labels.namespace }}`}} Namespace.
>       expr: rate(prometheus_operator_reconcile_errors_total{job="{{ $operatorJob }}",namespace="{{ $namespace }}"}[5m]) > 0.1
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusOperatorNodeLookupErrors
>       annotations:
>         message: Errors while reconciling Prometheus in {{`{{ $labels.namespace }}`}} Namespace.
>       expr: rate(prometheus_operator_node_address_lookup_errors_total{job="{{ $operatorJob }}",namespace="{{ $namespace }}"}[5m]) > 0.1
>       for: 10m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules/prometheus.rules.yaml packages/monitoring/charts/templates/prometheus/rules/prometheus.rules.yaml
0a1,109
> {{- /*
> Generated from 'prometheus.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/release-0.1/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.10.0-0" $kubeTargetVersion) (semverCompare "<1.14.0-0" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.prometheus }}
> {{- $prometheusJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "prometheus" }}
> {{- $namespace := .Release.Namespace }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "prometheus.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: prometheus.rules
>     rules:
>     - alert: PrometheusConfigReloadFailed
>       annotations:
>         description: Reloading Prometheus' configuration has failed for {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}}
>         summary: Reloading Prometheus' configuration failed
>       expr: prometheus_config_last_reload_successful{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"} == 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusNotificationQueueRunningFull
>       annotations:
>         description: Prometheus' alert notification queue is running full for {{`{{$labels.namespace}}`}}/{{`{{ $labels.pod}}`}}
>         summary: Prometheus' alert notification queue is running full
>       expr: predict_linear(prometheus_notifications_queue_length{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m], 60 * 30) > prometheus_notifications_queue_capacity{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusErrorSendingAlerts
>       annotations:
>         description: Errors while sending alerts from Prometheus {{`{{$labels.namespace}}`}}/{{`{{ $labels.pod}}`}} to Alertmanager {{`{{$labels.Alertmanager}}`}}
>         summary: Errors while sending alert from Prometheus
>       expr: rate(prometheus_notifications_errors_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) / rate(prometheus_notifications_sent_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) > 0.01
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusErrorSendingAlerts
>       annotations:
>         description: Errors while sending alerts from Prometheus {{`{{$labels.namespace}}`}}/{{`{{ $labels.pod}}`}} to Alertmanager {{`{{$labels.Alertmanager}}`}}
>         summary: Errors while sending alerts from Prometheus
>       expr: rate(prometheus_notifications_errors_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) / rate(prometheus_notifications_sent_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) > 0.03
>       for: 10m
>       labels:
>         severity: critical
>     - alert: PrometheusNotConnectedToAlertmanagers
>       annotations:
>         description: Prometheus {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod}}`}} is not connected to any Alertmanagers
>         summary: Prometheus is not connected to any Alertmanagers
>       expr: prometheus_notifications_alertmanagers_discovered{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"} < 1
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusTSDBReloadsFailing
>       annotations:
>         description: '{{`{{$labels.job}}`}} at {{`{{$labels.instance}}`}} had {{`{{$value | humanize}}`}} reload failures over the last four hours.'
>         summary: Prometheus has issues reloading data blocks from disk
>       expr: increase(prometheus_tsdb_reloads_failures_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[2h]) > 0
>       for: 12h
>       labels:
>         severity: warning
>     - alert: PrometheusTSDBCompactionsFailing
>       annotations:
>         description: '{{`{{$labels.job}}`}} at {{`{{$labels.instance}}`}} had {{`{{$value | humanize}}`}} compaction failures over the last four hours.'
>         summary: Prometheus has issues compacting sample blocks
>       expr: increase(prometheus_tsdb_compactions_failed_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[2h]) > 0
>       for: 12h
>       labels:
>         severity: warning
>     - alert: PrometheusTSDBWALCorruptions
>       annotations:
>         description: '{{`{{$labels.job}}`}} at {{`{{$labels.instance}}`}} has a corrupted write-ahead log (WAL).'
>         summary: Prometheus write-ahead log is corrupted
>       expr: prometheus_tsdb_wal_corruptions_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"} > 0
>       for: 4h
>       labels:
>         severity: warning
>     - alert: PrometheusNotIngestingSamples
>       annotations:
>         description: Prometheus {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod}}`}} isn't ingesting samples.
>         summary: Prometheus isn't ingesting samples
>       expr: rate(prometheus_tsdb_head_samples_appended_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) <= 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusTargetScrapesDuplicate
>       annotations:
>         description: '{{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} has many samples rejected due to duplicate timestamps but different values'
>         summary: Prometheus has many samples rejected
>       expr: increase(prometheus_target_scrapes_sample_duplicate_timestamp_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) > 0
>       for: 10m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/alertmanager.rules.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/alertmanager.rules.yaml
0a1,54
> {{- /*
> Generated from 'alertmanager.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.alertmanager }}
> {{- $operatorJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "operator" }}
> {{- $alertmanagerJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "alertmanager" }}
> {{- $namespace := .Release.Namespace }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "alertmanager.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: alertmanager.rules
>     rules:
>     - alert: AlertmanagerConfigInconsistent
>       annotations:
>         message: The configuration of the instances of the Alertmanager cluster `{{`{{$labels.service}}`}}` are out of sync.
>       expr: count_values("config_hash", alertmanager_config_hash{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"}) BY (service) / ON(service) GROUP_LEFT() label_replace(max(prometheus_operator_spec_replicas{job="{{ $operatorJob }}",namespace="{{ $namespace }}",controller="alertmanager"}) by (name, job, namespace, controller), "service", "$1", "name", "(.*)") != 1
>       for: 5m
>       labels:
>         severity: critical
>     - alert: AlertmanagerFailedReload
>       annotations:
>         message: Reloading Alertmanager's configuration has failed for {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod}}`}}.
>       expr: alertmanager_config_last_reload_successful{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"} == 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: AlertmanagerMembersInconsistent
>       annotations:
>         message: Alertmanager has not found all other members of the cluster.
>       expr: |-
>         alertmanager_cluster_members{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"}
>           != on (service) GROUP_LEFT()
>         count by (service) (alertmanager_cluster_members{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"})
>       for: 5m
>       labels:
>         severity: critical
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/etcd.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/etcd.yaml
0a1,140
> {{- /*
> Generated from 'etcd' group from https://raw.githubusercontent.com/etcd-io/etcd/master/Documentation/op-guide/etcd3_alert.rules.yml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeEtcd.enabled .Values.defaultRules.rules.etcd }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "etcd" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: etcd
>     rules:
>     - alert: etcdInsufficientMembers
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": insufficient members ({{`{{ $value }}`}}).'
>       expr: sum(up{job=~".*etcd.*"} == bool 1) by (job) < ((count(up{job=~".*etcd.*"}) by (job) + 1) / 2)
>       for: 3m
>       labels:
>         severity: critical
>     - alert: etcdNoLeader
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": member {{`{{ $labels.instance }}`}} has no leader.'
>       expr: etcd_server_has_leader{job=~".*etcd.*"} == 0
>       for: 1m
>       labels:
>         severity: critical
>     - alert: etcdHighNumberOfLeaderChanges
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": instance {{`{{ $labels.instance }}`}} has seen {{`{{ $value }}`}} leader changes within the last hour.'
>       expr: rate(etcd_server_leader_changes_seen_total{job=~".*etcd.*"}[15m]) > 3
>       for: 15m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedGRPCRequests
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": {{`{{ $value }}`}}% of requests for {{`{{ $labels.grpc_method }}`}} failed on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         100 * sum(rate(grpc_server_handled_total{job=~".*etcd.*", grpc_code!="OK"}[5m])) BY (job, instance, grpc_service, grpc_method)
>           /
>         sum(rate(grpc_server_handled_total{job=~".*etcd.*"}[5m])) BY (job, instance, grpc_service, grpc_method)
>           > 1
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedGRPCRequests
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": {{`{{ $value }}`}}% of requests for {{`{{ $labels.grpc_method }}`}} failed on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         100 * sum(rate(grpc_server_handled_total{job=~".*etcd.*", grpc_code!="OK"}[5m])) BY (job, instance, grpc_service, grpc_method)
>           /
>         sum(rate(grpc_server_handled_total{job=~".*etcd.*"}[5m])) BY (job, instance, grpc_service, grpc_method)
>           > 5
>       for: 5m
>       labels:
>         severity: critical
>     - alert: etcdGRPCRequestsSlow
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": gRPC requests to {{`{{ $labels.grpc_method }}`}} are taking {{`{{ $value }}`}}s on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         histogram_quantile(0.99, sum(rate(grpc_server_handling_seconds_bucket{job=~".*etcd.*", grpc_type="unary"}[5m])) by (job, instance, grpc_service, grpc_method, le))
>         > 0.15
>       for: 10m
>       labels:
>         severity: critical
>     - alert: etcdMemberCommunicationSlow
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": member communication with {{`{{ $labels.To }}`}} is taking {{`{{ $value }}`}}s on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket{job=~".*etcd.*"}[5m]))
>         > 0.15
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedProposals
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": {{`{{ $value }}`}} proposal failures within the last hour on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: rate(etcd_server_proposals_failed_total{job=~".*etcd.*"}[15m]) > 5
>       for: 15m
>       labels:
>         severity: warning
>     - alert: etcdHighFsyncDurations
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": 99th percentile fync durations are {{`{{ $value }}`}}s on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=~".*etcd.*"}[5m]))
>         > 0.5
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighCommitDurations
>       annotations:
>         message: 'etcd cluster "{{`{{ $labels.job }}`}}": 99th percentile commit durations {{`{{ $value }}`}}s on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket{job=~".*etcd.*"}[5m]))
>         > 0.25
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedHTTPRequests
>       annotations:
>         message: '{{`{{ $value }}`}}% of requests for {{`{{ $labels.method }}`}} failed on etcd instance {{`{{ $labels.instance }}`}}'
>       expr: |-
>         sum(rate(etcd_http_failed_total{job=~".*etcd.*", code!="404"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job=~".*etcd.*"}[5m]))
>         BY (method) > 0.01
>       for: 10m
>       labels:
>         severity: warning
>     - alert: etcdHighNumberOfFailedHTTPRequests
>       annotations:
>         message: '{{`{{ $value }}`}}% of requests for {{`{{ $labels.method }}`}} failed on etcd instance {{`{{ $labels.instance }}`}}.'
>       expr: |-
>         sum(rate(etcd_http_failed_total{job=~".*etcd.*", code!="404"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job=~".*etcd.*"}[5m]))
>         BY (method) > 0.05
>       for: 10m
>       labels:
>         severity: critical
>     - alert: etcdHTTPRequestsSlow
>       annotations:
>         message: etcd instance {{`{{ $labels.instance }}`}} HTTP requests to {{`{{ $labels.method }}`}} are slow.
>       expr: |-
>         histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m]))
>         > 0.15
>       for: 10m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/general.rules.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/general.rules.yaml
0a1,50
> {{- /*
> Generated from 'general.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.general }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "general.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: general.rules
>     rules:
>     - alert: TargetDown
>       annotations:
>         message: '{{`{{ printf "%.4g" $value }}`}}% of the {{`{{ $labels.job }}`}} targets in {{`{{ $labels.namespace }}`}} namespace are down.'
>       expr: 100 * (count(up == 0) BY (job, namespace, service) / count(up) BY (job, namespace, service)) > 10
>       for: 10m
>       labels:
>         severity: warning
>     - alert: Watchdog
>       annotations:
>         message: 'This is an alert meant to ensure that the entire alerting pipeline is functional.
> 
>           This alert is always firing, therefore it should always be firing in Alertmanager
> 
>           and always fire against a receiver. There are integrations with various notification
> 
>           mechanisms that send a notification when this alert is not firing. For example the
> 
>           "DeadMansSnitch" integration in PagerDuty.
> 
>           '
>       expr: vector(1)
>       labels:
>         severity: none
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/k8s.rules.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/k8s.rules.yaml
0a1,107
> {{- /*
> Generated from 'k8s.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.k8s }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "k8s.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: k8s.rules
>     rules:
>     - expr: sum(rate(container_cpu_usage_seconds_total{job="kubelet", metrics_path="/metrics/cadvisor", image!="", container!="POD"}[5m])) by (namespace)
>       record: namespace:container_cpu_usage_seconds_total:sum_rate
>     - expr: |-
>         sum by (namespace, pod, container) (
>           rate(container_cpu_usage_seconds_total{job="kubelet", metrics_path="/metrics/cadvisor", image!="", container!="POD"}[5m])
>         ) * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)
>       record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
>     - expr: |-
>         container_memory_working_set_bytes{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
>         * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)
>       record: node_namespace_pod_container:container_memory_working_set_bytes
>     - expr: |-
>         container_memory_rss{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
>         * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)
>       record: node_namespace_pod_container:container_memory_rss
>     - expr: |-
>         container_memory_cache{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
>         * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)
>       record: node_namespace_pod_container:container_memory_cache
>     - expr: |-
>         container_memory_swap{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
>         * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)
>       record: node_namespace_pod_container:container_memory_swap
>     - expr: sum(container_memory_usage_bytes{job="kubelet", metrics_path="/metrics/cadvisor", image!="", container!="POD"}) by (namespace)
>       record: namespace:container_memory_usage_bytes:sum
>     - expr: |-
>         sum by (namespace) (
>             sum by (namespace, pod) (
>                 max by (namespace, pod, container) (
>                     kube_pod_container_resource_requests_memory_bytes{job="kube-state-metrics"}
>                 ) * on(namespace, pod) group_left() max by (namespace, pod) (
>                     kube_pod_status_phase{phase=~"Pending|Running"} == 1
>                 )
>             )
>         )
>       record: namespace:kube_pod_container_resource_requests_memory_bytes:sum
>     - expr: |-
>         sum by (namespace) (
>             sum by (namespace, pod) (
>                 max by (namespace, pod, container) (
>                     kube_pod_container_resource_requests_cpu_cores{job="kube-state-metrics"}
>                 ) * on(namespace, pod) group_left() max by (namespace, pod) (
>                   kube_pod_status_phase{phase=~"Pending|Running"} == 1
>                 )
>             )
>         )
>       record: namespace:kube_pod_container_resource_requests_cpu_cores:sum
>     - expr: |-
>         sum(
>           label_replace(
>             label_replace(
>               kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"},
>               "replicaset", "$1", "owner_name", "(.*)"
>             ) * on(replicaset, namespace) group_left(owner_name) kube_replicaset_owner{job="kube-state-metrics"},
>             "workload", "$1", "owner_name", "(.*)"
>           )
>         ) by (namespace, workload, pod)
>       labels:
>         workload_type: deployment
>       record: mixin_pod_workload
>     - expr: |-
>         sum(
>           label_replace(
>             kube_pod_owner{job="kube-state-metrics", owner_kind="DaemonSet"},
>             "workload", "$1", "owner_name", "(.*)"
>           )
>         ) by (namespace, workload, pod)
>       labels:
>         workload_type: daemonset
>       record: mixin_pod_workload
>     - expr: |-
>         sum(
>           label_replace(
>             kube_pod_owner{job="kube-state-metrics", owner_kind="StatefulSet"},
>             "workload", "$1", "owner_name", "(.*)"
>           )
>         ) by (namespace, workload, pod)
>       labels:
>         workload_type: statefulset
>       record: mixin_pod_workload
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kube-apiserver-error.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kube-apiserver-error.yaml
0a1,175
> {{- /*
> Generated from 'kube-apiserver-error' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeApiServer.enabled .Values.defaultRules.rules.kubeApiserverError }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kube-apiserver-error" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kube-apiserver-error
>     rules:
>     - alert: ErrorBudgetBurn
>       annotations:
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-errorbudgetburn
>       expr: |-
>         (
>           status_class_5xx:apiserver_request_total:ratio_rate1h{job="apiserver"} > (14.4*0.010000)
>           and
>           status_class_5xx:apiserver_request_total:ratio_rate5m{job="apiserver"} > (14.4*0.010000)
>         )
>         or
>         (
>           status_class_5xx:apiserver_request_total:ratio_rate6h{job="apiserver"} > (6*0.010000)
>           and
>           status_class_5xx:apiserver_request_total:ratio_rate30m{job="apiserver"} > (6*0.010000)
>         )
>       labels:
>         job: apiserver
>         severity: critical
>     - alert: ErrorBudgetBurn
>       annotations:
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-errorbudgetburn
>       expr: |-
>         (
>           status_class_5xx:apiserver_request_total:ratio_rate1d{job="apiserver"} > (3*0.010000)
>           and
>           status_class_5xx:apiserver_request_total:ratio_rate2h{job="apiserver"} > (3*0.010000)
>         )
>         or
>         (
>           status_class_5xx:apiserver_request_total:ratio_rate3d{job="apiserver"} > (0.010000)
>           and
>           status_class_5xx:apiserver_request_total:ratio_rate6h{job="apiserver"} > (0.010000)
>         )
>       labels:
>         job: apiserver
>         severity: warning
>     - expr: |-
>         sum by (status_class) (
>           label_replace(
>             rate(apiserver_request_total{job="apiserver"}[5m]
>           ), "status_class", "${1}xx", "code", "([0-9])..")
>         )
>       labels:
>         job: apiserver
>       record: status_class:apiserver_request_total:rate5m
>     - expr: |-
>         sum by (status_class) (
>           label_replace(
>             rate(apiserver_request_total{job="apiserver"}[30m]
>           ), "status_class", "${1}xx", "code", "([0-9])..")
>         )
>       labels:
>         job: apiserver
>       record: status_class:apiserver_request_total:rate30m
>     - expr: |-
>         sum by (status_class) (
>           label_replace(
>             rate(apiserver_request_total{job="apiserver"}[1h]
>           ), "status_class", "${1}xx", "code", "([0-9])..")
>         )
>       labels:
>         job: apiserver
>       record: status_class:apiserver_request_total:rate1h
>     - expr: |-
>         sum by (status_class) (
>           label_replace(
>             rate(apiserver_request_total{job="apiserver"}[2h]
>           ), "status_class", "${1}xx", "code", "([0-9])..")
>         )
>       labels:
>         job: apiserver
>       record: status_class:apiserver_request_total:rate2h
>     - expr: |-
>         sum by (status_class) (
>           label_replace(
>             rate(apiserver_request_total{job="apiserver"}[6h]
>           ), "status_class", "${1}xx", "code", "([0-9])..")
>         )
>       labels:
>         job: apiserver
>       record: status_class:apiserver_request_total:rate6h
>     - expr: |-
>         sum by (status_class) (
>           label_replace(
>             rate(apiserver_request_total{job="apiserver"}[1d]
>           ), "status_class", "${1}xx", "code", "([0-9])..")
>         )
>       labels:
>         job: apiserver
>       record: status_class:apiserver_request_total:rate1d
>     - expr: |-
>         sum by (status_class) (
>           label_replace(
>             rate(apiserver_request_total{job="apiserver"}[3d]
>           ), "status_class", "${1}xx", "code", "([0-9])..")
>         )
>       labels:
>         job: apiserver
>       record: status_class:apiserver_request_total:rate3d
>     - expr: |-
>         sum(status_class:apiserver_request_total:rate5m{job="apiserver",status_class="5xx"})
>         /
>         sum(status_class:apiserver_request_total:rate5m{job="apiserver"})
>       labels:
>         job: apiserver
>       record: status_class_5xx:apiserver_request_total:ratio_rate5m
>     - expr: |-
>         sum(status_class:apiserver_request_total:rate30m{job="apiserver",status_class="5xx"})
>         /
>         sum(status_class:apiserver_request_total:rate30m{job="apiserver"})
>       labels:
>         job: apiserver
>       record: status_class_5xx:apiserver_request_total:ratio_rate30m
>     - expr: |-
>         sum(status_class:apiserver_request_total:rate1h{job="apiserver",status_class="5xx"})
>         /
>         sum(status_class:apiserver_request_total:rate1h{job="apiserver"})
>       labels:
>         job: apiserver
>       record: status_class_5xx:apiserver_request_total:ratio_rate1h
>     - expr: |-
>         sum(status_class:apiserver_request_total:rate2h{job="apiserver",status_class="5xx"})
>         /
>         sum(status_class:apiserver_request_total:rate2h{job="apiserver"})
>       labels:
>         job: apiserver
>       record: status_class_5xx:apiserver_request_total:ratio_rate2h
>     - expr: |-
>         sum(status_class:apiserver_request_total:rate6h{job="apiserver",status_class="5xx"})
>         /
>         sum(status_class:apiserver_request_total:rate6h{job="apiserver"})
>       labels:
>         job: apiserver
>       record: status_class_5xx:apiserver_request_total:ratio_rate6h
>     - expr: |-
>         sum(status_class:apiserver_request_total:rate1d{job="apiserver",status_class="5xx"})
>         /
>         sum(status_class:apiserver_request_total:rate1d{job="apiserver"})
>       labels:
>         job: apiserver
>       record: status_class_5xx:apiserver_request_total:ratio_rate1d
>     - expr: |-
>         sum(status_class:apiserver_request_total:rate3d{job="apiserver",status_class="5xx"})
>         /
>         sum(status_class:apiserver_request_total:rate3d{job="apiserver"})
>       labels:
>         job: apiserver
>       record: status_class_5xx:apiserver_request_total:ratio_rate3d
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kube-apiserver.rules.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kube-apiserver.rules.yaml
0a1,44
> {{- /*
> Generated from 'kube-apiserver.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeApiServer.enabled .Values.defaultRules.rules.kubeApiserver }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kube-apiserver.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kube-apiserver.rules
>     rules:
>     - expr: |-
>         sum(rate(apiserver_request_duration_seconds_sum{subresource!="log",verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) without(instance, pod)
>         /
>         sum(rate(apiserver_request_duration_seconds_count{subresource!="log",verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) without(instance, pod)
>       record: cluster:apiserver_request_duration_seconds:mean5m
>     - expr: histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.99'
>       record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.9, sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.9'
>       record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.5, sum(rate(apiserver_request_duration_seconds_bucket{job="apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.5'
>       record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kube-prometheus-node-recording.rules.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kube-prometheus-node-recording.rules.yaml
0a1,41
> {{- /*
> Generated from 'kube-prometheus-node-recording.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubePrometheusNodeRecording }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kube-prometheus-node-recording.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kube-prometheus-node-recording.rules
>     rules:
>     - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait"}[3m])) BY (instance)
>       record: instance:node_cpu:rate:sum
>     - expr: sum((node_filesystem_size_bytes{mountpoint="/"} - node_filesystem_free_bytes{mountpoint="/"})) BY (instance)
>       record: instance:node_filesystem_usage:sum
>     - expr: sum(rate(node_network_receive_bytes_total[3m])) BY (instance)
>       record: instance:node_network_receive_bytes:rate:sum
>     - expr: sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)
>       record: instance:node_network_transmit_bytes:rate:sum
>     - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait"}[5m])) WITHOUT (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total) BY (instance, cpu)) BY (instance)
>       record: instance:node_cpu:ratio
>     - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait"}[5m]))
>       record: cluster:node_cpu:sum_rate5m
>     - expr: cluster:node_cpu_seconds_total:rate5m / count(sum(node_cpu_seconds_total) BY (instance, cpu))
>       record: cluster:node_cpu:ratio
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kube-scheduler.rules.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kube-scheduler.rules.yaml
0a1,63
> {{- /*
> Generated from 'kube-scheduler.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeScheduler.enabled .Values.defaultRules.rules.kubeScheduler }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kube-scheduler.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kube-scheduler.rules
>     rules:
>     - expr: histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.99'
>       record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.99'
>       record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.99'
>       record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.9'
>       record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.9'
>       record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.9'
>       record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.5'
>       record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.5'
>       record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
>     - expr: histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
>       labels:
>         quantile: '0.5'
>       record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kubernetes-absent.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kubernetes-absent.yaml
0a1,129
> {{- /*
> Generated from 'kubernetes-absent' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesAbsent }}
> {{- $operatorJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "operator" }}
> {{- $prometheusJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "prometheus" }}
> {{- $alertmanagerJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "alertmanager" }}
> {{- $namespace := .Release.Namespace }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-absent" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ $namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-absent
>     rules:
> {{- if .Values.alertmanager.enabled }}
>     - alert: AlertmanagerDown
>       annotations:
>         message: Alertmanager has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-alertmanagerdown
>       expr: absent(up{job="{{ $alertmanagerJob }}",namespace="{{ $namespace }}"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeDns.enabled }}
>     - alert: CoreDNSDown
>       annotations:
>         message: CoreDNS has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-corednsdown
>       expr: absent(up{job="kube-dns"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeApiServer.enabled }}
>     - alert: KubeAPIDown
>       annotations:
>         message: KubeAPI has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapidown
>       expr: absent(up{job="apiserver"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeControllerManager.enabled }}
>     - alert: KubeControllerManagerDown
>       annotations:
>         message: KubeControllerManager has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecontrollermanagerdown
>       expr: absent(up{job="kube-controller-manager"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeScheduler.enabled }}
>     - alert: KubeSchedulerDown
>       annotations:
>         message: KubeScheduler has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeschedulerdown
>       expr: absent(up{job="kube-scheduler"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.kubeStateMetrics.enabled }}
>     - alert: KubeStateMetricsDown
>       annotations:
>         message: KubeStateMetrics has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubestatemetricsdown
>       expr: absent(up{job="kube-state-metrics"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.prometheusOperator.kubeletService.enabled }}
>     - alert: KubeletDown
>       annotations:
>         message: Kubelet has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeletdown
>       expr: absent(up{job="kubelet"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- if .Values.nodeExporter.enabled }}
>     - alert: NodeExporterDown
>       annotations:
>         message: NodeExporter has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodeexporterdown
>       expr: absent(up{job="node-exporter"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
>     - alert: PrometheusDown
>       annotations:
>         message: Prometheus has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-prometheusdown
>       expr: absent(up{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- if .Values.prometheusOperator.enabled }}
>     - alert: PrometheusOperatorDown
>       annotations:
>         message: PrometheusOperator has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-prometheusoperatordown
>       expr: absent(up{job="{{ $operatorJob }}",namespace="{{ $namespace }}"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kubernetes-apps.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kubernetes-apps.yaml
0a1,193
> {{- /*
> Generated from 'kubernetes-apps' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeStateMetrics.enabled .Values.defaultRules.rules.kubernetesApps }}
> {{- $targetNamespace := .Values.defaultRules.appNamespacesTarget }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-apps" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-apps
>     rules:
>     - alert: KubePodCrashLooping
>       annotations:
>         message: Pod {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}} ({{`{{ $labels.container }}`}}) is restarting {{`{{ printf "%.2f" $value }}`}} times / 5 minutes.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepodcrashlooping
>       expr: rate(kube_pod_container_status_restarts_total{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[15m]) * 60 * 5 > 0
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubePodNotReady
>       annotations:
>         message: Pod {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}} has been in a non-ready state for longer than 15 minutes.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepodnotready
>       expr: sum by (namespace, pod) (max by(namespace, pod) (kube_pod_status_phase{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}", phase=~"Pending|Unknown"}) * on(namespace, pod) group_left(owner_kind) max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!="Job"})) > 0
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeDeploymentGenerationMismatch
>       annotations:
>         message: Deployment generation for {{`{{ $labels.namespace }}`}}/{{`{{ $labels.deployment }}`}} does not match, this indicates that the Deployment has failed but has not been rolled back.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedeploymentgenerationmismatch
>       expr: |-
>         kube_deployment_status_observed_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           !=
>         kube_deployment_metadata_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeDeploymentReplicasMismatch
>       annotations:
>         message: Deployment {{`{{ $labels.namespace }}`}}/{{`{{ $labels.deployment }}`}} has not matched the expected number of replicas for longer than 15 minutes.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedeploymentreplicasmismatch
>       expr: |-
>         kube_deployment_spec_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           !=
>         kube_deployment_status_replicas_available{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeStatefulSetReplicasMismatch
>       annotations:
>         message: StatefulSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.statefulset }}`}} has not matched the expected number of replicas for longer than 15 minutes.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubestatefulsetreplicasmismatch
>       expr: |-
>         kube_statefulset_status_replicas_ready{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           !=
>         kube_statefulset_status_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeStatefulSetGenerationMismatch
>       annotations:
>         message: StatefulSet generation for {{`{{ $labels.namespace }}`}}/{{`{{ $labels.statefulset }}`}} does not match, this indicates that the StatefulSet has failed but has not been rolled back.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubestatefulsetgenerationmismatch
>       expr: |-
>         kube_statefulset_status_observed_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           !=
>         kube_statefulset_metadata_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeStatefulSetUpdateNotRolledOut
>       annotations:
>         message: StatefulSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.statefulset }}`}} update has not been rolled out.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubestatefulsetupdatenotrolledout
>       expr: |-
>         max without (revision) (
>           kube_statefulset_status_current_revision{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>             unless
>           kube_statefulset_status_update_revision{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>         )
>           *
>         (
>           kube_statefulset_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>             !=
>           kube_statefulset_status_replicas_updated{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>         )
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeDaemonSetRolloutStuck
>       annotations:
>         message: Only {{`{{ $value | humanizePercentage }}`}} of the desired Pods of DaemonSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.daemonset }}`}} are scheduled and ready.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedaemonsetrolloutstuck
>       expr: |-
>         kube_daemonset_status_number_ready{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           /
>         kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} < 1.00
>       for: 15m
>       labels:
>         severity: critical
>     - alert: KubeContainerWaiting
>       annotations:
>         message: Pod {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}} container {{`{{ $labels.container}}`}} has been in waiting state for longer than 1 hour.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecontainerwaiting
>       expr: sum by (namespace, pod, container) (kube_pod_container_status_waiting_reason{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}) > 0
>       for: 1h
>       labels:
>         severity: warning
>     - alert: KubeDaemonSetNotScheduled
>       annotations:
>         message: '{{`{{ $value }}`}} Pods of DaemonSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.daemonset }}`}} are not scheduled.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedaemonsetnotscheduled
>       expr: |-
>         kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           -
>         kube_daemonset_status_current_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} > 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: KubeDaemonSetMisScheduled
>       annotations:
>         message: '{{`{{ $value }}`}} Pods of DaemonSet {{`{{ $labels.namespace }}`}}/{{`{{ $labels.daemonset }}`}} are running where they are not supposed to run.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubedaemonsetmisscheduled
>       expr: kube_daemonset_status_number_misscheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} > 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: KubeCronJobRunning
>       annotations:
>         message: CronJob {{`{{ $labels.namespace }}`}}/{{`{{ $labels.cronjob }}`}} is taking more than 1h to complete.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecronjobrunning
>       expr: time() - kube_cronjob_next_schedule_time{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} > 3600
>       for: 1h
>       labels:
>         severity: warning
>     - alert: KubeJobCompletion
>       annotations:
>         message: Job {{`{{ $labels.namespace }}`}}/{{`{{ $labels.job_name }}`}} is taking more than one hour to complete.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubejobcompletion
>       expr: kube_job_spec_completions{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} - kube_job_status_succeeded{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}  > 0
>       for: 1h
>       labels:
>         severity: warning
>     - alert: KubeJobFailed
>       annotations:
>         message: Job {{`{{ $labels.namespace }}`}}/{{`{{ $labels.job_name }}`}} failed to complete.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubejobfailed
>       expr: kube_job_failed{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}  > 0
>       for: 15m
>       labels:
>         severity: warning
>     - alert: KubeHpaReplicasMismatch
>       annotations:
>         message: HPA {{`{{ $labels.namespace }}`}}/{{`{{ $labels.hpa }}`}} has not matched the desired number of replicas for longer than 15 minutes.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubehpareplicasmismatch
>       expr: |-
>         (kube_hpa_status_desired_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           !=
>         kube_hpa_status_current_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"})
>           and
>         changes(kube_hpa_status_current_replicas[15m]) == 0
>       for: 15m
>       labels:
>         severity: warning
>     - alert: KubeHpaMaxedOut
>       annotations:
>         message: HPA {{`{{ $labels.namespace }}`}}/{{`{{ $labels.hpa }}`}} has been running at max replicas for longer than 15 minutes.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubehpamaxedout
>       expr: |-
>         kube_hpa_status_current_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>           ==
>         kube_hpa_spec_max_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
>       for: 15m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kubernetes-resources.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kubernetes-resources.yaml
0a1,103
> {{- /*
> Generated from 'kubernetes-resources' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesResources }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-resources" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-resources
>     rules:
>     - alert: KubeCPUOvercommit
>       annotations:
>         message: Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecpuovercommit
>       expr: |-
>         sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum)
>           /
>         sum(kube_node_status_allocatable_cpu_cores)
>           >
>         (count(kube_node_status_allocatable_cpu_cores)-1) / count(kube_node_status_allocatable_cpu_cores)
>       for: 5m
>       labels:
>         severity: warning
>     - alert: KubeMemOvercommit
>       annotations:
>         message: Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubememovercommit
>       expr: |-
>         sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum)
>           /
>         sum(kube_node_status_allocatable_memory_bytes)
>           >
>         (count(kube_node_status_allocatable_memory_bytes)-1)
>           /
>         count(kube_node_status_allocatable_memory_bytes)
>       for: 5m
>       labels:
>         severity: warning
>     - alert: KubeCPUOvercommit
>       annotations:
>         message: Cluster has overcommitted CPU resource requests for Namespaces.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecpuovercommit
>       expr: |-
>         sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="cpu"})
>           /
>         sum(kube_node_status_allocatable_cpu_cores)
>           > 1.5
>       for: 5m
>       labels:
>         severity: warning
>     - alert: KubeMemOvercommit
>       annotations:
>         message: Cluster has overcommitted memory resource requests for Namespaces.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubememovercommit
>       expr: |-
>         sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="memory"})
>           /
>         sum(kube_node_status_allocatable_memory_bytes{job="node-exporter"})
>           > 1.5
>       for: 5m
>       labels:
>         severity: warning
>     - alert: KubeQuotaExceeded
>       annotations:
>         message: Namespace {{`{{ $labels.namespace }}`}} is using {{`{{ $value | humanizePercentage }}`}} of its {{`{{ $labels.resource }}`}} quota.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubequotaexceeded
>       expr: |-
>         kube_resourcequota{job="kube-state-metrics", type="used"}
>           / ignoring(instance, job, type)
>         (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
>           > 0.90
>       for: 15m
>       labels:
>         severity: warning
>     - alert: CPUThrottlingHigh
>       annotations:
>         message: '{{`{{ $value | humanizePercentage }}`}} throttling of CPU in namespace {{`{{ $labels.namespace }}`}} for container {{`{{ $labels.container }}`}} in pod {{`{{ $labels.pod }}`}}.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-cputhrottlinghigh
>       expr: |-
>         sum(increase(container_cpu_cfs_throttled_periods_total{container!="", }[5m])) by (container, pod, namespace)
>           /
>         sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)
>           > ( 25 / 100 )
>       for: 15m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kubernetes-storage.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kubernetes-storage.yaml
0a1,63
> {{- /*
> Generated from 'kubernetes-storage' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesStorage }}
> {{- $targetNamespace := .Values.defaultRules.appNamespacesTarget }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-storage" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-storage
>     rules:
>     - alert: KubePersistentVolumeUsageCritical
>       annotations:
>         message: The PersistentVolume claimed by {{`{{ $labels.persistentvolumeclaim }}`}} in Namespace {{`{{ $labels.namespace }}`}} is only {{`{{ $value | humanizePercentage }}`}} free.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepersistentvolumeusagecritical
>       expr: |-
>         kubelet_volume_stats_available_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}", metrics_path="/metrics"}
>           /
>         kubelet_volume_stats_capacity_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}", metrics_path="/metrics"}
>           < 0.03
>       for: 1m
>       labels:
>         severity: critical
>     - alert: KubePersistentVolumeFullInFourDays
>       annotations:
>         message: Based on recent sampling, the PersistentVolume claimed by {{`{{ $labels.persistentvolumeclaim }}`}} in Namespace {{`{{ $labels.namespace }}`}} is expected to fill up within four days. Currently {{`{{ $value | humanizePercentage }}`}} is available.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepersistentvolumefullinfourdays
>       expr: |-
>         (
>           kubelet_volume_stats_available_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}", metrics_path="/metrics"}
>             /
>           kubelet_volume_stats_capacity_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}", metrics_path="/metrics"}
>         ) < 0.15
>         and
>         predict_linear(kubelet_volume_stats_available_bytes{job="kubelet", namespace=~"{{ $targetNamespace }}", metrics_path="/metrics"}[6h], 4 * 24 * 3600) < 0
>       for: 1h
>       labels:
>         severity: critical
>     - alert: KubePersistentVolumeErrors
>       annotations:
>         message: The persistent volume {{`{{ $labels.persistentvolume }}`}} has status {{`{{ $labels.phase }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubepersistentvolumeerrors
>       expr: kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="kube-state-metrics"} > 0
>       for: 5m
>       labels:
>         severity: critical
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kubernetes-system-apiserver.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kubernetes-system-apiserver.yaml
0a1,126
> {{- /*
> Generated from 'kubernetes-system-apiserver' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesSystem }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-system-apiserver" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-system-apiserver
>     rules:
>     - alert: KubeAPILatencyHigh
>       annotations:
>         message: The API server has an abnormal latency of {{`{{ $value }}`}} seconds for {{`{{ $labels.verb }}`}} {{`{{ $labels.resource }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapilatencyhigh
>       expr: |-
>         (
>           cluster:apiserver_request_duration_seconds:mean5m{job="apiserver"}
>           >
>           on (verb) group_left()
>           (
>             avg by (verb) (cluster:apiserver_request_duration_seconds:mean5m{job="apiserver"} >= 0)
>             +
>             2*stddev by (verb) (cluster:apiserver_request_duration_seconds:mean5m{job="apiserver"} >= 0)
>           )
>         ) > on (verb) group_left()
>         1.2 * avg by (verb) (cluster:apiserver_request_duration_seconds:mean5m{job="apiserver"} >= 0)
>         and on (verb,resource)
>         cluster_quantile:apiserver_request_duration_seconds:histogram_quantile{job="apiserver",quantile="0.99"}
>         >
>         1
>       for: 5m
>       labels:
>         severity: warning
>     - alert: KubeAPILatencyHigh
>       annotations:
>         message: The API server has a 99th percentile latency of {{`{{ $value }}`}} seconds for {{`{{ $labels.verb }}`}} {{`{{ $labels.resource }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapilatencyhigh
>       expr: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile{job="apiserver",quantile="0.99"} > 4
>       for: 10m
>       labels:
>         severity: critical
>     - alert: KubeAPIErrorsHigh
>       annotations:
>         message: API server is returning errors for {{`{{ $value | humanizePercentage }}`}} of requests.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapierrorshigh
>       expr: |-
>         sum(rate(apiserver_request_total{job="apiserver",code=~"5.."}[5m]))
>           /
>         sum(rate(apiserver_request_total{job="apiserver"}[5m])) > 0.03
>       for: 10m
>       labels:
>         severity: critical
>     - alert: KubeAPIErrorsHigh
>       annotations:
>         message: API server is returning errors for {{`{{ $value | humanizePercentage }}`}} of requests.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapierrorshigh
>       expr: |-
>         sum(rate(apiserver_request_total{job="apiserver",code=~"5.."}[5m]))
>           /
>         sum(rate(apiserver_request_total{job="apiserver"}[5m])) > 0.01
>       for: 10m
>       labels:
>         severity: warning
>     - alert: KubeAPIErrorsHigh
>       annotations:
>         message: API server is returning errors for {{`{{ $value | humanizePercentage }}`}} of requests for {{`{{ $labels.verb }}`}} {{`{{ $labels.resource }}`}} {{`{{ $labels.subresource }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapierrorshigh
>       expr: |-
>         sum(rate(apiserver_request_total{job="apiserver",code=~"5.."}[5m])) by (resource,subresource,verb)
>           /
>         sum(rate(apiserver_request_total{job="apiserver"}[5m])) by (resource,subresource,verb) > 0.10
>       for: 10m
>       labels:
>         severity: critical
>     - alert: KubeAPIErrorsHigh
>       annotations:
>         message: API server is returning errors for {{`{{ $value | humanizePercentage }}`}} of requests for {{`{{ $labels.verb }}`}} {{`{{ $labels.resource }}`}} {{`{{ $labels.subresource }}`}}.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapierrorshigh
>       expr: |-
>         sum(rate(apiserver_request_total{job="apiserver",code=~"5.."}[5m])) by (resource,subresource,verb)
>           /
>         sum(rate(apiserver_request_total{job="apiserver"}[5m])) by (resource,subresource,verb) > 0.05
>       for: 10m
>       labels:
>         severity: warning
>     - alert: KubeClientCertificateExpiration
>       annotations:
>         message: A client certificate used to authenticate to the apiserver is expiring in less than 7.0 days.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeclientcertificateexpiration
>       expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 604800
>       labels:
>         severity: warning
>     - alert: KubeClientCertificateExpiration
>       annotations:
>         message: A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeclientcertificateexpiration
>       expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 86400
>       labels:
>         severity: critical
> {{- if .Values.kubeApiServer.enabled }}
>     - alert: KubeAPIDown
>       annotations:
>         message: KubeAPI has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeapidown
>       expr: absent(up{job="apiserver"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kubernetes-system-controller-manager.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kubernetes-system-controller-manager.yaml
0a1,37
> {{- /*
> Generated from 'kubernetes-system-controller-manager' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeControllerManager.enabled }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-system-controller-manager" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-system-controller-manager
>     rules:
> {{- if .Values.kubeControllerManager.enabled }}
>     - alert: KubeControllerManagerDown
>       annotations:
>         message: KubeControllerManager has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubecontrollermanagerdown
>       expr: absent(up{job="kube-controller-manager"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kubernetes-system-kubelet.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kubernetes-system-kubelet.yaml
0a1,60
> {{- /*
> Generated from 'kubernetes-system-kubelet' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesSystem }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-system-kubelet" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-system-kubelet
>     rules:
>     - alert: KubeNodeNotReady
>       annotations:
>         message: '{{`{{ $labels.node }}`}} has been unready for more than 15 minutes.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubenodenotready
>       expr: kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
>       for: 15m
>       labels:
>         severity: warning
>     - alert: KubeNodeUnreachable
>       annotations:
>         message: '{{`{{ $labels.node }}`}} is unreachable and some workloads may be rescheduled.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubenodeunreachable
>       expr: kube_node_spec_taint{job="kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} == 1
>       labels:
>         severity: warning
>     - alert: KubeletTooManyPods
>       annotations:
>         message: Kubelet '{{`{{ $labels.node }}`}}' is running at {{`{{ $value | humanizePercentage }}`}} of its Pod capacity.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubelettoomanypods
>       expr: max(max(kubelet_running_pod_count{job="kubelet", metrics_path="/metrics"}) by(instance) * on(instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"}) by(node) / max(kube_node_status_capacity_pods{job="kube-state-metrics"}) by(node) > 0.95
>       for: 15m
>       labels:
>         severity: warning
> {{- if .Values.prometheusOperator.kubeletService.enabled }}
>     - alert: KubeletDown
>       annotations:
>         message: Kubelet has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeletdown
>       expr: absent(up{job="kubelet", metrics_path="/metrics"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kubernetes-system-scheduler.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kubernetes-system-scheduler.yaml
0a1,37
> {{- /*
> Generated from 'kubernetes-system-scheduler' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.kubeScheduler.enabled .Values.defaultRules.rules.kubeScheduler }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-system-scheduler" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-system-scheduler
>     rules:
> {{- if .Values.kubeScheduler.enabled }}
>     - alert: KubeSchedulerDown
>       annotations:
>         message: KubeScheduler has disappeared from Prometheus target discovery.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeschedulerdown
>       expr: absent(up{job="kube-scheduler"} == 1)
>       for: 15m
>       labels:
>         severity: critical
> {{- end }}
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/kubernetes-system.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/kubernetes-system.yaml
0a1,47
> {{- /*
> Generated from 'kubernetes-system' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.kubernetesSystem }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "kubernetes-system" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: kubernetes-system
>     rules:
>     - alert: KubeVersionMismatch
>       annotations:
>         message: There are {{`{{ $value }}`}} different semantic versions of Kubernetes components running.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeversionmismatch
>       expr: count(count by (gitVersion) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"gitVersion","$1","gitVersion","(v[0-9]*.[0-9]*.[0-9]*).*"))) > 1
>       for: 15m
>       labels:
>         severity: warning
>     - alert: KubeClientErrors
>       annotations:
>         message: Kubernetes API server client '{{`{{ $labels.job }}`}}/{{`{{ $labels.instance }}`}}' is experiencing {{`{{ $value | humanizePercentage }}`}} errors.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-kubeclienterrors
>       expr: |-
>         (sum(rate(rest_client_requests_total{code=~"5.."}[5m])) by (instance, job)
>           /
>         sum(rate(rest_client_requests_total[5m])) by (instance, job))
>         > 0.01
>       for: 15m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/node-exporter.rules.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/node-exporter.rules.yaml
0a1,79
> {{- /*
> Generated from 'node-exporter.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.nodeExporter.enabled .Values.defaultRules.rules.node }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "node-exporter.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: node-exporter.rules
>     rules:
>     - expr: |-
>         count without (cpu) (
>           count without (mode) (
>             node_cpu_seconds_total{job="node-exporter"}
>           )
>         )
>       record: instance:node_num_cpu:sum
>     - expr: |-
>         1 - avg without (cpu, mode) (
>           rate(node_cpu_seconds_total{job="node-exporter", mode="idle"}[1m])
>         )
>       record: instance:node_cpu_utilisation:rate1m
>     - expr: |-
>         (
>           node_load1{job="node-exporter"}
>         /
>           instance:node_num_cpu:sum{job="node-exporter"}
>         )
>       record: instance:node_load1_per_cpu:ratio
>     - expr: |-
>         1 - (
>           node_memory_MemAvailable_bytes{job="node-exporter"}
>         /
>           node_memory_MemTotal_bytes{job="node-exporter"}
>         )
>       record: instance:node_memory_utilisation:ratio
>     - expr: rate(node_vmstat_pgmajfault{job="node-exporter"}[1m])
>       record: instance:node_vmstat_pgmajfault:rate1m
>     - expr: rate(node_disk_io_time_seconds_total{job="node-exporter", device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
>       record: instance_device:node_disk_io_time_seconds:rate1m
>     - expr: rate(node_disk_io_time_weighted_seconds_total{job="node-exporter", device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
>       record: instance_device:node_disk_io_time_weighted_seconds:rate1m
>     - expr: |-
>         sum without (device) (
>           rate(node_network_receive_bytes_total{job="node-exporter", device!="lo"}[1m])
>         )
>       record: instance:node_network_receive_bytes_excluding_lo:rate1m
>     - expr: |-
>         sum without (device) (
>           rate(node_network_transmit_bytes_total{job="node-exporter", device!="lo"}[1m])
>         )
>       record: instance:node_network_transmit_bytes_excluding_lo:rate1m
>     - expr: |-
>         sum without (device) (
>           rate(node_network_receive_drop_total{job="node-exporter", device!="lo"}[1m])
>         )
>       record: instance:node_network_receive_drop_excluding_lo:rate1m
>     - expr: |-
>         sum without (device) (
>           rate(node_network_transmit_drop_total{job="node-exporter", device!="lo"}[1m])
>         )
>       record: instance:node_network_transmit_drop_excluding_lo:rate1m
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/node-exporter.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/node-exporter.yaml
0a1,165
> {{- /*
> Generated from 'node-exporter' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.nodeExporter.enabled .Values.defaultRules.rules.node }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "node-exporter" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: node-exporter
>     rules:
>     - alert: NodeFilesystemSpaceFillingUp
>       annotations:
>         description: Filesystem on {{`{{ $labels.device }}`}} at {{`{{ $labels.instance }}`}} has only {{`{{ printf "%.2f" $value }}`}}% available space left and is filling up.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodefilesystemspacefillingup
>         summary: Filesystem is predicted to run out of space within the next 24 hours.
>       expr: |-
>         (
>           node_filesystem_avail_bytes{job="node-exporter",fstype!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!=""} * 100 < 40
>         and
>           predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!=""}[6h], 24*60*60) < 0
>         and
>           node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
>         )
>       for: 1h
>       labels:
>         severity: warning
>     - alert: NodeFilesystemSpaceFillingUp
>       annotations:
>         description: Filesystem on {{`{{ $labels.device }}`}} at {{`{{ $labels.instance }}`}} has only {{`{{ printf "%.2f" $value }}`}}% available space left and is filling up fast.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodefilesystemspacefillingup
>         summary: Filesystem is predicted to run out of space within the next 4 hours.
>       expr: |-
>         (
>           node_filesystem_avail_bytes{job="node-exporter",fstype!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!=""} * 100 < 20
>         and
>           predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!=""}[6h], 4*60*60) < 0
>         and
>           node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
>         )
>       for: 1h
>       labels:
>         severity: critical
>     - alert: NodeFilesystemAlmostOutOfSpace
>       annotations:
>         description: Filesystem on {{`{{ $labels.device }}`}} at {{`{{ $labels.instance }}`}} has only {{`{{ printf "%.2f" $value }}`}}% available space left.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodefilesystemalmostoutofspace
>         summary: Filesystem has less than 5% space left.
>       expr: |-
>         (
>           node_filesystem_avail_bytes{job="node-exporter",fstype!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!=""} * 100 < 5
>         and
>           node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
>         )
>       for: 1h
>       labels:
>         severity: warning
>     - alert: NodeFilesystemAlmostOutOfSpace
>       annotations:
>         description: Filesystem on {{`{{ $labels.device }}`}} at {{`{{ $labels.instance }}`}} has only {{`{{ printf "%.2f" $value }}`}}% available space left.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodefilesystemalmostoutofspace
>         summary: Filesystem has less than 3% space left.
>       expr: |-
>         (
>           node_filesystem_avail_bytes{job="node-exporter",fstype!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!=""} * 100 < 3
>         and
>           node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
>         )
>       for: 1h
>       labels:
>         severity: critical
>     - alert: NodeFilesystemFilesFillingUp
>       annotations:
>         description: Filesystem on {{`{{ $labels.device }}`}} at {{`{{ $labels.instance }}`}} has only {{`{{ printf "%.2f" $value }}`}}% available inodes left and is filling up.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodefilesystemfilesfillingup
>         summary: Filesystem is predicted to run out of inodes within the next 24 hours.
>       expr: |-
>         (
>           node_filesystem_files_free{job="node-exporter",fstype!=""} / node_filesystem_files{job="node-exporter",fstype!=""} * 100 < 40
>         and
>           predict_linear(node_filesystem_files_free{job="node-exporter",fstype!=""}[6h], 24*60*60) < 0
>         and
>           node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
>         )
>       for: 1h
>       labels:
>         severity: warning
>     - alert: NodeFilesystemFilesFillingUp
>       annotations:
>         description: Filesystem on {{`{{ $labels.device }}`}} at {{`{{ $labels.instance }}`}} has only {{`{{ printf "%.2f" $value }}`}}% available inodes left and is filling up fast.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodefilesystemfilesfillingup
>         summary: Filesystem is predicted to run out of inodes within the next 4 hours.
>       expr: |-
>         (
>           node_filesystem_files_free{job="node-exporter",fstype!=""} / node_filesystem_files{job="node-exporter",fstype!=""} * 100 < 20
>         and
>           predict_linear(node_filesystem_files_free{job="node-exporter",fstype!=""}[6h], 4*60*60) < 0
>         and
>           node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
>         )
>       for: 1h
>       labels:
>         severity: critical
>     - alert: NodeFilesystemAlmostOutOfFiles
>       annotations:
>         description: Filesystem on {{`{{ $labels.device }}`}} at {{`{{ $labels.instance }}`}} has only {{`{{ printf "%.2f" $value }}`}}% available inodes left.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodefilesystemalmostoutoffiles
>         summary: Filesystem has less than 5% inodes left.
>       expr: |-
>         (
>           node_filesystem_files_free{job="node-exporter",fstype!=""} / node_filesystem_files{job="node-exporter",fstype!=""} * 100 < 5
>         and
>           node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
>         )
>       for: 1h
>       labels:
>         severity: warning
>     - alert: NodeFilesystemAlmostOutOfFiles
>       annotations:
>         description: Filesystem on {{`{{ $labels.device }}`}} at {{`{{ $labels.instance }}`}} has only {{`{{ printf "%.2f" $value }}`}}% available inodes left.
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodefilesystemalmostoutoffiles
>         summary: Filesystem has less than 3% inodes left.
>       expr: |-
>         (
>           node_filesystem_files_free{job="node-exporter",fstype!=""} / node_filesystem_files{job="node-exporter",fstype!=""} * 100 < 3
>         and
>           node_filesystem_readonly{job="node-exporter",fstype!=""} == 0
>         )
>       for: 1h
>       labels:
>         severity: critical
>     - alert: NodeNetworkReceiveErrs
>       annotations:
>         description: '{{`{{ $labels.instance }}`}} interface {{`{{ $labels.device }}`}} has encountered {{`{{ printf "%.0f" $value }}`}} receive errors in the last two minutes.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodenetworkreceiveerrs
>         summary: Network interface is reporting many receive errors.
>       expr: increase(node_network_receive_errs_total[2m]) > 10
>       for: 1h
>       labels:
>         severity: warning
>     - alert: NodeNetworkTransmitErrs
>       annotations:
>         description: '{{`{{ $labels.instance }}`}} interface {{`{{ $labels.device }}`}} has encountered {{`{{ printf "%.0f" $value }}`}} transmit errors in the last two minutes.'
>         runbook_url: {{ .Values.defaultRules.runbookUrl }}alert-name-nodenetworktransmiterrs
>         summary: Network interface is reporting many transmit errors.
>       expr: increase(node_network_transmit_errs_total[2m]) > 10
>       for: 1h
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/node-network.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/node-network.yaml
0a1,34
> {{- /*
> Generated from 'node-network' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.network }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "node-network" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: node-network
>     rules:
>     - alert: NodeNetworkInterfaceFlapping
>       annotations:
>         message: Network interface "{{`{{ $labels.device }}`}}" changing it's up status often on node-exporter {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}}"
>       expr: changes(node_network_up{job="node-exporter",device!~"veth.+"}[2m]) > 2
>       for: 2m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/node-time.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/node-time.yaml
0a1,34
> {{- /*
> Generated from 'node-time' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.time }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "node-time" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: node-time
>     rules:
>     - alert: ClockSkewDetected
>       annotations:
>         message: Clock skew detected on node-exporter {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}}. Ensure NTP is configured correctly on this host.
>       expr: abs(node_timex_offset_seconds{job="node-exporter"}) > 0.05
>       for: 2m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/node.rules.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/node.rules.yaml
0a1,49
> {{- /*
> Generated from 'node.rules' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.nodeExporter.enabled .Values.defaultRules.rules.node }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "node.rules" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: node.rules
>     rules:
>     - expr: sum(min(kube_pod_info) by (node))
>       record: ':kube_pod_info_node_count:'
>     - expr: max(label_replace(kube_pod_info{job="kube-state-metrics"}, "pod", "$1", "pod", "(.*)")) by (node, namespace, pod)
>       record: 'node_namespace_pod:kube_pod_info:'
>     - expr: |-
>         count by (node) (sum by (node, cpu) (
>           node_cpu_seconds_total{job="node-exporter"}
>         * on (namespace, pod) group_left(node)
>           node_namespace_pod:kube_pod_info:
>         ))
>       record: node:node_num_cpu:sum
>     - expr: |-
>         sum(
>           node_memory_MemAvailable_bytes{job="node-exporter"} or
>           (
>             node_memory_Buffers_bytes{job="node-exporter"} +
>             node_memory_Cached_bytes{job="node-exporter"} +
>             node_memory_MemFree_bytes{job="node-exporter"} +
>             node_memory_Slab_bytes{job="node-exporter"}
>           )
>         )
>       record: :node_memory_MemAvailable_bytes:sum
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/prometheus-operator.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/prometheus-operator.yaml
0a1,43
> {{- /*
> Generated from 'prometheus-operator' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.prometheusOperator }}
> {{- $operatorJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "operator" }}
> {{- $namespace := .Release.Namespace }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "prometheus-operator" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: prometheus-operator
>     rules:
>     - alert: PrometheusOperatorReconcileErrors
>       annotations:
>         message: Errors while reconciling {{`{{ $labels.controller }}`}} in {{`{{ $labels.namespace }}`}} Namespace.
>       expr: rate(prometheus_operator_reconcile_errors_total{job="{{ $operatorJob }}",namespace="{{ $namespace }}"}[5m]) > 0.1
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusOperatorNodeLookupErrors
>       annotations:
>         message: Errors while reconciling Prometheus in {{`{{ $labels.namespace }}`}} Namespace.
>       expr: rate(prometheus_operator_node_address_lookup_errors_total{job="{{ $operatorJob }}",namespace="{{ $namespace }}"}[5m]) > 0.1
>       for: 10m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/rules-1.14/prometheus.yaml packages/monitoring/charts/templates/prometheus/rules-1.14/prometheus.yaml
0a1,202
> {{- /*
> Generated from 'prometheus' group from https://raw.githubusercontent.com/coreos/kube-prometheus/master/manifests/prometheus-rules.yaml
> Do not change in-place! In order to change this file first read following link:
> https://github.com/helm/charts/tree/master/stable/prometheus-operator/hack
> */ -}}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.prometheus }}
> {{- $prometheusJob := printf "%s-%s" (include "prometheus-operator.fullname" .) "prometheus" }}
> {{- $namespace := .Release.Namespace }}
> apiVersion: monitoring.coreos.com/v1
> kind: PrometheusRule
> metadata:
>   name: {{ printf "%s-%s" (include "prometheus-operator.fullname" .) "prometheus" | trunc 63 | trimSuffix "-" }}
>   namespace: {{ .Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.defaultRules.labels }}
> {{ toYaml .Values.defaultRules.labels | indent 4 }}
> {{- end }}
> {{- if .Values.defaultRules.annotations }}
>   annotations:
> {{ toYaml .Values.defaultRules.annotations | indent 4 }}
> {{- end }}
> spec:
>   groups:
>   - name: prometheus
>     rules:
>     - alert: PrometheusBadConfig
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} has failed to reload its configuration.
>         summary: Failed Prometheus configuration reload.
>       expr: |-
>         # Without max_over_time, failed scrapes could create false negatives, see
>         # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
>         max_over_time(prometheus_config_last_reload_successful{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) == 0
>       for: 10m
>       labels:
>         severity: critical
>     - alert: PrometheusNotificationQueueRunningFull
>       annotations:
>         description: Alert notification queue of Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} is running full.
>         summary: Prometheus alert notification queue predicted to run full in less than 30m.
>       expr: |-
>         # Without min_over_time, failed scrapes could create false negatives, see
>         # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
>         (
>           predict_linear(prometheus_notifications_queue_length{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m], 60 * 30)
>         >
>           min_over_time(prometheus_notifications_queue_capacity{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         )
>       for: 15m
>       labels:
>         severity: warning
>     - alert: PrometheusErrorSendingAlertsToSomeAlertmanagers
>       annotations:
>         description: '{{`{{ printf "%.1f" $value }}`}}% errors while sending alerts from Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} to Alertmanager {{`{{$labels.alertmanager}}`}}.'
>         summary: Prometheus has encountered more than 1% errors sending alerts to a specific Alertmanager.
>       expr: |-
>         (
>           rate(prometheus_notifications_errors_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         /
>           rate(prometheus_notifications_sent_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         )
>         * 100
>         > 1
>       for: 15m
>       labels:
>         severity: warning
>     - alert: PrometheusErrorSendingAlertsToAnyAlertmanager
>       annotations:
>         description: '{{`{{ printf "%.1f" $value }}`}}% minimum errors while sending alerts from Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} to any Alertmanager.'
>         summary: Prometheus encounters more than 3% errors sending alerts to any Alertmanager.
>       expr: |-
>         min without(alertmanager) (
>           rate(prometheus_notifications_errors_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         /
>           rate(prometheus_notifications_sent_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         )
>         * 100
>         > 3
>       for: 15m
>       labels:
>         severity: critical
>     - alert: PrometheusNotConnectedToAlertmanagers
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} is not connected to any Alertmanagers.
>         summary: Prometheus is not connected to any Alertmanagers.
>       expr: |-
>         # Without max_over_time, failed scrapes could create false negatives, see
>         # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
>         max_over_time(prometheus_notifications_alertmanagers_discovered{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) < 1
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusTSDBReloadsFailing
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} has detected {{`{{$value | humanize}}`}} reload failures over the last 3h.
>         summary: Prometheus has issues reloading blocks from disk.
>       expr: increase(prometheus_tsdb_reloads_failures_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[3h]) > 0
>       for: 4h
>       labels:
>         severity: warning
>     - alert: PrometheusTSDBCompactionsFailing
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} has detected {{`{{$value | humanize}}`}} compaction failures over the last 3h.
>         summary: Prometheus has issues compacting blocks.
>       expr: increase(prometheus_tsdb_compactions_failed_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[3h]) > 0
>       for: 4h
>       labels:
>         severity: warning
>     - alert: PrometheusNotIngestingSamples
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} is not ingesting samples.
>         summary: Prometheus is not ingesting samples.
>       expr: rate(prometheus_tsdb_head_samples_appended_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) <= 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusDuplicateTimestamps
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} is dropping {{`{{ printf "%.4g" $value  }}`}} samples/s with different values but duplicated timestamp.
>         summary: Prometheus is dropping samples with duplicate timestamps.
>       expr: rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) > 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusOutOfOrderTimestamps
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} is dropping {{`{{ printf "%.4g" $value  }}`}} samples/s with timestamps arriving out of order.
>         summary: Prometheus drops samples with out-of-order timestamps.
>       expr: rate(prometheus_target_scrapes_sample_out_of_order_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) > 0
>       for: 10m
>       labels:
>         severity: warning
>     - alert: PrometheusRemoteStorageFailures
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} failed to send {{`{{ printf "%.1f" $value }}`}}% of the samples to queue {{`{{$labels.queue}}`}}.
>         summary: Prometheus fails to send samples to remote storage.
>       expr: |-
>         (
>           rate(prometheus_remote_storage_failed_samples_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         /
>           (
>             rate(prometheus_remote_storage_failed_samples_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>           +
>             rate(prometheus_remote_storage_succeeded_samples_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>           )
>         )
>         * 100
>         > 1
>       for: 15m
>       labels:
>         severity: critical
>     - alert: PrometheusRemoteWriteBehind
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} remote write is {{`{{ printf "%.1f" $value }}`}}s behind for queue {{`{{$labels.queue}}`}}.
>         summary: Prometheus remote write is behind.
>       expr: |-
>         # Without max_over_time, failed scrapes could create false negatives, see
>         # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
>         (
>           max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         - on(job, instance) group_right
>           max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         )
>         > 120
>       for: 15m
>       labels:
>         severity: critical
>     - alert: PrometheusRemoteWriteDesiredShards
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} remote write desired shards calculation wants to run {{`{{ printf $value }}`}} shards, which is more than the max of {{print `{{ printf ` "`" `prometheus_remote_storage_shards_max{instance="%s",job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}` "`" ` $labels.instance | query | first | value }}`}}.
>         summary: Prometheus remote write desired shards calculation wants to run more than configured max shards.
>       expr: |-
>         # Without max_over_time, failed scrapes could create false negatives, see
>         # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
>         (
>           max_over_time(prometheus_remote_storage_shards_desired{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         >
>           max_over_time(prometheus_remote_storage_shards_max{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m])
>         )
>       for: 15m
>       labels:
>         severity: warning
>     - alert: PrometheusRuleFailures
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} has failed to evaluate {{`{{ printf "%.0f" $value }}`}} rules in the last 5m.
>         summary: Prometheus is failing rule evaluations.
>       expr: increase(prometheus_rule_evaluation_failures_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) > 0
>       for: 15m
>       labels:
>         severity: critical
>     - alert: PrometheusMissingRuleEvaluations
>       annotations:
>         description: Prometheus {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} has missed {{`{{ printf "%.0f" $value }}`}} rule group evaluations in the last 5m.
>         summary: Prometheus is missing rule evaluations due to slow rule group evaluation.
>       expr: increase(prometheus_rule_group_iterations_missed_total{job="{{ $prometheusJob }}",namespace="{{ $namespace }}"}[5m]) > 0
>       for: 15m
>       labels:
>         severity: warning
> {{- end }}
\ No newline at end of file
diff -Nr packages/monitoring/charts-original/templates/prometheus/service.yaml packages/monitoring/charts/templates/prometheus/service.yaml
0a1,52
> {{- if .Values.prometheus.enabled }}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
>     self-monitor: {{ .Values.prometheus.serviceMonitor.selfMonitor | quote }}
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.prometheus.service.labels }}
> {{ toYaml .Values.prometheus.service.labels | indent 4 }}
> {{- end }}
> {{- if .Values.prometheus.service.annotations }}
>   annotations:
> {{ toYaml .Values.prometheus.service.annotations | indent 4 }}
> {{- end }}
> spec:
> {{- if .Values.prometheus.service.clusterIP }}
>   clusterIP: {{ .Values.prometheus.service.clusterIP }}
> {{- end }}
> {{- if .Values.prometheus.service.externalIPs }}
>   externalIPs:
> {{ toYaml .Values.prometheus.service.externalIPs | indent 4 }}
> {{- end }}
> {{- if .Values.prometheus.service.loadBalancerIP }}
>   loadBalancerIP: {{ .Values.prometheus.service.loadBalancerIP }}
> {{- end }}
> {{- if .Values.prometheus.service.loadBalancerSourceRanges }}
>   loadBalancerSourceRanges:
>   {{- range $cidr := .Values.prometheus.service.loadBalancerSourceRanges }}
>     - {{ $cidr }}
>   {{- end }}
> {{- end }}
>   ports:
>   - name: {{ .Values.prometheus.prometheusSpec.portName }}
>     {{- if eq .Values.prometheus.service.type "NodePort" }}
>     nodePort: {{ .Values.prometheus.service.nodePort }}
>     {{- end }}
>     port: {{ .Values.prometheus.service.port }}
>     targetPort: {{ .Values.prometheus.service.targetPort }}
> {{- if .Values.prometheus.service.additionalPorts }}
> {{ toYaml .Values.prometheus.service.additionalPorts | indent 2 }}
> {{- end }}
>   selector:
>     app: prometheus
>     prometheus: {{ template "prometheus-operator.fullname" . }}-prometheus
> {{- if .Values.prometheus.service.sessionAffinity }}
>   sessionAffinity: {{ .Values.prometheus.service.sessionAffinity }}
> {{- end }}
>   type: "{{ .Values.prometheus.service.type }}"
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/serviceaccount.yaml packages/monitoring/charts/templates/prometheus/serviceaccount.yaml
0a1,16
> {{- if and .Values.prometheus.enabled .Values.prometheus.serviceAccount.create }}
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   name: {{ template "prometheus-operator.prometheus.serviceAccountName" . }}
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.prometheus.serviceAccount.annotations }}
>   annotations:
> {{ toYaml .Values.prometheus.serviceAccount.annotations | indent 4 }}
> {{- end }}
> imagePullSecrets:
> {{ toYaml .Values.global.imagePullSecrets | indent 2 }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/servicemonitor.yaml packages/monitoring/charts/templates/prometheus/servicemonitor.yaml
0a1,42
> {{- if and .Values.prometheus.enabled .Values.prometheus.serviceMonitor.selfMonitor }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-prometheus
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-prometheus
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-prometheus
>       release: {{ $.Release.Name | quote }}
>       self-monitor: "true"
>   namespaceSelector:
>     matchNames:
>       - {{ $.Release.Namespace | quote }}
>   endpoints:
>   - port: {{ .Values.prometheus.prometheusSpec.portName }}
>     {{- if .Values.prometheus.serviceMonitor.interval }}
>     interval: {{ .Values.prometheus.serviceMonitor.interval }}
>     {{- end }}
>     {{- if .Values.prometheus.serviceMonitor.scheme }}
>     scheme: {{ .Values.prometheus.serviceMonitor.scheme }}
>     {{- end }}
>     {{- if .Values.prometheus.serviceMonitor.tlsConfig }}
>     tlsConfig: {{ toYaml .Values.prometheus.serviceMonitor.tlsConfig | nindent 6 }}
>     {{- end }}
>     {{- if .Values.prometheus.serviceMonitor.bearerTokenFile }}
>     bearerTokenFile: {{ .Values.prometheus.serviceMonitor.bearerTokenFile }}
>     {{- end }}
>     path: "{{ trimSuffix "/" .Values.prometheus.prometheusSpec.routePrefix }}/metrics"
> {{- if .Values.prometheus.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.prometheus.serviceMonitor.metricRelabelings | indent 6) . }}
> {{- end }}
> {{- if .Values.prometheus.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.prometheus.serviceMonitor.relabelings | indent 6 }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/servicemonitors.yaml packages/monitoring/charts/templates/prometheus/servicemonitors.yaml
0a1,34
> {{- if and .Values.prometheus.enabled .Values.prometheus.additionalServiceMonitors }}
> apiVersion: v1
> kind: List
> items:
> {{- range .Values.prometheus.additionalServiceMonitors }}
>   - apiVersion: monitoring.coreos.com/v1
>     kind: ServiceMonitor
>     metadata:
>       name: {{ .name }}
>       namespace: {{ $.Release.Namespace }}
>       labels:
>         app: {{ template "prometheus-operator.name" $ }}-prometheus
> {{ include "prometheus-operator.labels" $ | indent 8 }}
>         {{- if .additionalLabels }}
> {{ toYaml .additionalLabels | indent 8 }}
>         {{- end }}
>     spec:
>       endpoints:
> {{ toYaml .endpoints | indent 8 }}
>     {{- if .jobLabel }}
>       jobLabel: {{ .jobLabel }}
>     {{- end }}
>     {{- if .namespaceSelector }}
>       namespaceSelector:
> {{ toYaml .namespaceSelector | indent 8 }}
>     {{- end }}
>       selector:
> {{ toYaml .selector | indent 8 }}
>     {{- if .targetLabels }}
>       targetLabels:
> {{ toYaml .targetLabels | indent 8 }}
>     {{- end }}
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus/serviceperreplica.yaml packages/monitoring/charts/templates/prometheus/serviceperreplica.yaml
0a1,46
> {{- if and .Values.prometheus.enabled .Values.prometheus.servicePerReplica.enabled }}
> {{- $count := .Values.prometheus.prometheusSpec.replicas | int -}}
> {{- $serviceValues := .Values.prometheus.servicePerReplica -}} 
> apiVersion: v1
> kind: List
> metadata:
>   name: {{ include "prometheus-operator.fullname" $ }}-prometheus-serviceperreplica
>   namespace: {{ $.Release.Namespace }}
> items:
> {{- range $i, $e := until $count }}
>   - apiVersion: v1
>     kind: Service
>     metadata:
>       name: {{ include "prometheus-operator.fullname" $ }}-prometheus-{{ $i }}
>       namespace: {{ $.Release.Namespace }}
>       labels:
>         app: {{ include "prometheus-operator.name" $ }}-prometheus
> {{ include "prometheus-operator.labels" $ | indent 8 }}
>       {{- if $serviceValues.annotations }}
>       annotations:
> {{ toYaml $serviceValues.annotations | indent 8 }}
>       {{- end }}
>     spec:
>       {{- if $serviceValues.clusterIP }}
>       clusterIP: {{ $serviceValues.clusterIP }}
>       {{- end }}
>       {{- if $serviceValues.loadBalancerSourceRanges }}
>       loadBalancerSourceRanges:
>       {{- range $cidr := $serviceValues.loadBalancerSourceRanges }}
>         - {{ $cidr }}
>       {{- end }}
>       {{- end }}
>       ports:
>         - name: {{ $.Values.prometheus.prometheusSpec.portName }}
>           {{- if eq $serviceValues.type "NodePort" }}
>           nodePort: {{ $serviceValues.nodePort }}
>           {{- end }}
>           port: {{ $serviceValues.port }}
>           targetPort: {{ $serviceValues.targetPort }}
>       selector:
>         app: prometheus
>         prometheus: {{ include "prometheus-operator.fullname" $ }}-prometheus
>         statefulset.kubernetes.io/pod-name: prometheus-{{ include "prometheus-operator.fullname" $ }}-prometheus-{{ $i }}
>       type: "{{ $serviceValues.type }}"
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/job-patch/clusterrole.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/job-patch/clusterrole.yaml
0a1,33
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled .Values.global.rbac.create }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   name:  {{ template "prometheus-operator.fullname" . }}-admission
>   annotations:
>     "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
>     "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
>   labels:
>     app: {{ template "prometheus-operator.name" $ }}-admission
> {{- include "prometheus-operator.labels" $ | indent 4 }}
> rules:
>   - apiGroups:
>       - admissionregistration.k8s.io
>     resources:
>       - validatingwebhookconfigurations
>       - mutatingwebhookconfigurations
>     verbs:
>       - get
>       - update
> {{- if .Values.global.rbac.pspEnabled }}
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if semverCompare "> 1.15.0-0" $kubeTargetVersion }}
>   - apiGroups: ['policy']
> {{- else }}
>   - apiGroups: ['extensions']
> {{- end }}
>     resources: ['podsecuritypolicies']
>     verbs:     ['use']
>     resourceNames:
>     - {{ template "prometheus-operator.fullname" . }}-admission
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/job-patch/clusterrolebinding.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/job-patch/clusterrolebinding.yaml
0a1,21
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled .Values.global.rbac.create  }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   name:  {{ template "prometheus-operator.fullname" . }}-admission
>   namespace: {{ $.Release.Namespace }}
>   annotations:
>     "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
>     "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
>   labels:
>     app: {{ template "prometheus-operator.name" $ }}-admission
> {{- include "prometheus-operator.labels" $ | indent 4 }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: {{ template "prometheus-operator.fullname" . }}-admission
> subjects:
>   - kind: ServiceAccount
>     name: {{ template "prometheus-operator.fullname" . }}-admission
>     namespace: {{ $.Release.Namespace }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/job-patch/job-createSecret.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/job-patch/job-createSecret.yaml
0a1,60
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled }}
> apiVersion: batch/v1
> kind: Job
> metadata:
>   name:  {{ template "prometheus-operator.fullname" . }}-admission-create
>   namespace: {{ $.Release.Namespace }}
>   annotations:
>     "helm.sh/hook": pre-install,pre-upgrade
>     "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
>   labels:
>     app: {{ template "prometheus-operator.name" $ }}-admission-create
> {{- include "prometheus-operator.labels" $ | indent 4 }}
> spec:
>   {{- if .Capabilities.APIVersions.Has "batch/v1alpha1" }}
>   # Alpha feature since k8s 1.12
>   ttlSecondsAfterFinished: 0
>   {{- end }}
>   template:
>     metadata:
>       name:  {{ template "prometheus-operator.fullname" . }}-admission-create
> {{- with .Values.prometheusOperator.admissionWebhooks.patch.podAnnotations }}
>       annotations:
> {{ toYaml .  | indent 8 }}
> {{- end }}
>       labels:
>         app: {{ template "prometheus-operator.name" $ }}-admission-create
> {{- include "prometheus-operator.labels" $ | indent 8 }}
>     spec:
>       {{- if .Values.prometheusOperator.admissionWebhooks.patch.priorityClassName }}
>       priorityClassName: {{ .Values.prometheusOperator.admissionWebhooks.patch.priorityClassName }}
>       {{- end }}
>       containers:
>         - name: create
>           image: {{ .Values.prometheusOperator.admissionWebhooks.patch.image.repository }}:{{ .Values.prometheusOperator.admissionWebhooks.patch.image.tag }}
>           imagePullPolicy: {{ .Values.prometheusOperator.admissionWebhooks.patch.pullPolicy }}
>           args:
>             - create
>             - --host={{ template "prometheus-operator.operator.fullname" . }},{{ template "prometheus-operator.operator.fullname" . }}.{{ $.Release.Namespace }}.svc
>             - --namespace={{ $.Release.Namespace }}
>             - --secret-name={{ template "prometheus-operator.fullname" . }}-admission
>           resources:
> {{ toYaml .Values.prometheusOperator.admissionWebhooks.patch.resources | indent 12 }}
>       restartPolicy: OnFailure
>       serviceAccountName: {{ template "prometheus-operator.fullname" . }}-admission
>       {{- with .Values.prometheusOperator.admissionWebhooks.patch.nodeSelector }}
>       nodeSelector:
> {{ toYaml . | indent 8 }}
>       {{- end }}
>       {{- with .Values.prometheusOperator.admissionWebhooks.patch.affinity }}
>       affinity:
> {{ toYaml . | indent 8 }}
>       {{- end }}
>       {{- with .Values.prometheusOperator.admissionWebhooks.patch.tolerations }}
>       tolerations:
> {{ toYaml . | indent 8 }}
>       {{- end }}
>       securityContext:
>         runAsNonRoot: true
>         runAsUser: 2000
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/job-patch/job-patchWebhook.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/job-patch/job-patchWebhook.yaml
0a1,61
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled }}
> apiVersion: batch/v1
> kind: Job
> metadata:
>   name:  {{ template "prometheus-operator.fullname" . }}-admission-patch
>   namespace: {{ $.Release.Namespace }}
>   annotations:
>     "helm.sh/hook": post-install,post-upgrade
>     "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
>   labels:
>     app: {{ template "prometheus-operator.name" $ }}-admission-patch
> {{- include "prometheus-operator.labels" $ | indent 4 }}
> spec:
>   {{- if .Capabilities.APIVersions.Has "batch/v1alpha1" }}
>   # Alpha feature since k8s 1.12
>   ttlSecondsAfterFinished: 0
>   {{- end }}
>   template:
>     metadata:
>       name:  {{ template "prometheus-operator.fullname" . }}-admission-patch
> {{- with .Values.prometheusOperator.admissionWebhooks.patch.podAnnotations }}
>       annotations:
> {{ toYaml .  | indent 8 }}
> {{- end }}
>       labels:
>         app: {{ template "prometheus-operator.name" $ }}-admission-patch
> {{- include "prometheus-operator.labels" $ | indent 8 }}
>     spec:
>       {{- if .Values.prometheusOperator.admissionWebhooks.patch.priorityClassName }}
>       priorityClassName: {{ .Values.prometheusOperator.admissionWebhooks.patch.priorityClassName }}
>       {{- end }}
>       containers:
>         - name: patch
>           image: {{ .Values.prometheusOperator.admissionWebhooks.patch.image.repository }}:{{ .Values.prometheusOperator.admissionWebhooks.patch.image.tag }}
>           imagePullPolicy: {{ .Values.prometheusOperator.admissionWebhooks.patch.pullPolicy }}
>           args:
>             - patch
>             - --webhook-name={{ template "prometheus-operator.fullname" . }}-admission
>             - --namespace={{ $.Release.Namespace }}
>             - --secret-name={{ template "prometheus-operator.fullname" . }}-admission
>             - --patch-failure-policy={{ .Values.prometheusOperator.admissionWebhooks.failurePolicy }}
>           resources:
> {{ toYaml .Values.prometheusOperator.admissionWebhooks.patch.resources | indent 12 }}
>       restartPolicy: OnFailure
>       serviceAccountName: {{ template "prometheus-operator.fullname" . }}-admission
>       {{- with .Values.prometheusOperator.admissionWebhooks.patch.nodeSelector }}
>       nodeSelector:
> {{ toYaml . | indent 8 }}
>       {{- end }}
>       {{- with .Values.prometheusOperator.admissionWebhooks.patch.affinity }}
>       affinity:
> {{ toYaml . | indent 8 }}
>       {{- end }}
>       {{- with .Values.prometheusOperator.admissionWebhooks.patch.tolerations }}
>       tolerations:
> {{ toYaml . | indent 8 }}
>       {{- end }}
>       securityContext:
>         runAsNonRoot: true
>         runAsUser: 2000
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/job-patch/psp.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/job-patch/psp.yaml
0a1,51
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> apiVersion: policy/v1beta1
> kind: PodSecurityPolicy
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-admission
>   namespace: {{ $.Release.Namespace }}
>   annotations:
>     "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
>     "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-admission
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   privileged: false
>   # Required to prevent escalations to root.
>   # allowPrivilegeEscalation: false
>   # This is redundant with non-root + disallow privilege escalation,
>   # but we can provide it for defense in depth.
>   #requiredDropCapabilities:
>   #  - ALL
>   # Allow core volume types.
>   volumes:
>     - 'configMap'
>     - 'emptyDir'
>     - 'projected'
>     - 'secret'
>     - 'downwardAPI'
>     - 'persistentVolumeClaim'
>   hostNetwork: false
>   hostIPC: false
>   hostPID: false
>   runAsUser:
>     # Permits the container to run with root privileges as well.
>     rule: 'RunAsAny'
>   seLinux:
>     # This policy assumes the nodes are using AppArmor rather than SELinux.
>     rule: 'RunAsAny'
>   supplementalGroups:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   fsGroup:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   readOnlyRootFilesystem: false
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/job-patch/role.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/job-patch/role.yaml
0a1,21
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled .Values.global.rbac.create  }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name:  {{ template "prometheus-operator.fullname" . }}-admission
>   namespace: {{ $.Release.Namespace }}
>   annotations:
>     "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
>     "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
>   labels:
>     app: {{ template "prometheus-operator.name" $ }}-admission
> {{- include "prometheus-operator.labels" $ | indent 4 }}
> rules:
>   - apiGroups:
>       - ""
>     resources:
>       - secrets
>     verbs:
>       - get
>       - create
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/job-patch/rolebinding.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/job-patch/rolebinding.yaml
0a1,21
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled .Values.global.rbac.create  }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name:  {{ template "prometheus-operator.fullname" . }}-admission
>   namespace: {{ $.Release.Namespace }}
>   annotations:
>     "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
>     "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
>   labels:
>     app: {{ template "prometheus-operator.name" $ }}-admission
> {{- include "prometheus-operator.labels" $ | indent 4 }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: {{ template "prometheus-operator.fullname" . }}-admission
> subjects:
>   - kind: ServiceAccount
>     name: {{ template "prometheus-operator.fullname" . }}-admission
>     namespace: {{ $.Release.Namespace }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/job-patch/serviceaccount.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/job-patch/serviceaccount.yaml
0a1,13
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled .Values.global.rbac.create  }}
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   name:  {{ template "prometheus-operator.fullname" . }}-admission
>   namespace: {{ $.Release.Namespace }}
>   annotations:
>     "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
>     "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
>   labels:
>     app: {{ template "prometheus-operator.name" $ }}-admission
> {{- include "prometheus-operator.labels" $ | indent 4 }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/mutatingWebhookConfiguration.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/mutatingWebhookConfiguration.yaml
0a1,31
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled }}
> apiVersion: admissionregistration.k8s.io/v1beta1
> kind: MutatingWebhookConfiguration
> metadata:
>   name:  {{ template "prometheus-operator.fullname" . }}-admission
>   labels:
>     app: {{ template "prometheus-operator.name" $ }}-admission
> {{- include "prometheus-operator.labels" $ | indent 4 }}
> webhooks:
>   - name: prometheusrulemutate.monitoring.coreos.com
>     {{- if .Values.prometheusOperator.admissionWebhooks.patch.enabled  }}
>     failurePolicy: Ignore
>     {{- else }}
>     failurePolicy: {{ .Values.prometheusOperator.admissionWebhooks.failurePolicy }}
>     {{- end }}
>     rules:
>       - apiGroups:
>           - monitoring.coreos.com
>         apiVersions:
>           - "*"
>         resources:
>           - prometheusrules
>         operations:
>           - CREATE
>           - UPDATE
>     clientConfig:
>       service:
>         namespace: {{ $.Release.Namespace }}
>         name: {{ template "prometheus-operator.operator.fullname" $ }}
>         path: /admission-prometheusrules/mutate
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/admission-webhooks/validatingWebhookConfiguration.yaml packages/monitoring/charts/templates/prometheus-operator/admission-webhooks/validatingWebhookConfiguration.yaml
0a1,31
> {{- if and .Values.prometheusOperator.admissionWebhooks.enabled }}
> apiVersion: admissionregistration.k8s.io/v1beta1
> kind: ValidatingWebhookConfiguration
> metadata:
>   name:  {{ template "prometheus-operator.fullname" . }}-admission
>   labels:
>     app: {{ template "prometheus-operator.name" $ }}-admission
> {{- include "prometheus-operator.labels" $ | indent 4 }}
> webhooks:
>   - name: prometheusrulemutate.monitoring.coreos.com
>     {{- if .Values.prometheusOperator.admissionWebhooks.patch.enabled  }}
>     failurePolicy: Ignore
>     {{- else }}
>     failurePolicy: {{ .Values.prometheusOperator.admissionWebhooks.failurePolicy }}
>     {{- end }}
>     rules:
>       - apiGroups:
>           - monitoring.coreos.com
>         apiVersions:
>           - "*"
>         resources:
>           - prometheusrules
>         operations:
>           - CREATE
>           - UPDATE
>     clientConfig:
>       service:
>         namespace: {{ $.Release.Namespace }}
>         name: {{ template "prometheus-operator.operator.fullname" $ }}
>         path: /admission-prometheusrules/validate
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/cleanup-crds.yaml packages/monitoring/charts/templates/prometheus-operator/cleanup-crds.yaml
0a1,45
> {{- if and .Values.prometheusOperator.enabled .Values.prometheusOperator.cleanupCustomResource }}
> apiVersion: batch/v1
> kind: Job
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-operator-cleanup
>   namespace: {{ $.Release.Namespace }}
>   annotations:
>     "helm.sh/hook": pre-delete
>     "helm.sh/hook-weight": "3"
>     "helm.sh/hook-delete-policy": hook-succeeded
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   template:
>     metadata:
>       name: {{ template "prometheus-operator.fullname" . }}-operator-cleanup
>       labels:
>         app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 8 }}
>     spec:
>     {{- if .Values.global.rbac.create }}
>       serviceAccountName: {{ template "prometheus-operator.operator.serviceAccountName" . }}
>     {{- end }}
>       containers:
>         - name: kubectl
>           image: "{{ .Values.prometheusOperator.hyperkubeImage.repository }}:{{ .Values.prometheusOperator.hyperkubeImage.tag }}"
>           imagePullPolicy: "{{ .Values.prometheusOperator.hyperkubeImage.pullPolicy }}"
>           command:
>           - /bin/sh
>           - -c
>           - >
>               kubectl delete alertmanager   --all;
>               kubectl delete prometheus     --all;
>               kubectl delete prometheusrule --all;
>               kubectl delete servicemonitor --all;
>               sleep 10;
>               kubectl delete crd alertmanagers.monitoring.coreos.com;
>               kubectl delete crd prometheuses.monitoring.coreos.com;
>               kubectl delete crd prometheusrules.monitoring.coreos.com;
>               kubectl delete crd servicemonitors.monitoring.coreos.com;
>               kubectl delete crd podmonitors.monitoring.coreos.com;
>               kubectl delete crd thanosrulers.monitoring.coreos.com;
>       restartPolicy: OnFailure
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/clusterrole.yaml packages/monitoring/charts/templates/prometheus-operator/clusterrole.yaml
0a1,77
> {{- if and .Values.prometheusOperator.enabled .Values.global.rbac.create }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-operator
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> rules:
> - apiGroups:
>   - apiextensions.k8s.io
>   resources:
>   - customresourcedefinitions
>   verbs:
>   - '*'
> - apiGroups:
>   - monitoring.coreos.com
>   resources:
>   - alertmanagers
>   - prometheuses
>   - thanosrulers
>   - prometheuses/finalizers
>   - alertmanagers/finalizers
>   - thanosrulers/finalizers
>   - servicemonitors
>   - podmonitors
>   - prometheusrules
>   - podmonitors
>   verbs:
>   - '*'
> - apiGroups:
>   - apps
>   resources:
>   - statefulsets
>   verbs:
>   - '*'
> - apiGroups:
>   - ""
>   resources:
>   - configmaps
>   - secrets
>   verbs:
>   - '*'
> - apiGroups:
>   - ""
>   resources:
>   - pods
>   verbs:
>   - list
>   - delete
> - apiGroups:
>   - ""
>   resources:
>   - services
>   - services/finalizers
>   - endpoints
>   verbs:
>   - get
>   - create
>   - update
>   - delete
> - apiGroups:
>   - ""
>   resources:
>   - nodes
>   verbs:
>   - list
>   - watch
> - apiGroups:
>   - ""
>   resources:
>   - namespaces
>   verbs:
>   - get
>   - list
>   - watch
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/clusterrolebinding.yaml packages/monitoring/charts/templates/prometheus-operator/clusterrolebinding.yaml
0a1,17
> {{- if and .Values.prometheusOperator.enabled .Values.global.rbac.create }}
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-operator
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: {{ template "prometheus-operator.fullname" . }}-operator
> subjects:
> - kind: ServiceAccount
>   name: {{ template "prometheus-operator.operator.serviceAccountName" . }}
>   namespace: {{ $.Release.Namespace }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/crds.yaml packages/monitoring/charts/templates/prometheus-operator/crds.yaml
0a1,6
> {{- if and .Values.prometheusOperator.enabled .Values.prometheusOperator.createCustomResource -}}
> {{- range $path, $bytes := .Files.Glob "crds/*.yaml" }}
> {{ $.Files.Get $path }}
> ---
> {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/deployment.yaml packages/monitoring/charts/templates/prometheus-operator/deployment.yaml
0a1,119
> {{- if .Values.prometheusOperator.enabled }}
> apiVersion: apps/v1
> kind: Deployment
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-operator
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   replicas: 1
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-operator
>       release: {{ $.Release.Name | quote }}
>   template:
>     metadata:
>       labels:
>         app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 8 }}
> {{- if .Values.prometheusOperator.podLabels }}
> {{ toYaml .Values.prometheusOperator.podLabels | indent 8 }}
> {{- end }}
> {{- if .Values.prometheusOperator.podAnnotations }}
>       annotations:
> {{ toYaml .Values.prometheusOperator.podAnnotations | indent 8 }}
> {{- end }}
>     spec:
>     {{- if .Values.prometheusOperator.priorityClassName }}
>       priorityClassName: {{ .Values.prometheusOperator.priorityClassName }}
>     {{- end }}
>       containers:
>         - name: {{ template "prometheus-operator.name" . }}
>           image: "{{ .Values.prometheusOperator.image.repository }}:{{ .Values.prometheusOperator.image.tag }}"
>           imagePullPolicy: "{{ .Values.prometheusOperator.image.pullPolicy }}"
>           args:
>             - --manage-crds={{ $.Values.prometheusOperator.manageCrds }}
>           {{- if .Values.prometheusOperator.kubeletService.enabled }}
>             - --kubelet-service={{ .Values.prometheusOperator.kubeletService.namespace }}/{{ template "prometheus-operator.fullname" . }}-kubelet
>           {{- end }}
>           {{- if .Values.prometheusOperator.logFormat }}
>             - --log-format={{ .Values.prometheusOperator.logFormat }}
>           {{- end }}
>           {{- if .Values.prometheusOperator.logLevel }}
>             - --log-level={{ .Values.prometheusOperator.logLevel }}
>           {{- end }}
>           {{- if .Values.prometheusOperator.denyNamespaces }}
>             - --deny-namespaces={{ .Values.prometheusOperator.denyNamespaces | join "," }}
>           {{- end }}
>           {{- with $.Values.prometheusOperator.namespaces }}
>           {{ $ns := .additional }}
>           {{- if .releaseNamespace }}
>           {{- $ns = append $ns $.Release.Namespace }}
>           {{- end }}
>             - --namespaces={{ $ns | join "," }}
>           {{- end }}
>             - --logtostderr=true
>             - --localhost=127.0.0.1
>             - --prometheus-config-reloader={{ .Values.prometheusOperator.prometheusConfigReloaderImage.repository }}:{{ .Values.prometheusOperator.prometheusConfigReloaderImage.tag }}
>             - --config-reloader-image={{ .Values.prometheusOperator.configmapReloadImage.repository }}:{{ .Values.prometheusOperator.configmapReloadImage.tag }}
>             - --config-reloader-cpu={{ .Values.prometheusOperator.configReloaderCpu }}
>             - --config-reloader-memory={{ .Values.prometheusOperator.configReloaderMemory }}
>           ports:
>             - containerPort: 8080
>               name: http
>           resources:
> {{ toYaml .Values.prometheusOperator.resources | indent 12 }}
>           securityContext:
>             allowPrivilegeEscalation: false
>             readOnlyRootFilesystem: true
>         {{- if .Values.prometheusOperator.tlsProxy.enabled }}
>         - name: tls-proxy
>           image: {{ .Values.prometheusOperator.tlsProxy.image.repository }}:{{ .Values.prometheusOperator.tlsProxy.image.tag }}
>           imagePullPolicy: {{ .Values.prometheusOperator.tlsProxy.image.pullPolicy }}
>           args:
>             - server
>             - --listen=:8443
>             - --target=127.0.0.1:8080
>             - --key=cert/key
>             - --cert=cert/cert
>             - --disable-authentication
>           resources:
> {{ toYaml .Values.prometheusOperator.tlsProxy.resources | indent 12 }}
>           volumeMounts:
>           - name: tls-proxy-secret
>             mountPath: /cert
>             readOnly: true
>           ports:
>             - containerPort: 8443
>               name: https
>           securityContext:
>             allowPrivilegeEscalation: false
>             readOnlyRootFilesystem: true
>         {{- end }}
> {{- if .Values.prometheusOperator.tlsProxy.enabled }}
>       volumes:
>         - name: tls-proxy-secret
>           secret:
>             defaultMode: 420
>             secretName: {{ template "prometheus-operator.fullname" . }}-admission
> {{- end }}
> {{- if .Values.prometheusOperator.securityContext }}
>       securityContext:
> {{ toYaml .Values.prometheusOperator.securityContext | indent 8 }}
> {{- end }}
>       serviceAccountName: {{ template "prometheus-operator.operator.serviceAccountName" . }}
>     {{- with .Values.prometheusOperator.nodeSelector }}
>       nodeSelector:
> {{ toYaml . | indent 8 }}
>     {{- end }}
>     {{- with .Values.prometheusOperator.affinity }}
>       affinity:
> {{ toYaml . | indent 8 }}
>     {{- end }}
>     {{- with .Values.prometheusOperator.tolerations }}
>       tolerations:
> {{ toYaml . | indent 8 }}
>     {{- end }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/psp-clusterrole.yaml packages/monitoring/charts/templates/prometheus-operator/psp-clusterrole.yaml
0a1,20
> {{- if and .Values.prometheusOperator.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> kind: ClusterRole
> apiVersion: rbac.authorization.k8s.io/v1
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-operator-psp
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> rules:
> {{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
> {{- if semverCompare "> 1.15.0-0" $kubeTargetVersion }}
> - apiGroups: ['policy']
> {{- else }}
> - apiGroups: ['extensions']
> {{- end }}
>   resources: ['podsecuritypolicies']
>   verbs:     ['use']
>   resourceNames:
>   - {{ template "prometheus-operator.fullname" . }}-operator
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/psp-clusterrolebinding.yaml packages/monitoring/charts/templates/prometheus-operator/psp-clusterrolebinding.yaml
0a1,17
> {{- if and .Values.prometheusOperator.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> kind: ClusterRoleBinding
> apiVersion: rbac.authorization.k8s.io/v1
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-operator-psp
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: {{ template "prometheus-operator.fullname" . }}-operator-psp
> subjects:
>   - kind: ServiceAccount
>     name: {{ template "prometheus-operator.operator.serviceAccountName" . }}
>     namespace: {{ $.Release.Namespace }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/psp.yaml packages/monitoring/charts/templates/prometheus-operator/psp.yaml
0a1,48
> {{- if and .Values.prometheusOperator.enabled .Values.global.rbac.create .Values.global.rbac.pspEnabled }}
> apiVersion: policy/v1beta1
> kind: PodSecurityPolicy
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-operator
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   privileged: false
>   # Required to prevent escalations to root.
>   # allowPrivilegeEscalation: false
>   # This is redundant with non-root + disallow privilege escalation,
>   # but we can provide it for defense in depth.
>   #requiredDropCapabilities:
>   #  - ALL
>   # Allow core volume types.
>   volumes:
>     - 'configMap'
>     - 'emptyDir'
>     - 'projected'
>     - 'secret'
>     - 'downwardAPI'
>     - 'persistentVolumeClaim'
>   hostNetwork: false
>   hostIPC: false
>   hostPID: false
>   runAsUser:
>     # Permits the container to run with root privileges as well.
>     rule: 'RunAsAny'
>   seLinux:
>     # This policy assumes the nodes are using AppArmor rather than SELinux.
>     rule: 'RunAsAny'
>   supplementalGroups:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   fsGroup:
>     rule: 'MustRunAs'
>     ranges:
>       # Forbid adding the root group.
>       - min: 0
>         max: 65535
>   readOnlyRootFilesystem: false
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/service.yaml packages/monitoring/charts/templates/prometheus-operator/service.yaml
0a1,53
> {{- if .Values.prometheusOperator.enabled }}
> apiVersion: v1
> kind: Service
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-operator
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> {{- if .Values.prometheusOperator.service.labels }}
> {{ toYaml .Values.prometheusOperator.service.labels | indent 4 }}
> {{- end }}
> {{- if .Values.prometheusOperator.service.annotations }}
>   annotations:
> {{ toYaml .Values.prometheusOperator.service.annotations | indent 4 }}
> {{- end }}
> spec:
> {{- if .Values.prometheusOperator.service.clusterIP }}
>   clusterIP: {{ .Values.prometheusOperator.service.clusterIP }}
> {{- end }}
> {{- if .Values.prometheusOperator.service.externalIPs }}
>   externalIPs:
> {{ toYaml .Values.prometheusOperator.service.externalIPs | indent 4 }}
> {{- end }}
> {{- if .Values.prometheusOperator.service.loadBalancerIP }}
>   loadBalancerIP: {{ .Values.prometheusOperator.service.loadBalancerIP }}
> {{- end }}
> {{- if .Values.prometheusOperator.service.loadBalancerSourceRanges }}
>   loadBalancerSourceRanges:
>   {{- range $cidr := .Values.prometheusOperator.service.loadBalancerSourceRanges }}
>     - {{ $cidr }}
>   {{- end }}
> {{- end }}
>   ports:
>   - name: http
>     {{- if eq .Values.prometheusOperator.service.type "NodePort" }}
>     nodePort: {{ .Values.prometheusOperator.service.nodePort }}
>     {{- end }}
>     port: 8080
>     targetPort: http
>   {{- if .Values.prometheusOperator.tlsProxy.enabled }}
>   - name: https
>     {{- if eq .Values.prometheusOperator.service.type "NodePort"}}
>     nodePort: {{ .Values.prometheusOperator.service.nodePortTls }}
>     {{- end }}
>     port: 443
>     targetPort: https
>   {{- end }}
>   selector:
>     app: {{ template "prometheus-operator.name" . }}-operator
>     release: {{ $.Release.Name | quote }}
>   type: "{{ .Values.prometheusOperator.service.type }}"
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/serviceaccount.yaml packages/monitoring/charts/templates/prometheus-operator/serviceaccount.yaml
0a1,12
> {{- if and .Values.prometheusOperator.enabled .Values.prometheusOperator.serviceAccount.create }}
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   name: {{ template "prometheus-operator.operator.serviceAccountName" . }}
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> imagePullSecrets:
> {{ toYaml .Values.global.imagePullSecrets | indent 2 }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/templates/prometheus-operator/servicemonitor.yaml packages/monitoring/charts/templates/prometheus-operator/servicemonitor.yaml
0a1,32
> {{- if and .Values.prometheusOperator.enabled .Values.prometheusOperator.serviceMonitor.selfMonitor }}
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   name: {{ template "prometheus-operator.fullname" . }}-operator
>   namespace: {{ $.Release.Namespace }}
>   labels:
>     app: {{ template "prometheus-operator.name" . }}-operator
> {{ include "prometheus-operator.labels" . | indent 4 }}
> spec:
>   endpoints:
>   - port: http
>     honorLabels: true
>     {{- if .Values.prometheusOperator.serviceMonitor.interval }}
>     interval: {{ .Values.prometheusOperator.serviceMonitor.interval }}
>     {{- end }}
> {{- if .Values.prometheusOperator.serviceMonitor.metricRelabelings }}
>     metricRelabelings:
> {{ tpl (toYaml .Values.prometheusOperator.serviceMonitor.metricRelabelings | indent 6) . }}
> {{- end }}
> {{- if .Values.prometheusOperator.serviceMonitor.relabelings }}
>     relabelings:
> {{ toYaml .Values.prometheusOperator.serviceMonitor.relabelings | indent 6 }}
> {{- end }}
>   selector:
>     matchLabels:
>       app: {{ template "prometheus-operator.name" . }}-operator
>       release: {{ $.Release.Name | quote }}
>   namespaceSelector:
>     matchNames:
>       - {{ $.Release.Namespace | quote }}
> {{- end }}
diff -Nr packages/monitoring/charts-original/values.yaml packages/monitoring/charts/values.yaml
0a1,1908
> # Default values for prometheus-operator.
> # This is a YAML-formatted file.
> # Declare variables to be passed into your templates.
> 
> ## Provide a name in place of prometheus-operator for `app:` labels
> ##
> nameOverride: ""
> 
> ## Provide a k8s version to auto dashboard import script example: kubeTargetVersionOverride: 1.16.6
> ##
> kubeTargetVersionOverride: ""
> 
> ## Provide a name to substitute for the full names of resources
> ##
> fullnameOverride: ""
> 
> ## Labels to apply to all resources
> ##
> commonLabels: {}
> # scmhash: abc123
> # myLabel: aakkmd
> 
> ## Create default rules for monitoring the cluster
> ##
> defaultRules:
>   create: true
>   rules:
>     alertmanager: true
>     etcd: true
>     general: true
>     k8s: true
>     kubeApiserver: true
>     kubeApiserverError: true
>     kubePrometheusNodeAlerting: true
>     kubePrometheusNodeRecording: true
>     kubernetesAbsent: true
>     kubernetesApps: true
>     kubernetesResources: true
>     kubernetesStorage: true
>     kubernetesSystem: true
>     kubeScheduler: true
>     network: true
>     node: true
>     prometheus: true
>     prometheusOperator: true
>     time: true
> 
>   ## Runbook url prefix for default rules
>   runbookUrl: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#
>   ## Reduce app namespace alert scope
>   appNamespacesTarget: ".*"
> 
>   ## Labels for default rules
>   labels: {}
>   ## Annotations for default rules
>   annotations: {}
> 
> ## Provide custom recording or alerting rules to be deployed into the cluster.
> ##
> additionalPrometheusRules: []
> #  - name: my-rule-file
> #    groups:
> #      - name: my_group
> #        rules:
> #        - record: my_record
> #          expr: 100 * my_record
> 
> ##
> global:
>   rbac:
>     create: true
>     pspEnabled: true
> 
>   ## Reference to one or more secrets to be used when pulling images
>   ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
>   ##
>   imagePullSecrets: []
>   # - name: "image-pull-secret"
> 
> ## Configuration for alertmanager
> ## ref: https://prometheus.io/docs/alerting/alertmanager/
> ##
> alertmanager:
> 
>   ## Deploy alertmanager
>   ##
>   enabled: true
> 
>   ## Api that prometheus will use to communicate with alertmanager. Possible values are v1, v2
>   ##
>   apiVersion: v2
> 
>   ## Service account for Alertmanager to use.
>   ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
>   ##
>   serviceAccount:
>     create: true
>     name: ""
> 
>   ## Configure pod disruption budgets for Alertmanager
>   ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/#specifying-a-poddisruptionbudget
>   ## This configuration is immutable once created and will require the PDB to be deleted to be changed
>   ## https://github.com/kubernetes/kubernetes/issues/45398
>   ##
>   podDisruptionBudget:
>     enabled: false
>     minAvailable: 1
>     maxUnavailable: ""
> 
>   ## Alertmanager configuration directives
>   ## ref: https://prometheus.io/docs/alerting/configuration/#configuration-file
>   ##      https://prometheus.io/webtools/alerting/routing-tree-editor/
>   ##
>   config:
>     global:
>       resolve_timeout: 5m
>     route:
>       group_by: ['job']
>       group_wait: 30s
>       group_interval: 5m
>       repeat_interval: 12h
>       receiver: 'null'
>       routes:
>       - match:
>           alertname: Watchdog
>         receiver: 'null'
>     receivers:
>     - name: 'null'
> 
>   ## Pass the Alertmanager configuration directives through Helm's templating
>   ## engine. If the Alertmanager configuration contains Alertmanager templates,
>   ## they'll need to be properly escaped so that they are not interpreted by
>   ## Helm
>   ## ref: https://helm.sh/docs/developing_charts/#using-the-tpl-function
>   ##      https://prometheus.io/docs/alerting/configuration/#%3Ctmpl_string%3E
>   ##      https://prometheus.io/docs/alerting/notifications/
>   ##      https://prometheus.io/docs/alerting/notification_examples/
>   tplConfig: false
> 
>   ## Alertmanager template files to format alerts
>   ## ref: https://prometheus.io/docs/alerting/notifications/
>   ##      https://prometheus.io/docs/alerting/notification_examples/
>   ##
>   templateFiles: {}
>   #
>   ## An example template:
>   #   template_1.tmpl: |-
>   #       {{ define "cluster" }}{{ .ExternalURL | reReplaceAll ".*alertmanager\\.(.*)" "$1" }}{{ end }}
>   #
>   #       {{ define "slack.myorg.text" }}
>   #       {{- $root := . -}}
>   #       {{ range .Alerts }}
>   #         *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
>   #         *Cluster:*  {{ template "cluster" $root }}
>   #         *Description:* {{ .Annotations.description }}
>   #         *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:>
>   #         *Runbook:* <{{ .Annotations.runbook }}|:spiral_note_pad:>
>   #         *Details:*
>   #           {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
>   #           {{ end }}
> 
>   ingress:
>     enabled: false
> 
>     annotations: {}
> 
>     labels: {}
> 
>     ## Hosts must be provided if Ingress is enabled.
>     ##
>     hosts: []
>       # - alertmanager.domain.com
> 
>     ## Paths to use for ingress rules - one path should match the alertmanagerSpec.routePrefix
>     ##
>     paths: []
>     # - /
> 
>     ## TLS configuration for Alertmanager Ingress
>     ## Secret must be manually created in the namespace
>     ##
>     tls: []
>     # - secretName: alertmanager-general-tls
>     #   hosts:
>     #   - alertmanager.example.com
> 
>   ## Configuration for Alertmanager secret
>   ##
>   secret:
>     annotations: {}
> 
>   ## Configuration for Alertmanager service
>   ##
>   service:
>     annotations: {}
>     labels: {}
>     clusterIP: ""
> 
>     ## Port for Alertmanager Service to listen on
>     ##
>     port: 9093
>     ## To be used with a proxy extraContainer port
>     ##
>     targetPort: 9093
>     ## Port to expose on each node
>     ## Only used if service.type is 'NodePort'
>     ##
>     nodePort: 30903
>     ## List of IP addresses at which the Prometheus server service is available
>     ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
>     ##
>     externalIPs: []
>     loadBalancerIP: ""
>     loadBalancerSourceRanges: []
>     ## Service type
>     ##
>     type: ClusterIP
> 
>   ## If true, create a serviceMonitor for alertmanager
>   ##
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
>     selfMonitor: true
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
>   ## Settings affecting alertmanagerSpec
>   ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#alertmanagerspec
>   ##
>   alertmanagerSpec:
>     ## Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
>     ## Metadata Labels and Annotations gets propagated to the Alertmanager pods.
>     ##
>     podMetadata: {}
> 
>     ## Image of Alertmanager
>     ##
>     image:
>       repository: quay.io/prometheus/alertmanager
>       tag: v0.20.0
> 
>     ## If true then the user will be responsible to provide a secret with alertmanager configuration
>     ## So when true the config part will be ignored (including templateFiles) and the one in the secret will be used
>     ##
>     useExistingSecret: false
> 
>     ## Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the
>     ## Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/.
>     ##
>     secrets: []
> 
>     ## ConfigMaps is a list of ConfigMaps in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods.
>     ## The ConfigMaps are mounted into /etc/alertmanager/configmaps/.
>     ##
>     configMaps: []
> 
>     ## ConfigSecret is the name of a Kubernetes Secret in the same namespace as the Alertmanager object, which contains configuration for
>     ## this Alertmanager instance. Defaults to 'alertmanager-' The secret is mounted into /etc/alertmanager/config.
>     ##
>     # configSecret:
> 
>     ## Define Log Format
>     # Use logfmt (default) or json-formatted logging
>     logFormat: logfmt
> 
>     ## Log level for Alertmanager to be configured with.
>     ##
>     logLevel: info
> 
>     ## Size is the expected size of the alertmanager cluster. The controller will eventually make the size of the
>     ## running cluster equal to the expected size.
>     replicas: 1
> 
>     ## Time duration Alertmanager shall retain data for. Default is '120h', and must match the regular expression
>     ## [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).
>     ##
>     retention: 120h
> 
>     ## Storage is the definition of how storage will be used by the Alertmanager instances.
>     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/user-guides/storage.md
>     ##
>     storage: {}
>     # volumeClaimTemplate:
>     #   spec:
>     #     storageClassName: gluster
>     #     accessModes: ["ReadWriteOnce"]
>     #     resources:
>     #       requests:
>     #         storage: 50Gi
>     #   selector: {}
> 
> 
>     ## 	The external URL the Alertmanager instances will be available under. This is necessary to generate correct URLs. This is necessary if Alertmanager is not served from root of a DNS name.	string	false
>     ##
>     externalUrl:
> 
>     ## 	The route prefix Alertmanager registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true,
>     ## but the server serves requests under a different route prefix. For example for use with kubectl proxy.
>     ##
>     routePrefix: /
> 
>     ## If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.
>     ##
>     paused: false
> 
>     ## Define which Nodes the Pods are scheduled on.
>     ## ref: https://kubernetes.io/docs/user-guide/node-selection/
>     ##
>     nodeSelector: {}
> 
>     ## Define resources requests and limits for single Pods.
>     ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
>     ##
>     resources: {}
>     # requests:
>     #   memory: 400Mi
> 
>     ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.
>     ## The default value "soft" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.
>     ## The value "hard" means that the scheduler is *required* to not schedule two replica pods onto the same node.
>     ## The value "" will disable pod anti-affinity so that no anti-affinity rules will be configured.
>     ##
>     podAntiAffinity: ""
> 
>     ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.
>     ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone
>     ##
>     podAntiAffinityTopologyKey: kubernetes.io/hostname
> 
>     ## Assign custom affinity rules to the alertmanager instance
>     ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
>     ##
>     affinity: {}
>     # nodeAffinity:
>     #   requiredDuringSchedulingIgnoredDuringExecution:
>     #     nodeSelectorTerms:
>     #     - matchExpressions:
>     #       - key: kubernetes.io/e2e-az-name
>     #         operator: In
>     #         values:
>     #         - e2e-az1
>     #         - e2e-az2
> 
>     ## If specified, the pod's tolerations.
>     ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
>     ##
>     tolerations: []
>     # - key: "key"
>     #   operator: "Equal"
>     #   value: "value"
>     #   effect: "NoSchedule"
> 
>     ## SecurityContext holds pod-level security attributes and common container settings.
>     ## This defaults to non root user with uid 1000 and gid 2000.	*v1.PodSecurityContext	false
>     ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
>     ##
>     securityContext:
>       runAsNonRoot: true
>       runAsUser: 1000
>       fsGroup: 2000
> 
>     ## ListenLocal makes the Alertmanager server listen on loopback, so that it does not bind against the Pod IP.
>     ## Note this is only for the Alertmanager UI, not the gossip communication.
>     ##
>     listenLocal: false
> 
>     ## Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to an Alertmanager pod.
>     ##
>     containers: []
> 
>     ## Priority class assigned to the Pods
>     ##
>     priorityClassName: ""
> 
>     ## AdditionalPeers allows injecting a set of additional Alertmanagers to peer with to form a highly available cluster.
>     ##
>     additionalPeers: []
> 
>     ## PortName to use for Alert Manager.
>     ##
>     portName: "web"
> 
> 
> ## Using default values from https://github.com/helm/charts/blob/master/stable/grafana/values.yaml
> ##
> grafana:
>   enabled: true
> 
>   ## Deploy default dashboards.
>   ##
>   defaultDashboardsEnabled: true
> 
>   adminPassword: prom-operator
> 
>   ingress:
>     ## If true, Grafana Ingress will be created
>     ##
>     enabled: false
> 
>     ## Annotations for Grafana Ingress
>     ##
>     annotations: {}
>       # kubernetes.io/ingress.class: nginx
>       # kubernetes.io/tls-acme: "true"
> 
>     ## Labels to be added to the Ingress
>     ##
>     labels: {}
> 
>     ## Hostnames.
>     ## Must be provided if Ingress is enable.
>     ##
>     # hosts:
>     #   - grafana.domain.com
>     hosts: []
> 
>     ## Path for grafana ingress
>     path: /
> 
>     ## TLS configuration for grafana Ingress
>     ## Secret must be manually created in the namespace
>     ##
>     tls: []
>     # - secretName: grafana-general-tls
>     #   hosts:
>     #   - grafana.example.com
> 
>   sidecar:
>     dashboards:
>       enabled: true
>       label: grafana_dashboard
>     datasources:
>       enabled: true
>       defaultDatasourceEnabled: true
> 
>       ## Annotations for Grafana datasource configmaps
>       ##
>       annotations: {}
> 
>       ## Create datasource for each Pod of Prometheus StatefulSet;
>       ## this uses headless service `prometheus-operated` which is
>       ## created by Prometheus Operator
>       ## ref: https://git.io/fjaBS
>       createPrometheusReplicasDatasources: false
>       label: grafana_datasource
> 
>   extraConfigmapMounts: []
>   # - name: certs-configmap
>   #   mountPath: /etc/grafana/ssl/
>   #   configMap: certs-configmap
>   #   readOnly: true
> 
>   ## Configure additional grafana datasources
>   ## ref: http://docs.grafana.org/administration/provisioning/#datasources
>   additionalDataSources: []
>   # - name: prometheus-sample
>   #   access: proxy
>   #   basicAuth: true
>   #   basicAuthPassword: pass
>   #   basicAuthUser: daco
>   #   editable: false
>   #   jsonData:
>   #       tlsSkipVerify: true
>   #   orgId: 1
>   #   type: prometheus
>   #   url: https://prometheus.svc:9090
>   #   version: 1
> 
>   ## Passed to grafana subchart and used by servicemonitor below
>   ##
>   service:
>     portName: service
> 
>   ## If true, create a serviceMonitor for grafana
>   ##
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
>     selfMonitor: true
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
> ## Component scraping the kube api server
> ##
> kubeApiServer:
>   enabled: true
>   tlsConfig:
>     serverName: kubernetes
>     insecureSkipVerify: false
> 
>   ## If your API endpoint address is not reachable (as in AKS) you can replace it with the kubernetes service
>   ##
>   relabelings: []
>   # - sourceLabels:
>   #     - __meta_kubernetes_namespace
>   #     - __meta_kubernetes_service_name
>   #     - __meta_kubernetes_endpoint_port_name
>   #   action: keep
>   #   regex: default;kubernetes;https
>   # - targetLabel: __address__
>   #   replacement: kubernetes.default.svc:443
> 
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
>     jobLabel: component
>     selector:
>       matchLabels:
>         component: apiserver
>         provider: kubernetes
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
> ## Component scraping the kubelet and kubelet-hosted cAdvisor
> ##
> kubelet:
>   enabled: true
>   namespace: kube-system
> 
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
> 
>     ## Enable scraping the kubelet over https. For requirements to enable this see
>     ## https://github.com/coreos/prometheus-operator/issues/926
>     ##
>     https: true
> 
>     ## Metric relabellings to apply to samples before ingestion
>     ##
>     cAdvisorMetricRelabelings: []
>     # - sourceLabels: [__name__, image]
>     #   separator: ;
>     #   regex: container_([a-z_]+);
>     #   replacement: $1
>     #   action: drop
>     # - sourceLabels: [__name__]
>     #   separator: ;
>     #   regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
>     #   replacement: $1
>     #   action: drop
> 
>     # 	relabel configs to apply to samples before ingestion.
>     #   metrics_path is required to match upstream rules and charts
>     ##
>     cAdvisorRelabelings:
>       - sourceLabels: [__metrics_path__]
>         targetLabel: metrics_path
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
>     metricRelabelings: []
>     # - sourceLabels: [__name__, image]
>     #   separator: ;
>     #   regex: container_([a-z_]+);
>     #   replacement: $1
>     #   action: drop
>     # - sourceLabels: [__name__]
>     #   separator: ;
>     #   regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
>     #   replacement: $1
>     #   action: drop
> 
>     # 	relabel configs to apply to samples before ingestion.
>     #   metrics_path is required to match upstream rules and charts
>     ##
>     relabelings:
>       - sourceLabels: [__metrics_path__]
>         targetLabel: metrics_path
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
> ## Component scraping the kube controller manager
> ##
> kubeControllerManager:
>   enabled: true
> 
>   ## If your kube controller manager is not deployed as a pod, specify IPs it can be found on
>   ##
>   endpoints: []
>   # - 10.141.4.22
>   # - 10.141.4.23
>   # - 10.141.4.24
> 
>   ## If using kubeControllerManager.endpoints only the port and targetPort are used
>   ##
>   service:
>     port: 10252
>     targetPort: 10252
>     # selector:
>     #   component: kube-controller-manager
> 
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
> 
>     ## Enable scraping kube-controller-manager over https.
>     ## Requires proper certs (not self-signed) and delegated authentication/authorization checks
>     ##
>     https: false
> 
>     # Skip TLS certificate validation when scraping
>     insecureSkipVerify: null
> 
>     # Name of the server to use when validating TLS certificate
>     serverName: null
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
> ## Component scraping coreDns. Use either this or kubeDns
> ##
> coreDns:
>   enabled: true
>   service:
>     port: 9153
>     targetPort: 9153
>     # selector:
>     #   k8s-app: kube-dns
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
> ## Component scraping kubeDns. Use either this or coreDns
> ##
> kubeDns:
>   enabled: false
>   service:
>     dnsmasq:
>       port: 10054
>       targetPort: 10054
>     skydns:
>       port: 10055
>       targetPort: 10055
>     # selector:
>     #   k8s-app: kube-dns
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
>     dnsmasqMetricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     dnsmasqRelabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
> ## Component scraping etcd
> ##
> kubeEtcd:
>   enabled: true
> 
>   ## If your etcd is not deployed as a pod, specify IPs it can be found on
>   ##
>   endpoints: []
>   # - 10.141.4.22
>   # - 10.141.4.23
>   # - 10.141.4.24
> 
>   ## Etcd service. If using kubeEtcd.endpoints only the port and targetPort are used
>   ##
>   service:
>     port: 2379
>     targetPort: 2379
>     # selector:
>     #   component: etcd
> 
>   ## Configure secure access to the etcd cluster by loading a secret into prometheus and
>   ## specifying security configuration below. For example, with a secret named etcd-client-cert
>   ##
>   ## serviceMonitor:
>   ##   scheme: https
>   ##   insecureSkipVerify: false
>   ##   serverName: localhost
>   ##   caFile: /etc/prometheus/secrets/etcd-client-cert/etcd-ca
>   ##   certFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client
>   ##   keyFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client-key
>   ##
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
>     scheme: http
>     insecureSkipVerify: false
>     serverName: ""
>     caFile: ""
>     certFile: ""
>     keyFile: ""
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
> 
> ## Component scraping kube scheduler
> ##
> kubeScheduler:
>   enabled: true
> 
>   ## If your kube scheduler is not deployed as a pod, specify IPs it can be found on
>   ##
>   endpoints: []
>   # - 10.141.4.22
>   # - 10.141.4.23
>   # - 10.141.4.24
> 
>   ## If using kubeScheduler.endpoints only the port and targetPort are used
>   ##
>   service:
>     port: 10251
>     targetPort: 10251
>     # selector:
>     #   component: kube-scheduler
> 
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
>     ## Enable scraping kube-scheduler over https.
>     ## Requires proper certs (not self-signed) and delegated authentication/authorization checks
>     ##
>     https: false
> 
>     ## Skip TLS certificate validation when scraping
>     insecureSkipVerify: null
> 
>     ## Name of the server to use when validating TLS certificate
>     serverName: null
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
> 
> ## Component scraping kube proxy
> ##
> kubeProxy:
>   enabled: true
> 
>   ## If your kube proxy is not deployed as a pod, specify IPs it can be found on
>   ##
>   endpoints: []
>   # - 10.141.4.22
>   # - 10.141.4.23
>   # - 10.141.4.24
> 
>   service:
>     port: 10249
>     targetPort: 10249
>     # selector:
>     #   k8s-app: kube-proxy
> 
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
> 
>     ## Enable scraping kube-proxy over https.
>     ## Requires proper certs (not self-signed) and delegated authentication/authorization checks
>     ##
>     https: false
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
> 
> ## Component scraping kube state metrics
> ##
> kubeStateMetrics:
>   enabled: true
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
> ## Configuration for kube-state-metrics subchart
> ##
> kube-state-metrics:
>   rbac:
>     create: true
>   podSecurityPolicy:
>     enabled: true
> 
> ## Deploy node exporter as a daemonset to all nodes
> ##
> nodeExporter:
>   enabled: true
> 
>   ## Use the value configured in prometheus-node-exporter.podLabels
>   ##
>   jobLabel: jobLabel
> 
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
> 
>     ## How long until a scrape request times out. If not set, the Prometheus default scape timeout is used.
>     ##
>     scrapeTimeout: ""
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - sourceLabels: [__name__]
>     #   separator: ;
>     #   regex: ^node_mountstats_nfs_(event|operations|transport)_.+
>     #   replacement: $1
>     #   action: drop
> 
>     ## 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
> ## Configuration for prometheus-node-exporter subchart
> ##
> prometheus-node-exporter:
>   podLabels:
>     ## Add the 'node-exporter' label to be used by serviceMonitor to match standard common usage in rules and grafana dashboards
>     ##
>     jobLabel: node-exporter
>   extraArgs:
>     - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
>     - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
> 
> ## Manages Prometheus and Alertmanager components
> ##
> prometheusOperator:
>   enabled: true
> 
>   # If true prometheus operator will create and update its CRDs on startup
>   manageCrds: true
> 
>   tlsProxy:
>     enabled: true
>     image:
>       repository: squareup/ghostunnel
>       tag: v1.5.2
>       pullPolicy: IfNotPresent
>     resources: {}
> 
>   ## Admission webhook support for PrometheusRules resources added in Prometheus Operator 0.30 can be enabled to prevent incorrectly formatted
>   ## rules from making their way into prometheus and potentially preventing the container from starting
>   admissionWebhooks:
>     failurePolicy: Fail
>     enabled: true
>     ## If enabled, generate a self-signed certificate, then patch the webhook configurations with the generated data.
>     ## On chart upgrades (or if the secret exists) the cert will not be re-generated. You can use this to provide your own
>     ## certs ahead of time if you wish.
>     ##
>     patch:
>       enabled: true
>       image:
>         repository: jettech/kube-webhook-certgen
>         tag: v1.0.0
>         pullPolicy: IfNotPresent
>       resources: {}
>       ## Provide a priority class name to the webhook patching job
>       ##
>       priorityClassName: ""
>       podAnnotations: {}
>       nodeSelector: {}
>       affinity: {}
>       tolerations: []
> 
>   ## Namespaces to scope the interaction of the Prometheus Operator and the apiserver (allow list).
>   ## This is mutually exclusive with denyNamespaces. Setting this to an empty object will disable the configuration
>   ##
>   namespaces: {}
>     # releaseNamespace: true
>     # additional:
>     # - kube-system
> 
>   ## Namespaces not to scope the interaction of the Prometheus Operator (deny list).
>   ##
>   denyNamespaces: []
> 
>   ## Service account for Alertmanager to use.
>   ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
>   ##
>   serviceAccount:
>     create: true
>     name: ""
> 
>   ## Configuration for Prometheus operator service
>   ##
>   service:
>     annotations: {}
>     labels: {}
>     clusterIP: ""
> 
>   ## Port to expose on each node
>   ## Only used if service.type is 'NodePort'
>   ##
>     nodePort: 30080
> 
>     nodePortTls: 30443
> 
>   ## Additional ports to open for Prometheus service
>   ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services
>   ##
>     additionalPorts: []
> 
>   ## Loadbalancer IP
>   ## Only use if service.type is "loadbalancer"
>   ##
>     loadBalancerIP: ""
>     loadBalancerSourceRanges: []
> 
>   ## Service type
>   ## NodePort, ClusterIP, loadbalancer
>   ##
>     type: ClusterIP
> 
>     ## List of IP addresses at which the Prometheus server service is available
>     ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
>     ##
>     externalIPs: []
> 
>   ## Deploy CRDs used by Prometheus Operator.
>   ##
>   createCustomResource: true
> 
>   ## Attempt to clean up CRDs created by Prometheus Operator.
>   ##
>   cleanupCustomResource: false
> 
>   ## Labels to add to the operator pod
>   ##
>   podLabels: {}
> 
>   ## Annotations to add to the operator pod
>   ##
>   podAnnotations: {}
> 
>   ## Assign a PriorityClassName to pods if set
>   # priorityClassName: ""
> 
>   ## Define Log Format
>   # Use logfmt (default) or json-formatted logging
>   # logFormat: logfmt
> 
>   ## Decrease log verbosity to errors only
>   # logLevel: error
> 
>   ## If true, the operator will create and maintain a service for scraping kubelets
>   ## ref: https://github.com/coreos/prometheus-operator/blob/master/helm/prometheus-operator/README.md
>   ##
>   kubeletService:
>     enabled: true
>     namespace: kube-system
> 
>   ## Create a servicemonitor for the operator
>   ##
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
>     selfMonitor: true
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
>   ## Resource limits & requests
>   ##
>   resources: {}
>   # limits:
>   #   cpu: 200m
>   #   memory: 200Mi
>   # requests:
>   #   cpu: 100m
>   #   memory: 100Mi
> 
>   ## Define which Nodes the Pods are scheduled on.
>   ## ref: https://kubernetes.io/docs/user-guide/node-selection/
>   ##
>   nodeSelector: {}
> 
>   ## Tolerations for use with node taints
>   ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
>   ##
>   tolerations: []
>   # - key: "key"
>   #   operator: "Equal"
>   #   value: "value"
>   #   effect: "NoSchedule"
> 
>   ## Assign custom affinity rules to the prometheus operator
>   ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
>   ##
>   affinity: {}
>     # nodeAffinity:
>     #   requiredDuringSchedulingIgnoredDuringExecution:
>     #     nodeSelectorTerms:
>     #     - matchExpressions:
>     #       - key: kubernetes.io/e2e-az-name
>     #         operator: In
>     #         values:
>     #         - e2e-az1
>     #         - e2e-az2
> 
>   securityContext:
>     runAsNonRoot: true
>     runAsUser: 65534
> 
>   ## Prometheus-operator image
>   ##
>   image:
>     repository: quay.io/coreos/prometheus-operator
>     tag: v0.37.0
>     pullPolicy: IfNotPresent
> 
>   ## Configmap-reload image to use for reloading configmaps
>   ##
>   configmapReloadImage:
>     repository: quay.io/coreos/configmap-reload
>     tag: v0.0.1
> 
>   ## Prometheus-config-reloader image to use for config and rule reloading
>   ##
>   prometheusConfigReloaderImage:
>     repository: quay.io/coreos/prometheus-config-reloader
>     tag: v0.37.0
> 
>   ## Set the prometheus config reloader side-car CPU limit
>   ##
>   configReloaderCpu: 100m
> 
>   ## Set the prometheus config reloader side-car memory limit
>   ##
>   configReloaderMemory: 25Mi
> 
>   ## Hyperkube image to use when cleaning up
>   ##
>   hyperkubeImage:
>     repository: k8s.gcr.io/hyperkube
>     tag: v1.12.1
>     pullPolicy: IfNotPresent
> 
> ## Deploy a Prometheus instance
> ##
> prometheus:
> 
>   enabled: true
> 
>   ## Annotations for Prometheus
>   ##
>   annotations: {}
> 
>   ## Service account for Prometheuses to use.
>   ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
>   ##
>   serviceAccount:
>     create: true
>     name: ""
> 
>   ## Configuration for Prometheus service
>   ##
>   service:
>     annotations: {}
>     labels: {}
>     clusterIP: ""
> 
>     ## Port for Prometheus Service to listen on
>     ##
>     port: 9090
> 
>     ## To be used with a proxy extraContainer port
>     targetPort: 9090
> 
>     ## List of IP addresses at which the Prometheus server service is available
>     ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
>     ##
>     externalIPs: []
> 
>     ## Port to expose on each node
>     ## Only used if service.type is 'NodePort'
>     ##
>     nodePort: 30090
> 
>     ## Loadbalancer IP
>     ## Only use if service.type is "loadbalancer"
>     loadBalancerIP: ""
>     loadBalancerSourceRanges: []
>     ## Service type
>     ##
>     type: ClusterIP
> 
>     sessionAffinity: ""
> 
>   ## Configuration for creating a separate Service for each statefulset Prometheus replica
>   ##
>   servicePerReplica:
>     enabled: false
>     annotations: {}
> 
>     ## Port for Prometheus Service per replica to listen on
>     ##
>     port: 9090
> 
>     ## To be used with a proxy extraContainer port
>     targetPort: 9090
> 
>     ## Port to expose on each node
>     ## Only used if servicePerReplica.type is 'NodePort'
>     ##
>     nodePort: 30091
> 
>     ## Loadbalancer source IP ranges
>     ## Only used if servicePerReplica.type is "loadbalancer"
>     loadBalancerSourceRanges: []
>     ## Service type
>     ##
>     type: ClusterIP
> 
>   ## Configure pod disruption budgets for Prometheus
>   ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/#specifying-a-poddisruptionbudget
>   ## This configuration is immutable once created and will require the PDB to be deleted to be changed
>   ## https://github.com/kubernetes/kubernetes/issues/45398
>   ##
>   podDisruptionBudget:
>     enabled: false
>     minAvailable: 1
>     maxUnavailable: ""
> 
>   ingress:
>     enabled: false
>     annotations: {}
>     labels: {}
> 
>     ## Hostnames.
>     ## Must be provided if Ingress is enabled.
>     ##
>     # hosts:
>     #   - prometheus.domain.com
>     hosts: []
> 
>     ## Paths to use for ingress rules - one path should match the prometheusSpec.routePrefix
>     ##
>     paths: []
>     # - /
> 
>     ## TLS configuration for Prometheus Ingress
>     ## Secret must be manually created in the namespace
>     ##
>     tls: []
>       # - secretName: prometheus-general-tls
>       #   hosts:
>       #     - prometheus.example.com
> 
>   ## Configuration for creating an Ingress that will map to each Prometheus replica service
>   ## prometheus.servicePerReplica must be enabled
>   ##
>   ingressPerReplica:
>     enabled: false
>     annotations: {}
>     labels: {}
> 
>     ## Final form of the hostname for each per replica ingress is
>     ## {{ ingressPerReplica.hostPrefix }}-{{ $replicaNumber }}.{{ ingressPerReplica.hostDomain }}
>     ##
>     ## Prefix for the per replica ingress that will have `-$replicaNumber`
>     ## appended to the end
>     hostPrefix: ""
>     ## Domain that will be used for the per replica ingress
>     hostDomain: ""
> 
>     ## Paths to use for ingress rules
>     ##
>     paths: []
>     # - /
> 
>     ## Secret name containing the TLS certificate for Prometheus per replica ingress
>     ## Secret must be manually created in the namespace
>     tlsSecretName: ""
> 
>   ## Configure additional options for default pod security policy for Prometheus
>   ## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
>   podSecurityPolicy:
>     allowedCapabilities: []
> 
>   serviceMonitor:
>     ## Scrape interval. If not set, the Prometheus default scrape interval is used.
>     ##
>     interval: ""
>     selfMonitor: true
> 
>     ## scheme: HTTP scheme to use for scraping. Can be used with `tlsConfig` for example if using istio mTLS.
>     scheme: ""
> 
>     ## tlsConfig: TLS configuration to use when scraping the endpoint. For example if using istio mTLS.
>     ## Of type: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#tlsconfig
>     tlsConfig: {}
> 
>     bearerTokenFile:
> 
>     ## 	metric relabel configs to apply to samples before ingestion.
>     ##
>     metricRelabelings: []
>     # - action: keep
>     #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
>     #   sourceLabels: [__name__]
> 
>     # 	relabel configs to apply to samples before ingestion.
>     ##
>     relabelings: []
>     # - sourceLabels: [__meta_kubernetes_pod_node_name]
>     #   separator: ;
>     #   regex: ^(.*)$
>     #   targetLabel: nodename
>     #   replacement: $1
>     #   action: replace
> 
>   ## Settings affecting prometheusSpec
>   ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
>   ##
>   prometheusSpec:
>     ## If true, pass --storage.tsdb.max-block-duration=2h to prometheus. This is already done if using Thanos
>     ##
>     disableCompaction: false
>     ## APIServerConfig
>     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#apiserverconfig
>     ##
>     apiserverConfig: {}
> 
>     ## Interval between consecutive scrapes.
>     ##
>     scrapeInterval: ""
> 
>     ## Interval between consecutive evaluations.
>     ##
>     evaluationInterval: ""
> 
>     ## ListenLocal makes the Prometheus server listen on loopback, so that it does not bind against the Pod IP.
>     ##
>     listenLocal: false
> 
>     ## EnableAdminAPI enables Prometheus the administrative HTTP API which includes functionality such as deleting time series.
>     ## This is disabled by default.
>     ## ref: https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis
>     ##
>     enableAdminAPI: false
> 
>     ## Image of Prometheus.
>     ##
>     image:
>       repository: quay.io/prometheus/prometheus
>       tag: v2.15.2
> 
>     ## Tolerations for use with node taints
>     ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
>     ##
>     tolerations: []
>     #  - key: "key"
>     #    operator: "Equal"
>     #    value: "value"
>     #    effect: "NoSchedule"
> 
>     ## Alertmanagers to which alerts will be sent
>     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#alertmanagerendpoints
>     ##
>     ## Default configuration will connect to the alertmanager deployed as part of this release
>     ##
>     alertingEndpoints: []
>     # - name: ""
>     #   namespace: ""
>     #   port: http
>     #   scheme: http
>     #   pathPrefix: ""
>     #   tlsConfig: {}
>     #   bearerTokenFile: ""
>     #   apiVersion: v2
> 
>     ## External labels to add to any time series or alerts when communicating with external systems
>     ##
>     externalLabels: {}
> 
>     ## Name of the external label used to denote replica name
>     ##
>     replicaExternalLabelName: ""
> 
>     ## If true, the Operator won't add the external label used to denote replica name
>     ##
>     replicaExternalLabelNameClear: false
> 
>     ## Name of the external label used to denote Prometheus instance name
>     ##
>     prometheusExternalLabelName: ""
> 
>     ## If true, the Operator won't add the external label used to denote Prometheus instance name
>     ##
>     prometheusExternalLabelNameClear: false
> 
>     ## External URL at which Prometheus will be reachable.
>     ##
>     externalUrl: ""
> 
>     ## Define which Nodes the Pods are scheduled on.
>     ## ref: https://kubernetes.io/docs/user-guide/node-selection/
>     ##
>     nodeSelector: {}
> 
>     ## Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods.
>     ## The Secrets are mounted into /etc/prometheus/secrets/. Secrets changes after initial creation of a Prometheus object are not
>     ## reflected in the running Pods. To change the secrets mounted into the Prometheus Pods, the object must be deleted and recreated
>     ## with the new list of secrets.
>     ##
>     secrets: []
> 
>     ## ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods.
>     ## The ConfigMaps are mounted into /etc/prometheus/configmaps/.
>     ##
>     configMaps: []
> 
>     ## QuerySpec defines the query command line flags when starting Prometheus.
>     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#queryspec
>     ##
>     query: {}
> 
>     ## Namespaces to be selected for PrometheusRules discovery.
>     ## If nil, select own namespace. Namespaces to be selected for ServiceMonitor discovery.
>     ## See https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#namespaceselector for usage
>     ##
>     ruleNamespaceSelector: {}
> 
>     ## If true, a nil or {} value for prometheus.prometheusSpec.ruleSelector will cause the
>     ## prometheus resource to be created with selectors based on values in the helm deployment,
>     ## which will also match the PrometheusRule resources created
>     ##
>     ruleSelectorNilUsesHelmValues: true
> 
>     ## PrometheusRules to be selected for target discovery.
>     ## If {}, select all ServiceMonitors
>     ##
>     ruleSelector: {}
>     ## Example which select all prometheusrules resources
>     ## with label "prometheus" with values any of "example-rules" or "example-rules-2"
>     # ruleSelector:
>     #   matchExpressions:
>     #     - key: prometheus
>     #       operator: In
>     #       values:
>     #         - example-rules
>     #         - example-rules-2
>     #
>     ## Example which select all prometheusrules resources with label "role" set to "example-rules"
>     # ruleSelector:
>     #   matchLabels:
>     #     role: example-rules
> 
>     ## If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the
>     ## prometheus resource to be created with selectors based on values in the helm deployment,
>     ## which will also match the servicemonitors created
>     ##
>     serviceMonitorSelectorNilUsesHelmValues: true
> 
>     ## ServiceMonitors to be selected for target discovery.
>     ## If {}, select all ServiceMonitors
>     ##
>     serviceMonitorSelector: {}
>     ## Example which selects ServiceMonitors with label "prometheus" set to "somelabel"
>     # serviceMonitorSelector:
>     #   matchLabels:
>     #     prometheus: somelabel
> 
>     ## Namespaces to be selected for ServiceMonitor discovery.
>     ## See https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#namespaceselector for usage
>     ##
>     serviceMonitorNamespaceSelector: {}
> 
>     ## If true, a nil or {} value for prometheus.prometheusSpec.podMonitorSelector will cause the
>     ## prometheus resource to be created with selectors based on values in the helm deployment,
>     ## which will also match the podmonitors created
>     ##
>     podMonitorSelectorNilUsesHelmValues: true
> 
>     ## PodMonitors to be selected for target discovery.
>     ## If {}, select all PodMonitors
>     ##
>     podMonitorSelector: {}
>     ## Example which selects PodMonitors with label "prometheus" set to "somelabel"
>     # podMonitorSelector:
>     #   matchLabels:
>     #     prometheus: somelabel
> 
>     ## Namespaces to be selected for PodMonitor discovery.
>     ## See https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#namespaceselector for usage
>     ##
>     podMonitorNamespaceSelector: {}
> 
>     ## How long to retain metrics
>     ##
>     retention: 10d
> 
>     ## Maximum size of metrics
>     ##
>     retentionSize: ""
> 
>     ## Enable compression of the write-ahead log using Snappy.
>     ##
>     walCompression: false
> 
>     ## If true, the Operator won't process any Prometheus configuration changes
>     ##
>     paused: false
> 
>     ## Number of Prometheus replicas desired
>     ##
>     replicas: 1
> 
>     ## Log level for Prometheus be configured in
>     ##
>     logLevel: info
> 
>     ## Log format for Prometheus be configured in
>     ##
>     logFormat: logfmt
> 
>     ## Prefix used to register routes, overriding externalUrl route.
>     ## Useful for proxies that rewrite URLs.
>     ##
>     routePrefix: /
> 
>     ## Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
>     ## Metadata Labels and Annotations gets propagated to the prometheus pods.
>     ##
>     podMetadata: {}
>     # labels:
>     #   app: prometheus
>     #   k8s-app: prometheus
> 
>     ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.
>     ## The default value "soft" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.
>     ## The value "hard" means that the scheduler is *required* to not schedule two replica pods onto the same node.
>     ## The value "" will disable pod anti-affinity so that no anti-affinity rules will be configured.
>     podAntiAffinity: ""
> 
>     ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.
>     ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone
>     ##
>     podAntiAffinityTopologyKey: kubernetes.io/hostname
> 
>     ## Assign custom affinity rules to the prometheus instance
>     ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
>     ##
>     affinity: {}
>     # nodeAffinity:
>     #   requiredDuringSchedulingIgnoredDuringExecution:
>     #     nodeSelectorTerms:
>     #     - matchExpressions:
>     #       - key: kubernetes.io/e2e-az-name
>     #         operator: In
>     #         values:
>     #         - e2e-az1
>     #         - e2e-az2
> 
>     ## The remote_read spec configuration for Prometheus.
>     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#remotereadspec
>     remoteRead: []
>     # - url: http://remote1/read
> 
>     ## The remote_write spec configuration for Prometheus.
>     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#remotewritespec
>     remoteWrite: []
>     # - url: http://remote1/push
> 
>     ## Enable/Disable Grafana dashboards provisioning for prometheus remote write feature
>     remoteWriteDashboards: false
> 
>     ## Resource limits & requests
>     ##
>     resources: {}
>     # requests:
>     #   memory: 400Mi
> 
>     ## Prometheus StorageSpec for persistent data
>     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/user-guides/storage.md
>     ##
>     storageSpec: {}
>     #  volumeClaimTemplate:
>     #    spec:
>     #      storageClassName: gluster
>     #      accessModes: ["ReadWriteOnce"]
>     #      resources:
>     #        requests:
>     #          storage: 50Gi
>     #    selector: {}
> 
>     ## AdditionalScrapeConfigs allows specifying additional Prometheus scrape configurations. Scrape configurations
>     ## are appended to the configurations generated by the Prometheus Operator. Job configurations must have the form
>     ## as specified in the official Prometheus documentation:
>     ## https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. As scrape configs are
>     ## appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility
>     ## to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible
>     ## scrape configs are going to break Prometheus after the upgrade.
>     ##
>     ## The scrape configuraiton example below will find master nodes, provided they have the name .*mst.*, relabel the
>     ## port to 2379 and allow etcd scraping provided it is running on all Kubernetes master nodes
>     ##
>     additionalScrapeConfigs: []
>     # - job_name: kube-etcd
>     #   kubernetes_sd_configs:
>     #     - role: node
>     #   scheme: https
>     #   tls_config:
>     #     ca_file:   /etc/prometheus/secrets/etcd-client-cert/etcd-ca
>     #     cert_file: /etc/prometheus/secrets/etcd-client-cert/etcd-client
>     #     key_file:  /etc/prometheus/secrets/etcd-client-cert/etcd-client-key
>     #   relabel_configs:
>     #   - action: labelmap
>     #     regex: __meta_kubernetes_node_label_(.+)
>     #   - source_labels: [__address__]
>     #     action: replace
>     #     targetLabel: __address__
>     #     regex: ([^:;]+):(\d+)
>     #     replacement: ${1}:2379
>     #   - source_labels: [__meta_kubernetes_node_name]
>     #     action: keep
>     #     regex: .*mst.*
>     #   - source_labels: [__meta_kubernetes_node_name]
>     #     action: replace
>     #     targetLabel: node
>     #     regex: (.*)
>     #     replacement: ${1}
>     #   metric_relabel_configs:
>     #   - regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)
>     #     action: labeldrop
> 
>     ## additionalPrometheusSecretsAnnotations allows to add annotations to the kubernetes secret. This can be useful
>     ## when deploying via spinnaker to disable versioning on the secret, strategy.spinnaker.io/versioned: 'false'
>     additionalPrometheusSecretsAnnotations: {}
> 
>     ## AdditionalAlertManagerConfigs allows for manual configuration of alertmanager jobs in the form as specified
>     ## in the official Prometheus documentation https://prometheus.io/docs/prometheus/latest/configuration/configuration/#<alertmanager_config>.
>     ## AlertManager configurations specified are appended to the configurations generated by the Prometheus Operator.
>     ## As AlertManager configs are appended, the user is responsible to make sure it is valid. Note that using this
>     ## feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release
>     ## notes to ensure that no incompatible AlertManager configs are going to break Prometheus after the upgrade.
>     ##
>     additionalAlertManagerConfigs: []
>     # - consul_sd_configs:
>     #   - server: consul.dev.test:8500
>     #     scheme: http
>     #     datacenter: dev
>     #     tag_separator: ','
>     #     services:
>     #       - metrics-prometheus-alertmanager
> 
>     ## AdditionalAlertRelabelConfigs allows specifying Prometheus alert relabel configurations. Alert relabel configurations specified are appended
>     ## to the configurations generated by the Prometheus Operator. Alert relabel configurations specified must have the form as specified in the
>     ## official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs.
>     ## As alert relabel configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the
>     ## possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible alert relabel
>     ## configs are going to break Prometheus after the upgrade.
>     ##
>     additionalAlertRelabelConfigs: []
>     # - separator: ;
>     #   regex: prometheus_replica
>     #   replacement: $1
>     #   action: labeldrop
> 
>     ## SecurityContext holds pod-level security attributes and common container settings.
>     ## This defaults to non root user with uid 1000 and gid 2000.
>     ## https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md
>     ##
>     securityContext:
>       runAsNonRoot: true
>       runAsUser: 1000
>       fsGroup: 2000
> 
>     ## 	Priority class assigned to the Pods
>     ##
>     priorityClassName: ""
> 
>     ## Thanos configuration allows configuring various aspects of a Prometheus server in a Thanos environment.
>     ## This section is experimental, it may change significantly without deprecation notice in any release.
>     ## This is experimental and may change significantly without backward compatibility in any release.
>     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#thanosspec
>     ##
>     thanos: {}
> 
>     ## Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to a Prometheus pod.
>     ##  if using proxy extraContainer  update targetPort with proxy container port
>     containers: []
> 
>     ## Enable additional scrape configs that are managed externally to this chart. Note that the prometheus
>     ## will fail to provision if the correct secret does not exist.
>     ## This option requires that you are maintaining a secret in the same namespace as Prometheus with
>     ## a name of 'prometheus-operator-prometheus-scrape-confg' and a key of 'additional-scrape-configs.yaml' that
>     ## contains a list of scrape_config's. The name of the secret may vary if you utilize the "fullnameOverride".
>     ## This feature cannot be used in conjunction with the additionalScrapeConfigs attribute (the helm-generated
>     ## secret will overwrite your self-maintained secret).
>     ##
>     ## scrape_config docs: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config
>     ## explanation of "confg" typo: https://github.com/helm/charts/issues/13368
>     additionalScrapeConfigsExternal: false
> 
>     ## PortName to use for Prometheus.
>     ##
>     portName: "web"
> 
>   additionalServiceMonitors: []
>   ## Name of the ServiceMonitor to create
>   ##
>   # - name: ""
> 
>     ## Additional labels to set used for the ServiceMonitorSelector. Together with standard labels from
>     ## the chart
>     ##
>     # additionalLabels: {}
> 
>     ## Service label for use in assembling a job name of the form <label value>-<port>
>     ## If no label is specified, the service name is used.
>     ##
>     # jobLabel: ""
> 
>     ## labels to transfer from the kubernetes service to the target
>     ##
>     # targetLabels: ""
> 
>     ## Label selector for services to which this ServiceMonitor applies
>     ##
>     # selector: {}
> 
>     ## Namespaces from which services are selected
>     ##
>     # namespaceSelector:
>       ## Match any namespace
>       ##
>       # any: false
> 
>       ## Explicit list of namespace names to select
>       ##
>       # matchNames: []
> 
>     ## Endpoints of the selected service to be monitored
>     ##
>     # endpoints: []
>       ## Name of the endpoint's service port
>       ## Mutually exclusive with targetPort
>       # - port: ""
> 
>       ## Name or number of the endpoint's target port
>       ## Mutually exclusive with port
>       # - targetPort: ""
> 
>       ## File containing bearer token to be used when scraping targets
>       ##
>       #   bearerTokenFile: ""
> 
>       ## Interval at which metrics should be scraped
>       ##
>       #   interval: 30s
> 
>       ## HTTP path to scrape for metrics
>       ##
>       #   path: /metrics
> 
>       ## HTTP scheme to use for scraping
>       ##
>       #   scheme: http
> 
>       ## TLS configuration to use when scraping the endpoint
>       ##
>       #   tlsConfig:
> 
>           ## Path to the CA file
>           ##
>           # caFile: ""
> 
>           ## Path to client certificate file
>           ##
>           # certFile: ""
> 
>           ## Skip certificate verification
>           ##
>           # insecureSkipVerify: false
> 
>           ## Path to client key file
>           ##
>           # keyFile: ""
> 
>           ## Server name used to verify host name
>           ##
>           # serverName: ""
> 
>   additionalPodMonitors: []
>   ## Name of the PodMonitor to create
>   ##
>   # - name: ""
> 
>     ## Additional labels to set used for the PodMonitorSelector. Together with standard labels from
>     ## the chart
>     ##
>     # additionalLabels: {}
> 
>     ## Pod label for use in assembling a job name of the form <label value>-<port>
>     ## If no label is specified, the pod endpoint name is used.
>     ##
>     # jobLabel: ""
> 
>     ## Label selector for pods to which this PodMonitor applies
>     ##
>     # selector: {}
> 
>     ## PodTargetLabels transfers labels on the Kubernetes Pod onto the target.
>     ##
>     # podTargetLabels: {}
> 
>     ## SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
>     ##
>     # sampleLimit: 0
> 
>     ## Namespaces from which pods are selected
>     ##
>     # namespaceSelector:
>       ## Match any namespace
>       ##
>       # any: false
> 
>       ## Explicit list of namespace names to select
>       ##
>       # matchNames: []
> 
>     ## Endpoints of the selected pods to be monitored
>     ## https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#podmetricsendpoint
>     ##
>     # podMetricsEndpoints: []
